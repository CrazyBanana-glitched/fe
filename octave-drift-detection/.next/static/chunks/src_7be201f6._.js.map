{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService.ts"],"sourcesContent":["import { KPI, PlotDataPoint, TableDataPoint, RawErrorData } from '../types/dbTypes';\r\n\r\nconst API_BASE = 'http://localhost:5000/api';\r\nconst MAX_RETRIES = 3;\r\nconst RETRY_DELAY = 1000; // 1 second\r\n\r\n\r\nasync function fetchWithRetry(url: string, options: RequestInit = {}, retries = MAX_RETRIES): Promise<globalThis.Response> {\r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n    return response;\r\n  } catch (error) {\r\n    if (retries <= 0) throw error;\r\n    console.warn(`Retrying ${url} (${MAX_RETRIES - retries + 1}/${MAX_RETRIES})`);\r\n    await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));\r\n    return fetchWithRetry(url, options, retries - 1);\r\n  }\r\n}\r\n\r\nexport async function fetchBusinessUnits(): Promise<string[]> {\r\n  try {\r\n    const response = await fetchWithRetry(`${API_BASE}/businessUnits`);\r\n    const data = await response.json();\r\n    if (!Array.isArray(data)) {\r\n      throw new Error('Invalid business units response format');\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Failed to fetch business units:', error);\r\n    throw new Error('Failed to fetch business units. Please try again later.');\r\n  }\r\n}\r\n\r\nexport async function fetchMode1KPIs(retries = MAX_RETRIES): Promise<KPI[]> {\r\n  try {\r\n    const response = await fetchWithRetry(`${API_BASE}/metrics/1`);\r\n    console.log('API response status:', response.status);\r\n    console.log('API response headers:', Object.fromEntries(response.headers.entries()));\r\n    const text = await response.text();\r\n    console.log('Raw API response:', text);\r\n    console.log('Response length:', text.length);\r\n    \r\n    try {\r\n      // First clean the response text\r\n      const cleanedText = text.trim();\r\n      \r\n      // Enhanced error code detection with better pattern matching\r\n      const errorCodePatterns = [\r\n        /^[A-Z0-9]{5,8}$/i,                // Case-insensitive plain error code\r\n        /^\"[A-Z0-9]{5,8}\"$/i,              // Case-insensitive quoted error code  \r\n        /(?:code|error)[\":\\s]+([A-Z0-9]{5,8})/i, // Matches \"code\":\"ABC123\" or error: \"ABC123\"\r\n        /(?:error|code)[\":\\s]+([A-Z0-9]{5,8})/i  // Matches error:\"ABC123\" or code: \"ABC123\"\r\n      ];\r\n      \r\n      let errorCode = null;\r\n      for (const pattern of errorCodePatterns) {\r\n        const match = cleanedText.match(pattern);\r\n        if (match) {\r\n          errorCode = match[0].replace(/[\"{}[\\]]/g, ''); // Clean the code\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if (errorCode) {\r\n        const errorDetails = {\r\n          code: errorCode,\r\n          status: response.status,\r\n          headers: Object.fromEntries(response.headers.entries()),\r\n          url: response.url,\r\n          timestamp: new Date().toISOString(),\r\n          rawResponse: text,\r\n          retryAttempt: MAX_RETRIES - retries + 1\r\n        };\r\n        console.error('Backend error detected:', errorDetails);\r\n        \r\n        // If we have retries left, automatically retry\r\n        if (retries > 0) {\r\n          console.warn(`Retrying due to backend error code (${cleanedText})...`);\r\n          await new Promise(resolve => setTimeout(resolve, RETRY_DELAY));\r\n          return fetchMode1KPIs(retries - 1);\r\n        }\r\n        \r\n        throw new Error(`Backend service temporarily unavailable (code: ${cleanedText})`);\r\n      }\r\n      \r\n      // Check if response looks like JSON (starts with { or [)\r\n      if (!(cleanedText.startsWith('{') || cleanedText.startsWith('['))) {\r\n        console.error('Unexpected non-JSON response:', {\r\n          response: cleanedText,\r\n          status: response.status,\r\n          headers: Object.fromEntries(response.headers.entries())\r\n        });\r\n        throw new Error(`Unexpected API response format: ${cleanedText.substring(0, 20)}...`);\r\n      }\r\n\r\n      let data;\r\n      try {\r\n        // First try parsing the cleaned text directly\r\n        try {\r\n          data = JSON.parse(cleanedText);\r\n        } catch (initialError) {\r\n          // If direct parse fails, try extracting JSON\r\n          const jsonStart = cleanedText.search(/[{\\[]/);\r\n          if (jsonStart === -1) {\r\n            throw new Error('No JSON found in response');\r\n          }\r\n          \r\n          // More robust JSON extraction that handles nested structures\r\n          let jsonEnd = jsonStart;\r\n          let bracketCount = 0;\r\n          let inString = false;\r\n          let escapeNext = false;\r\n          \r\n          for (let i = jsonStart; i < cleanedText.length; i++) {\r\n            const char = cleanedText[i];\r\n            \r\n            if (escapeNext) {\r\n              escapeNext = false;\r\n              continue;\r\n            }\r\n            \r\n            if (char === '\\\\') {\r\n              escapeNext = true;\r\n              continue;\r\n            }\r\n            \r\n            if (char === '\"') {\r\n              inString = !inString;\r\n              continue;\r\n            }\r\n            \r\n            if (!inString) {\r\n              if (char === '{' || char === '[') bracketCount++;\r\n              if (char === '}' || char === ']') bracketCount--;\r\n              if (bracketCount === 0) {\r\n                jsonEnd = i;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          \r\n          const jsonText = cleanedText.substring(jsonStart, jsonEnd + 1);\r\n          data = JSON.parse(jsonText);\r\n        }\r\n    } catch (err) {\r\n        const parseError = err instanceof Error ? err : new Error(String(err));\r\n        console.error('JSON parse error:', {\r\n          error: parseError.message,\r\n          response: cleanedText,\r\n          status: response.status,\r\n          headers: Object.fromEntries(response.headers.entries()),\r\n          stack: parseError.stack\r\n        });\r\n        throw new Error(`API response parsing failed: ${parseError.message}`);\r\n      }\r\n\r\n      // Handle both array and object response formats\r\n      if (Array.isArray(data)) {\r\n        // If response is an array, assume it's the kpis array\r\n        data = { kpis: data };\r\n      }\r\n\r\n      // Validate the data structure\r\n      if (!data || !data.kpis) {\r\n        console.error('Invalid KPIs format:', {\r\n          response: data,\r\n          status: response.status,\r\n          headers: Object.fromEntries(response.headers.entries())\r\n        });\r\n        throw new Error('Invalid KPIs response format - missing kpis array');\r\n      }\r\n\r\n      if (!Array.isArray(data.kpis)) {\r\n        console.error('KPIs is not an array:', data.kpis);\r\n        throw new Error('Invalid KPIs array format');\r\n      }\r\n\r\n      // Process each KPI and remove the ID field\r\n      const processedKPIs = data.kpis.map((kpi: any) => {\r\n        if (!kpi.rowKey || !kpi.value) {\r\n          console.error('Invalid KPI format:', kpi);\r\n          throw new Error('Missing required KPI fields');\r\n        }\r\n\r\n        // Special handling for status KPI\r\n        if (kpi.rowKey === 'status') {\r\n          return {\r\n            rowKey: 'Status',\r\n            value: kpi.value,\r\n            status: kpi.value // Use value as status\r\n          };\r\n        }\r\n\r\n        // For all other KPIs\r\n        return {\r\n          rowKey: kpi.rowKey,\r\n          value: kpi.value,\r\n          status: 'Normal' // Default status\r\n        };\r\n      });\r\n\r\n      console.log('Processed KPIs:', processedKPIs);\r\n      return processedKPIs;\r\n    } catch (parseError: unknown) {\r\n      console.error('JSON parse error:', parseError, 'on text:', text);\r\n      throw new Error('Failed to parse API response');\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to fetch mode1 KPIs:', error);\r\n    throw new Error('Failed to fetch KPIs. Please try again later.');\r\n  }\r\n}\r\n\r\ninterface KPIResponse {\r\n  rowKey: string;\r\n  value: string;\r\n  status?: string;\r\n  businessUnit?: string;\r\n  useCase?: string;\r\n  id?: string;\r\n}\r\n\r\nexport async function fetchMode2KPIs(businessUnit?: string): Promise<KPI[]> {\r\n  try {\r\n    const url = businessUnit \r\n      ? `${API_BASE}/metrics/2/${businessUnit}`\r\n      : `${API_BASE}/metrics/2`;\r\n      \r\n    const response = await fetchWithRetry(url);\r\n    const text = await response.text();\r\n    \r\n    if (!response.ok) {\r\n      console.warn('API returned non-OK status, using mock data');\r\n      return generateMockKPIs();\r\n    }\r\n\r\n    let data;\r\n    try {\r\n      data = JSON.parse(text);\r\n    } catch (parseError) {\r\n      console.error('Failed to parse API response:', parseError);\r\n      throw new Error('Invalid API response format');\r\n    }\r\n\r\n    // Handle both direct array response and wrapped {kpis: [...]} format\r\n    const kpis: KPIResponse[] = Array.isArray(data) ? data : (data?.kpis || []);\r\n    \r\n    if (kpis.length === 0) {\r\n      console.warn('Empty KPIs array received, using mock data');\r\n      return generateMockKPIs();\r\n    }\r\n\r\n    // Enhanced response processing with better type checking\r\n    return kpis.map(kpi => {\r\n      if (!kpi.rowKey || kpi.value === undefined) {\r\n        console.warn('Invalid KPI format:', kpi);\r\n        throw new Error('Invalid KPI response format');\r\n      }\r\n\r\n      return {\r\n        rowKey: kpi.rowKey,\r\n        value: String(kpi.value),\r\n        status: kpi.status || 'Normal',\r\n        businessUnit: kpi.businessUnit,\r\n        useCase: kpi.useCase,\r\n        ...(kpi.id && { id: kpi.id }) // Preserve ID if present\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.error('Failed to fetch mode2 KPIs:', error);\r\n    if (error instanceof Error) {\r\n      throw new Error(`Failed to fetch KPIs: ${error.message}`);\r\n    }\r\n    throw new Error('Failed to fetch KPIs. Please try again later.');\r\n  }\r\n}\r\n\r\nconst mockMode3KPIs: KPI[] = [\r\n  { id: 'KPI-1', rowKey: 'alertTime', value: new Date().toISOString().slice(0,16).replace('T', ' ') },\r\n  { id: 'KPI-2', rowKey: 'runtimeCount', value: '150' },\r\n  { id: 'KPI-3', rowKey: 'alertKeeper', value: 'System Admin' },\r\n  { id: 'KPI-4', rowKey: 'jensenShannon', value: '0.123' },\r\n  { id: 'KPI-5', rowKey: 'psi', value: '0.045' },\r\n  { id: 'KPI-6', rowKey: 'status', value: 'Normal' },\r\n  { id: 'KPI-7', rowKey: 'refTrueA', value: '1000' },\r\n  { id: 'KPI-8', rowKey: 'refFalseB', value: '50' },\r\n  { id: 'KPI-9', rowKey: 'refTrueB', value: '980' },\r\n  { id: 'KPI-10', rowKey: 'refFalseA', value: '40' },\r\n  { id: 'KPI-11', rowKey: 'refPrecision', value: '0.92' },\r\n  { id: 'KPI-12', rowKey: 'refRecall', value: '0.89' },\r\n  { id: 'KPI-13', rowKey: 'refF1', value: '0.90' },\r\n  { id: 'KPI-14', rowKey: 'refAccuracy', value: '0.91' },\r\n  { id: 'KPI-15', rowKey: 'currTrueA', value: '950' },\r\n  { id: 'KPI-16', rowKey: 'currFalseB', value: '60' },\r\n  { id: 'KPI-17', rowKey: 'currTrueB', value: '970' },\r\n  { id: 'KPI-18', rowKey: 'currFalseA', value: '45' },\r\n  { id: 'KPI-19', rowKey: 'currPrecision', value: '0.90' },\r\n  { id: 'KPI-20', rowKey: 'currRecall', value: '0.87' },\r\n  { id: 'KPI-21', rowKey: 'currF1', value: '0.88' },\r\n  { id: 'KPI-22', rowKey: 'currAccuracy', value: '0.89' },\r\n  { id: 'KPI-23', rowKey: 'xaiAnalysis', value: 'Model shows moderate drift with slight performance degradation.' },\r\n  { id: 'KPI-24', rowKey: 'recommendation', value: 'Monitor closely and consider retraining if trend continues.' }\r\n];\r\n\r\nexport async function fetchMode3KPIs(): Promise<KPI[]> {\r\n  // Return mock data forcibly for mode3 KPIs\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(mockMode3KPIs);\r\n    }, 500); // simulate network delay\r\n  });\r\n}\r\n\r\nexport async function fetchMode4KPIs(): Promise<KPI[]> {\r\n  try {\r\n    const response = await fetchWithRetry(`${API_BASE}/metrics/4`);\r\n    const data = await response.json();\r\n    \r\n    if (!Array.isArray(data)) {\r\n      throw new Error('Invalid KPIs response format');\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Failed to fetch mode4 KPIs:', error);\r\n    throw new Error('Failed to fetch KPIs. Please try again later.');\r\n  }\r\n}\r\n\r\nexport async function fetchMode1XAIData(): Promise<string> {\r\n  try {\r\n    const response = await fetchWithRetry(`${API_BASE}/xai/1`);\r\n    const data = await response.json();\r\n    \r\n    if (typeof data === 'string') {\r\n      return data;\r\n    } else if (data?.text) {\r\n      return data.text;\r\n    }\r\n    throw new Error('Invalid XAI response format');\r\n  } catch (error) {\r\n    console.error('Failed to fetch mode1 XAI data:', error);\r\n    throw new Error('Failed to fetch XAI data. Please try again later.');\r\n  }\r\n}\r\n\r\nexport async function fetchMode2XAIData(businessUnit?: string): Promise<string> {\r\n  try {\r\n    const url = businessUnit \r\n      ? `${API_BASE}/xai/2/${businessUnit}`\r\n      : `${API_BASE}/xai/2`;\r\n      \r\n    const response = await fetchWithRetry(url);\r\n    const data = await response.json();\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`API returned status ${response.status}`);\r\n    }\r\n\r\n    // Handle both string and object response formats\r\n    if (typeof data === 'string') {\r\n      return data;\r\n    } else if (data?.text) {\r\n      return data.text;\r\n    } else if (data?.explanation) {\r\n      return data.explanation;\r\n    }\r\n    \r\n    throw new Error('Invalid XAI response format');\r\n  } catch (error) {\r\n    console.error('Failed to fetch mode2 XAI data:', error);\r\n    if (error instanceof Error) {\r\n      throw new Error(`Failed to fetch XAI data: ${error.message}`);\r\n    }\r\n    throw new Error('Failed to fetch XAI data. Please try again later.');\r\n  }\r\n}\r\n\r\ntype BusinessUnit = 'CCS' | 'JMSL';\r\n\r\nfunction generateMockKPIs(): KPI[] {\r\n  const now = new Date();\r\n  const businessUnits: BusinessUnit[] = ['CCS', 'JMSL'];\r\n  const useCases: Record<BusinessUnit, string[]> = {\r\n    'CCS': ['CC-Di', 'CC-MT'],\r\n    'JMSL': ['JM-Ch']\r\n  };\r\n  const selectedBU = businessUnits[Math.floor(Math.random() * businessUnits.length)] as BusinessUnit;\r\n  \r\n  return [\r\n    {\r\n      rowKey: 'alertTime',\r\n      value: new Date(now.getTime() - Math.random() * 48 * 60 * 60 * 1000).toISOString(),\r\n      status: 'Normal',\r\n      businessUnit: selectedBU,\r\n      useCase: useCases[selectedBU][0]\r\n    },\r\n    {\r\n      rowKey: 'runtimeCount', \r\n      value: Math.floor(Math.random() * 300).toString(),\r\n      status: 'Normal',\r\n      businessUnit: selectedBU,\r\n      useCase: useCases[selectedBU][0]\r\n    },\r\n    {\r\n      rowKey: 'alertKeeper',\r\n      value: `${selectedBU} Admin`,\r\n      status: 'Normal',\r\n      businessUnit: selectedBU,\r\n      useCase: useCases[selectedBU][0]\r\n    },\r\n    {\r\n      rowKey: 'currentDrift1',\r\n      value: Math.random().toFixed(2),\r\n      status: Math.random() > 0.8 ? 'Warning' : 'Normal',\r\n      businessUnit: selectedBU,\r\n      useCase: useCases[selectedBU][0]\r\n    },\r\n    {\r\n      rowKey: 'currentDrift2',\r\n      value: Math.random().toFixed(2),\r\n      status: Math.random() > 0.8 ? 'Warning' : 'Normal',\r\n      businessUnit: selectedBU,\r\n      useCase: useCases[selectedBU][0]\r\n    },\r\n    {\r\n      rowKey: 'status',\r\n      value: Math.random() > 0.9 ? 'Error' : (Math.random() > 0.7 ? 'Warning' : 'Normal'),\r\n      status: Math.random() > 0.9 ? 'Error' : (Math.random() > 0.7 ? 'Warning' : 'Normal'),\r\n      businessUnit: selectedBU,\r\n      useCase: useCases[selectedBU][0]\r\n    },\r\n    {\r\n      rowKey: 'businessUnit',\r\n      value: selectedBU,\r\n      status: 'Normal',\r\n      businessUnit: selectedBU,\r\n      useCase: useCases[selectedBU][0]\r\n    },\r\n    {\r\n      rowKey: 'useCase',\r\n      value: useCases[selectedBU][0],\r\n      status: 'Normal',\r\n      businessUnit: selectedBU,\r\n      useCase: useCases[selectedBU][0]\r\n    }\r\n  ];\r\n}\r\n\r\nexport async function checkBackendHealth(): Promise<boolean> {\r\n  try {\r\n    const response = await fetchWithRetry(`${API_BASE}/health`, {}, 1); // Only retry once for health check\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Backend health check failed:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function fetchErrors(): Promise<{plotData: PlotDataPoint[], tableData: TableDataPoint[]}> {\r\n  try {\r\n    const response = await fetchWithRetry(`${API_BASE}/errors`);\r\n    const text = await response.text();\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`API returned status ${response.status}`);\r\n    }\r\n\r\n    let backendErrors;\r\n    try {\r\n      backendErrors = JSON.parse(text);\r\n    } catch (parseError: unknown) {\r\n      console.error('Failed to parse errors response:', parseError, 'Response:', text);\r\n      throw new Error('Invalid errors response format');\r\n    }\r\n\r\n    if (!backendErrors) {\r\n      throw new Error('Empty errors response');\r\n    }\r\n\r\n    // Enhanced error data processing with better type safety\r\n    const processErrorData = (err: RawErrorData) => {\r\n      if (!err.id) {\r\n        console.error('Backend error data missing ID:', err);\r\n        throw new Error('Backend error data is missing required id field');\r\n      }\r\n      \r\n      const meanPred = typeof err.meanPrediction === 'number' ? err.meanPrediction : 0;\r\n      const errorVal = typeof err.error === 'number' ? err.error : 0;\r\n      \r\n      return {\r\n        id: err.id,\r\n        timePeriod: err.timePeriod || new Date().toISOString(),\r\n        meanPrediction: meanPred,\r\n        error: errorVal,\r\n        percentageError: typeof err.percentageError === 'number' \r\n          ? err.percentageError \r\n          : (meanPred ? (errorVal / meanPred) * 100 : 0),\r\n        status: err.exceedsThreshold ? 'Alert' : 'Normal'\r\n      };\r\n    };\r\n\r\n    // Handle both array and object response formats\r\n    const errors = Array.isArray(backendErrors) ? \r\n      {plotData: [], tableData: backendErrors} : \r\n      backendErrors;\r\n      \r\n    const plotData: PlotDataPoint[] = (errors.plotData || []).map((err: RawErrorData) => {\r\n      const timePeriod = err.timePeriod || new Date().toISOString();\r\n      const errorValue = typeof err.error === 'number' ? err.error : 0;\r\n      return {\r\n        x: timePeriod,\r\n        y: errorValue,\r\n        exceedsThreshold: Boolean(err.exceedsThreshold)\r\n      } as PlotDataPoint;\r\n    });\r\n\r\n    const tableData: TableDataPoint[] = (errors.tableData || []).map((err: RawErrorData) => {\r\n      const timePeriod = err.timePeriod || new Date().toISOString();\r\n      const meanPrediction = typeof err.meanPrediction === 'number' ? err.meanPrediction : 0;\r\n      const errorValue = typeof err.error === 'number' ? err.error : 0;\r\n      const percentageError = typeof err.percentageError === 'number' ? err.percentageError : 0;\r\n      return {\r\n        id: err.id || '',\r\n        timePeriod: timePeriod,\r\n        meanPrediction: meanPrediction,\r\n        error: errorValue,\r\n        percentageError: percentageError,\r\n        status: err.exceedsThreshold ? 'Alert' : 'Normal'\r\n      } as TableDataPoint;\r\n    });\r\n\r\n    // If no data, generate sample data\r\n    if (plotData.length === 0 && tableData.length === 0) {\r\n      console.warn('No error data received, generating sample data');\r\n      const sampleErrors: RawErrorData[] = Array.from({length: 10}, (_, i) => ({\r\n        id: `MISSING_BACKEND_ID_${i}`,\r\n        timePeriod: new Date(Date.now() - (i * 86400000)).toISOString(),\r\n        meanPrediction: Math.random() * 100,\r\n        error: Math.random() * 20,\r\n        exceedsThreshold: Math.random() > 0.7,\r\n        percentageError: Math.random() * 30\r\n      }));\r\n\r\n      return {\r\n        plotData: sampleErrors.map((err: RawErrorData) => ({\r\n          x: err.timePeriod || new Date().toISOString(),\r\n          y: err.error || 0,\r\n          exceedsThreshold: Boolean(err.exceedsThreshold)\r\n        } as PlotDataPoint)),\r\n        tableData: sampleErrors.map((err: RawErrorData) => ({\r\n          id: err.id || '',\r\n          timePeriod: err.timePeriod || new Date().toISOString(),\r\n          meanPrediction: err.meanPrediction || 0,\r\n          error: err.error || 0,\r\n          percentageError: err.percentageError || 0,\r\n          status: err.exceedsThreshold ? 'Alert' : 'Normal'\r\n        } as TableDataPoint))\r\n      };\r\n    }\r\n\r\n    return { plotData, tableData };\r\n  } catch (error) {\r\n    console.error('Failed to fetch errors:', error);\r\n    \r\n    // Generate comprehensive fallback data\r\n      const sampleErrors: RawErrorData[] = Array.from({length: 10}, (_, i) => ({\r\n        id: `MISSING_BACKEND_ID_${i}`,\r\n        timePeriod: new Date(Date.now() - (i * 86400000)).toISOString(),\r\n        meanPrediction: Math.random() * 100,\r\n        error: Math.random() * 20,\r\n        exceedsThreshold: Math.random() > 0.7,\r\n        percentageError: Math.random() * 30\r\n      }));\r\n\r\n      return {\r\n        plotData: sampleErrors.map((err: RawErrorData) => ({\r\n          x: err.timePeriod || new Date().toISOString(),\r\n          y: err.error || 0,\r\n          exceedsThreshold: Boolean(err.exceedsThreshold)\r\n        } as PlotDataPoint)),\r\n        tableData: sampleErrors.map((err: RawErrorData) => ({\r\n          id: err.id || '',\r\n          timePeriod: err.timePeriod || new Date().toISOString(),\r\n          meanPrediction: err.meanPrediction || 0,\r\n          error: err.error || 0,\r\n          percentageError: err.percentageError || 0,\r\n          status: err.exceedsThreshold ? 'Alert' : 'Normal'\r\n        } as TableDataPoint))\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/components/D3ConfusionMatrix.tsx"],"sourcesContent":["'use client'\r\nimport * as d3 from 'd3'\r\nimport { useEffect, useRef } from 'react'\r\n\r\ntype Props = {\r\n  data: number[][]\r\n  labels: string[]\r\n  title: string\r\n  width?: number\r\n  height?: number\r\n  cellSize?: number\r\n  minCellSize?: number\r\n  maxCellSize?: number\r\n}\r\n\r\nexport default function D3ConfusionMatrix({\r\n  data,\r\n  labels,\r\n  title,\r\n  width = 500,\r\n  height = 500,\r\n  cellSize = 40,\r\n  minCellSize = 20,\r\n  maxCellSize = 60\r\n}: Props) {\r\n  const ref = useRef<HTMLDivElement>(null)\r\n\r\n  useEffect(() => {\r\n    if (!ref.current || !data?.length || !labels?.length) return\r\n    \r\n    // Validate dimensions\r\n    const safeWidth = Math.max(100, width || 500)\r\n    const safeHeight = Math.max(100, height || 500)\r\n    const containerWidth = ref.current?.clientWidth || safeWidth\r\n    const containerHeight = ref.current?.clientHeight || safeHeight\r\n    const calculatedCellSize = Math.min(\r\n      Math.max(minCellSize || 20, Math.min(containerWidth, containerHeight) / Math.max(data.length, data[0]?.length || 1)),\r\n      maxCellSize || 60\r\n    )\r\n    const safeCellSize = Math.max(10, cellSize || calculatedCellSize)\r\n\r\n    // Clear previous render\r\n    ref.current.innerHTML = ''\r\n\r\n    const margin = { top: 30, right: 30, bottom: 30, left: 30 }\r\n    const innerWidth = safeWidth - margin.left - margin.right\r\n    const innerHeight = safeHeight - margin.top - margin.bottom\r\n\r\n    const svg = d3.select(ref.current)\r\n      .append('svg')\r\n      .attr('width', safeWidth)\r\n      .attr('height', safeHeight)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n    // Color scale\r\n    const colorScale = d3.scaleSequential(d3.interpolateBlues)\r\n      .domain([0, d3.max(data.flat()) || 1])\r\n\r\n    // Create matrix\r\n    svg.selectAll('g')\r\n      .data(data)\r\n      .enter()\r\n      .append('g')\r\n      .selectAll('rect')\r\n      .data((d, i) => d.map((value, j) => ({value, x: j, y: i})))\r\n      .enter()\r\n      .append('rect')\r\n      .attr('x', d => d.x * safeCellSize)\r\n      .attr('y', d => d.y * safeCellSize)\r\n      .attr('width', safeCellSize - 1)\r\n      .attr('height', safeCellSize - 1)\r\n      .style('fill', d => colorScale(d.value))\r\n      .style('stroke', '#fff')\r\n\r\n    // Add labels\r\n    svg.selectAll('.row-label')\r\n      .data(labels)\r\n      .enter()\r\n      .append('text')\r\n      .attr('x', -5)\r\n      .attr('y', (d, i) => i * safeCellSize + safeCellSize / 2)\r\n      .style('text-anchor', 'end')\r\n      .style('fill', '#e5e7eb')\r\n      .text(d => d)\r\n\r\n    svg.selectAll('.col-label')\r\n      .data(labels)\r\n      .enter()\r\n      .append('text')\r\n      .attr('y', -5)\r\n      .attr('x', (d, i) => i * safeCellSize + safeCellSize / 2)\r\n      .style('text-anchor', 'middle')\r\n      .style('fill', '#e5e7eb')\r\n      .text(d => d)\r\n\r\n  }, [data, labels, width, height, cellSize, minCellSize, maxCellSize])\r\n\r\n  return (\r\n    <div className=\"relative h-full w-full\">\r\n      <h3 className=\"text-lg font-medium text-blue-200 mb-2\">{title}</h3>\r\n      <div ref={ref} />\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 772, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode3/page.tsx"],"sourcesContent":["'use client'\nimport { useEffect, useState } from 'react'\nimport 'chartjs-chart-matrix'\nimport Head from 'next/head'\nimport { fetchMode3KPIs, fetchErrors } from '../../services/backendService'\nimport D3ConfusionMatrix from '../../components/D3ConfusionMatrix'\n\ninterface KPI {\n  rowKey: string\n  value: string\n  status?: string\n}\n\ninterface ErrorData {\n  predicted: string\n  actual: string\n  timePeriod: string\n  meanPrediction: number\n  error: number\n  exceedsThreshold: boolean\n  yTrue?: number\n  yPred?: number\n  percentageError?: number\n  id?: any\n}\n\ninterface ErrorDataResponse {\n  tableData: ErrorData[]\n  summary: {\n    totalErrors: number\n    errorRate: number\n    misclassificationRate: number\n    status: string\n  }\n}\n\ninterface ConfusionMatrixData {\n  reference: {\n    matrix: number[][]\n    labels: string[]\n    precision: number\n    recall: number\n    f1: number\n    accuracy: number\n  }\n  current: {\n    matrix: number[][]\n    labels: string[]\n    precision: number\n    recall: number\n    f1: number\n    accuracy: number\n  }\n}\n\n// Helper function to safely extract and validate numbers\nconst getValidNumber = (kpis: KPI[], key: string, fallback = 0): number => {\n  const value = kpis.find(k => k.rowKey === key)?.value;\n  const num = Number(value);\n  return isNaN(num) ? fallback : Math.max(0, num);\n};\n\nexport default function Mode3Page() {\n  const [businessUnit, setBusinessUnit] = useState('CCS')\n  const [useCase, setUseCase] = useState('CC-Di')\n  const [kpis, setKpis] = useState<KPI[]>([])\n  const [errors, setErrors] = useState<{plotData: PlotDataPoint[], tableData: TableDataPoint[]}>({\n    plotData: [],\n    tableData: []\n  })\n  const [confusionMatrix, setConfusionMatrix] = useState<ConfusionMatrixData>({\n    reference: {\n      matrix: [[0, 0], [0, 0]],\n      labels: ['Class A', 'Class B'],\n      precision: 0,\n      recall: 0,\n      f1: 0,\n      accuracy: 0\n    },\n    current: {\n      matrix: [[0, 0], [0, 0]],\n      labels: ['Class A', 'Class B'],\n      precision: 0,\n      recall: 0,\n      f1: 0,\n      accuracy: 0\n    }\n  })\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const initData = async () => {\n      try {\n        const savedBusinessUnit = localStorage.getItem('businessUnit')\n        const savedUseCase = localStorage.getItem('useCase')\n        if (savedBusinessUnit) setBusinessUnit(savedBusinessUnit)\n        if (savedUseCase) setUseCase(savedUseCase)\n\n        const kpiData = await fetchMode3KPIs()\n        const errorData = await fetchErrors()\n\n        setKpis(kpiData)\n        setErrors(errorData)\n\n        // Helper function to get numeric value from KPIs\n        const getKpiNumberValue = (key: string): number => {\n          const kpi = kpiData.find((k: any) => k.rowKey === key);\n          if (!kpi) return 0;\n          const num = Number(kpi.value);\n          return isNaN(num) ? 0 : num;\n        };\n\n        setConfusionMatrix({\n          reference: {\n            matrix: [\n              [getKpiNumberValue('refTrueA'), getKpiNumberValue('refFalseB')],\n              [getKpiNumberValue('refFalseA'), getKpiNumberValue('refTrueB')]\n            ],\n            labels: ['Class A', 'Class B'],\n            precision: getKpiNumberValue('refPrecision'),\n            recall: getKpiNumberValue('refRecall'),\n            f1: getKpiNumberValue('refF1'),\n            accuracy: getKpiNumberValue('refAccuracy')\n          },\n          current: {\n            matrix: [\n              [getKpiNumberValue('currTrueA'), getKpiNumberValue('currFalseB')],\n              [getKpiNumberValue('currFalseA'), getKpiNumberValue('currTrueB')]\n            ],\n            labels: ['Class A', 'Class B'],\n            precision: getKpiNumberValue('currPrecision'),\n            recall: getKpiNumberValue('currRecall'),\n            f1: getKpiNumberValue('currF1'),\n            accuracy: getKpiNumberValue('currAccuracy')\n          }\n        });\n\n      } catch (error) {\n        console.error('Error loading data:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n    initData()\n  }, [])\n\n  const handleBusinessUnitChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = e.target.value\n    setBusinessUnit(value)\n    setUseCase('')\n    localStorage.setItem('businessUnit', value)\n  }\n\n  const handleUseCaseChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = e.target.value\n    setUseCase(value)\n    localStorage.setItem('useCase', value)\n  }\n\n  const getUseCaseOptions = () => {\n    if (businessUnit === 'CCS') {\n      return ['CC-Di', 'CC-MT']\n    } else if (businessUnit === 'JMSL') {\n      return ['JM-Ch']\n    }\n    return []\n  }\n\n  return (\n    <div className=\"bg-gray-900 min-h-screen flex flex-col\">\n      <Head>\n        <title>Mode 3 | CL Dashboard</title>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\" />\n      </Head>\n\n      {/* Main Content */}\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">OCTAVE - CL Dashboard</h2>\n          \n          {/* Business Unit and Use Case Selector */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Business Unit</h3>\n              <select\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n                value={businessUnit}\n                onChange={handleBusinessUnitChange}\n              >\n                <option value=\"\">Select Business Unit</option>\n                <option value=\"CCS\">CCS</option>\n                <option value=\"JMSL\">JMSL</option>\n              </select>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Use Case</h3>\n              <select\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n                value={useCase}\n                onChange={handleUseCaseChange}\n                disabled={!businessUnit}\n              >\n                <option value=\"\">{businessUnit ? 'Select Use Case' : 'Select Business Unit first'}</option>\n                {getUseCaseOptions().map(option => (\n                  <option key={option} value={option}>{option}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Short Code</h3>\n              <input\n                type=\"text\"\n                value={useCase || '-'}\n                readOnly\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n              />\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Runtime</h3>\n              <input\n                type=\"text\"\n                value=\"2h 45m\"\n                readOnly\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n              />\n            </div>\n          </div>\n\n          {/* Additional Metrics */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Current Alert Time</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find(k => k.rowKey === 'alertTime')?.value || 'N/A'}\n              </p>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">No. of Runtime</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find(k => k.rowKey === 'runtimeCount')?.value || '0'}\n              </p>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Alert Keeper</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find(k => k.rowKey === 'alertKeeper')?.value || 'N/A'}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Confusion Matrices Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          {/* Reference Confusion Matrix */}\n          <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 border border-gray-700\">\n            <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Reference Confusion Matrix</h2>\n            <div className=\"h-96 bg-gray-700 rounded p-4\">\n              {loading ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <div className=\"text-white\">Loading reference matrix...</div>\n                </div>\n              ) : (\n                <D3ConfusionMatrix\n                  data={confusionMatrix.reference.matrix}\n                  labels={confusionMatrix.reference.labels}\n                  title=\"Reference Matrix\"\n                  width={500}\n                  height={500}\n                />\n              )}\n            </div>\n            <div className=\"mt-4 grid grid-cols-3 gap-2\">\n              <div className=\"bg-blue-900/20 p-2 rounded\">\n                <p className=\"text-xs text-blue-200\">Precision</p>\n                <p className=\"text-lg font-semibold text-white\">\n                  {loading ? '-' : confusionMatrix.reference?.precision?.toFixed(2) || 'N/A'}\n                </p>\n              </div>\n              <div className=\"bg-blue-900/20 p-2 rounded\">\n                <p className=\"text-xs text-blue-200\">Recall</p>\n                <p className=\"text-lg font-semibold text-white\">\n                  {loading ? '-' : confusionMatrix.reference?.recall?.toFixed(2) || 'N/A'}\n                </p>\n              </div>\n              <div className=\"bg-blue-900/20 p-2 rounded\">\n                <p className=\"text-xs text-blue-200\">F1</p>\n                <p className=\"text-lg font-semibold text-white\">\n                  {loading ? '-' : confusionMatrix.reference?.f1?.toFixed(2) || 'N/A'}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Current Confusion Matrix */}\n          <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 border border-gray-700\">\n            <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Current Confusion Matrix</h2>\n            <div className=\"h-96 bg-gray-700 rounded p-4\">\n              {loading ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <div className=\"text-white\">Loading current matrix...</div>\n                </div>\n              ) : (\n                <D3ConfusionMatrix\n                  data={confusionMatrix.current.matrix}\n                  labels={confusionMatrix.current.labels}\n                  title=\"Current Matrix\"\n                  width={500}\n                  height={500}\n                />\n              )}\n            </div>\n            <div className=\"mt-4 grid grid-cols-3 gap-2\">\n              <div className=\"bg-blue-900/20 p-2 rounded\">\n                <p className=\"text-xs text-blue-200\">Precision</p>\n                <p className=\"text-lg font-semibold text-white\">\n                  {loading ? '-' : confusionMatrix.current?.precision?.toFixed(2) || 'N/A'}\n                  {!loading && confusionMatrix.current?.precision && confusionMatrix.reference?.precision && (\n                    <span className=\"text-red-400 text-sm\">\n                      ({((confusionMatrix.current.precision - confusionMatrix.reference.precision)/confusionMatrix.reference.precision * 100).toFixed(1)}%)\n                    </span>\n                  )}\n                </p>\n              </div>\n              <div className=\"bg-blue-900/20 p-2 rounded\">\n                <p className=\"text-xs text-blue-200\">Recall</p>\n                <p className=\"text-lg font-semibold text-white\">\n                  {loading ? '-' : confusionMatrix.current?.recall?.toFixed(2) || 'N/A'}\n                  {!loading && confusionMatrix.current?.recall && confusionMatrix.reference?.recall && (\n                    <span className=\"text-red-400 text-sm\">\n                      ({((confusionMatrix.current.recall - confusionMatrix.reference.recall)/confusionMatrix.reference.recall * 100).toFixed(1)}%)\n                    </span>\n                  )}\n                </p>\n              </div>\n              <div className=\"bg-blue-900/20 p-2 rounded\">\n                <p className=\"text-xs text-blue-200\">F1</p>\n                <p className=\"text-lg font-semibold text-white\">\n                  {loading ? '-' : confusionMatrix.current?.f1?.toFixed(2) || 'N/A'}\n                  {!loading && confusionMatrix.current?.f1 && confusionMatrix.reference?.f1 && (\n                    <span className=\"text-red-400 text-sm\">\n                      ({((confusionMatrix.current.f1 - confusionMatrix.reference.f1)/confusionMatrix.reference.f1 * 100).toFixed(1)}%)\n                    </span>\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Key Performance Indicators */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Key Performance Indicators</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Jensen-Shannon</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find(k => k.rowKey === 'jensenShannon')?.value || 'N/A'}\n              </p>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">PSI</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find(k => k.rowKey === 'psi')?.value || 'N/A'}\n              </p>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Accuracy (Reference)</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : confusionMatrix.reference?.accuracy?.toFixed(2) || 'N/A'}\n              </p>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Accuracy (Current)</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : confusionMatrix.current?.accuracy?.toFixed(2) || 'N/A'}\n                {!loading && confusionMatrix.current?.accuracy && confusionMatrix.reference?.accuracy && (\n                  <span className=\"text-red-400 text-sm\">\n                    ({((confusionMatrix.current.accuracy - confusionMatrix.reference.accuracy)/confusionMatrix.reference.accuracy * 100).toFixed(1)}%)\n                  </span>\n                )}\n              </p>\n            </div>\n          </div>\n          <div className=\"mt-4 bg-yellow-900/20 p-4 rounded-lg border border-yellow-800/50\">\n            <h3 className=\"text-lg font-medium text-yellow-200 mb-2\">Status</h3>\n            <p className={`text-xl ${\n              loading ? '' : \n              kpis.find(k => k.rowKey === 'status')?.value === 'Warning' ? 'text-yellow-300' : \n              kpis.find(k => k.rowKey === 'status')?.value === 'Error' ? 'text-red-400' : \n              'text-green-400'\n            }`}>\n              {loading ? 'Loading...' : kpis.find(k => k.rowKey === 'status')?.value || 'N/A'}\n            </p>\n          </div>\n        </div>\n\n        {/* XAI Result Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">XAI Result</h2>\n          <div className=\"space-y-3 text-white\">\n            <p>{kpis.find(k => k.rowKey === 'xaiAnalysis')?.value || 'Performance analysis loading...'}</p>\n            <ul className=\"list-disc pl-5 space-y-1\">\n              <li>Jensen-Shannon: {kpis.find(k => k.rowKey === 'jensenShannon')?.value || 'N/A'}</li>\n              <li>PSI: {kpis.find(k => k.rowKey === 'psi')?.value || 'N/A'}</li>\n              <li>Accuracy: {confusionMatrix.current?.accuracy?.toFixed(2) || 'N/A'} (Ref: {confusionMatrix.reference?.accuracy?.toFixed(2) || 'N/A'})</li>\n              <li>Precision: {confusionMatrix.current?.precision?.toFixed(2) || 'N/A'} (Ref: {confusionMatrix.reference?.precision?.toFixed(2) || 'N/A'})</li>\n              <li>Recall: {confusionMatrix.current?.recall?.toFixed(2) || 'N/A'} (Ref: {confusionMatrix.reference?.recall?.toFixed(2) || 'N/A'})</li>\n            </ul>\n            <p className=\"font-medium text-yellow-300\">\n              {kpis.find(k => k.rowKey === 'recommendation')?.value || 'Recommendation loading...'}\n            </p>\n          </div>\n        </div>\n\n        {/* Error and Misclassification Percentages */}\n        <div className=\"bg-red-900/20 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-red-800/50\">\n          <h2 className=\"text-2xl font-semibold text-red-300 mb-4\">Error and Misclassification Percentages</h2>\n          <div className=\"space-y-3 text-white\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <h3 className=\"text-lg font-medium text-red-200\">Error Rate</h3>\n                <p className=\"text-2xl font-bold\">\n                  {errors.summary?.errorRate ? (errors.summary.errorRate * 100).toFixed(1) + '%' : 'N/A'}\n                </p>\n                <div className=\"w-full bg-gray-700 rounded-full h-4 mt-2\">\n                  <div \n                    className=\"bg-red-500 h-4 rounded-full\" \n                    style={{width: `${errors.summary?.errorRate ? errors.summary.errorRate * 100 : 0}%`}}\n                  ></div>\n                </div>\n              </div>\n              <div>\n                <h3 className=\"text-lg font-medium text-red-200\">Misclassification Rate</h3>\n                <p className=\"text-2xl font-bold\">\n                  {errors.summary?.misclassificationRate ? (errors.summary.misclassificationRate * 100).toFixed(1) + '%' : 'N/A'}\n                </p>\n              </div>\n            </div>\n            \n            <h3 className=\"text-lg font-medium text-red-200 mt-4\">Worst Performing Cases</h3>\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {errors.tableData\n                .sort((a: ErrorData, b: ErrorData) => (b.percentageError || 0) - (a.percentageError || 0))\n                .slice(0, 3)\n                .map((error: ErrorData, i: number) => (\n                  <li key={i}>\n                    {error.timePeriod}: {error.predicted} → {error.actual} ({error.percentageError}% error)\n                  </li>\n                ))}\n            </ul>\n            <p className=\"font-medium text-yellow-300 mt-2\">\n              {errors.summary?.status ? `Status: ${errors.summary.status}` : 'Status loading...'}\n            </p>\n          </div>\n        </div>\n\n        {/* Misclassified Table */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Misclassified Table</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-700\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">ID</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">Predicted</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">Actual</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-700\">\n                {loading ? (\n                  <tr>\n                    <td colSpan={3} className=\"px-6 py-4 text-center text-sm text-white\">\n                      Loading misclassified data...\n                    </td>\n                  </tr>\n                ) : errors.tableData.length > 0 ? (\n                  errors.tableData.map((error: ErrorData, index: number) => (\n                    <tr key={index} className=\"bg-red-900/10\">\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{error.id}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-300\">{error.predicted}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{error.actual}</td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan={3} className=\"px-6 py-4 text-center text-sm text-white\">\n                      No misclassified data available\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}