{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService.ts"],"sourcesContent":["export async function fetchData() {\n  try {\n    console.log(\"Fetching data from backend via proxy: /api/mode1/data\");\n    const response = await fetch(`/api/mode1/data`, {\n      credentials: 'include',\n    });\n\n    console.log(\"Raw response:\", response);\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const rawData = await response.json();\n\n    console.log(\"Parsed data:\", rawData);\n\n    const driftMetrics = rawData.drift_state?.metrics || {};\n\n    const kpis = [\n      {\n        rowKey: \"Drift Detected\",\n        value: rawData.drift_state?.drift_detected ? \"Yes\" : \"No\",\n        status: rawData.drift_state?.drift_detected ? \"Alert\" : \"Normal\",\n      },\n      {\n        rowKey: \"Error Percentage Threshold\",\n        value: rawData.error_percentage_threshold?.toString() || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Average Percentage Error (All)\",\n        value: rawData.average_percentage_error_all?.toFixed(2) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Average Percentage Error (Exceeding)\",\n        value: rawData.average_percentage_error_exceeding?.toFixed(2) || \"N/A\",\n        status: \"Alert\",\n      },\n      {\n        rowKey: \"kstest\",\n        value: driftMetrics.ks_statistic?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"wasserstein\",\n        value: driftMetrics.wasserstein_distance?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"mseRef\",\n        value: driftMetrics.mean_mse_reference?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"mseCurrent\",\n        value: driftMetrics.mean_mse_current?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"status\",\n        value: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n        status: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n      },\n    ];\n\n    const errors = {\n      plotData: rawData.id_error?.map((item: any) => ({\n        x: item.time_period || \"\",\n        y: item.Mean_Prediction_Error || 0,\n        exceedsThreshold: Math.abs(item.Mean_Prediction_Error) > (rawData.error_percentage_threshold || 0),\n      })) || [],\n      tableData: rawData.id_error?.map((item: any) => ({\n        id: item.id?.toString() || \"\",\n        timePeriod: item.time_period || \"\",\n        meanPrediction: item.Mean_Prediction_Error || 0,\n        error: item.Mean_Prediction_Error || 0,\n        percentageError: Math.abs(item.Mean_Prediction_Error) || 0,\n        status: Math.abs(item.Mean_Prediction_Error) > (rawData.error_percentage_threshold || 0) ? \"Alert\" : \"Normal\",\n      })) || [],\n    };\n\n    // Add outlets_exceeding_threshold data for frontend display\n    const outletsExceedingThreshold = rawData.outlets_exceeding_threshold?.map((item: any) => ({\n      id: item.id?.toString() || \"\",\n      y_true: item.y_true || 0,\n      y_pred: item.y_pred || 0,\n      percentage_error: item.percentage_error || 0,\n    })) || [];\n\n    const xaiExplanation = rawData.explanation || \"No explanation available\";\n\n    return {\n      kpis,\n      errors,\n      outletsExceedingThreshold,\n      xaiExplanation,\n    };\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    throw new Error(\"Failed to fetch and process data\");\n  }\n}\n"],"names":[],"mappings":";;;AAAO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,MAAM,MAAM,CAAC,eAAe,CAAC,EAAE;YAC9C,aAAa;QACf;QAEA,QAAQ,GAAG,CAAC,iBAAiB;QAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QAEA,MAAM,UAAU,MAAM,SAAS,IAAI;QAEnC,QAAQ,GAAG,CAAC,gBAAgB;QAE5B,MAAM,eAAe,QAAQ,WAAW,EAAE,WAAW,CAAC;QAEtD,MAAM,OAAO;YACX;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,iBAAiB,QAAQ;gBACrD,QAAQ,QAAQ,WAAW,EAAE,iBAAiB,UAAU;YAC1D;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,0BAA0B,EAAE,cAAc;gBACzD,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,4BAA4B,EAAE,QAAQ,MAAM;gBAC3D,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,kCAAkC,EAAE,QAAQ,MAAM;gBACjE,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,aAAa,YAAY,EAAE,QAAQ,MAAM;gBAChD,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,aAAa,oBAAoB,EAAE,QAAQ,MAAM;gBACxD,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,aAAa,kBAAkB,EAAE,QAAQ,MAAM;gBACtD,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,aAAa,gBAAgB,EAAE,QAAQ,MAAM;gBACpD,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,iBAAiB,YAAY;gBACzD,QAAQ,QAAQ,WAAW,EAAE,iBAAiB,YAAY;YAC5D;SACD;QAED,MAAM,SAAS;YACb,UAAU,QAAQ,QAAQ,EAAE,IAAI,CAAC,OAAc,CAAC;oBAC9C,GAAG,KAAK,WAAW,IAAI;oBACvB,GAAG,KAAK,qBAAqB,IAAI;oBACjC,kBAAkB,KAAK,GAAG,CAAC,KAAK,qBAAqB,IAAI,CAAC,QAAQ,0BAA0B,IAAI,CAAC;gBACnG,CAAC,MAAM,EAAE;YACT,WAAW,QAAQ,QAAQ,EAAE,IAAI,CAAC,OAAc,CAAC;oBAC/C,IAAI,KAAK,EAAE,EAAE,cAAc;oBAC3B,YAAY,KAAK,WAAW,IAAI;oBAChC,gBAAgB,KAAK,qBAAqB,IAAI;oBAC9C,OAAO,KAAK,qBAAqB,IAAI;oBACrC,iBAAiB,KAAK,GAAG,CAAC,KAAK,qBAAqB,KAAK;oBACzD,QAAQ,KAAK,GAAG,CAAC,KAAK,qBAAqB,IAAI,CAAC,QAAQ,0BAA0B,IAAI,CAAC,IAAI,UAAU;gBACvG,CAAC,MAAM,EAAE;QACX;QAEA,4DAA4D;QAC5D,MAAM,4BAA4B,QAAQ,2BAA2B,EAAE,IAAI,CAAC,OAAc,CAAC;gBACzF,IAAI,KAAK,EAAE,EAAE,cAAc;gBAC3B,QAAQ,KAAK,MAAM,IAAI;gBACvB,QAAQ,KAAK,MAAM,IAAI;gBACvB,kBAAkB,KAAK,gBAAgB,IAAI;YAC7C,CAAC,MAAM,EAAE;QAET,MAAM,iBAAiB,QAAQ,WAAW,IAAI;QAE9C,OAAO;YACL;YACA;YACA;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode1/page.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState, useRef } from 'react';\nimport Head from 'next/head';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport { fetchData } from '../../services/backendService';\n\n// Interfaces for type safety\ninterface KPI {\n  rowKey: string;\n  value: string;\n  status?: string;\n}\n\ninterface PlotDataPoint {\n  x: string;\n  y: number;\n  exceedsThreshold: boolean;\n}\n\ninterface TableDataPoint {\n  id: string;\n  timePeriod: string;\n  meanPrediction?: number;\n  error?: number;\n  percentageError?: number;\n  status: string;\n}\n\ninterface OutletsExceedingThreshold {\n  id: string;\n  y_true: number;\n  y_pred: number;\n  percentage_error: number;\n}\n\ninterface ErrorDataState {\n  plotData: PlotDataPoint[];\n  tableData: TableDataPoint[];\n}\n\nexport default function Mode1Page(): JSX.Element {\n  const chartRef = useRef<Chart | null>(null);\n  const [kpis, setKpis] = useState<KPI[]>([]);\n  const [errors, setErrors] = useState<ErrorDataState>({ plotData: [], tableData: [] });\n  const [outletsExceedingThreshold, setOutletsExceedingThreshold] = useState<OutletsExceedingThreshold[]>([]);\n  const [xaiExplanation, setXaiExplanation] = useState<string>('No explanation available');\n  const [loading, setLoading] = useState<boolean>(true);\n  const [backendError, setBackendError] = useState<string | null>(null);\n\n  // Fetch Data from Backend\n  const initData = async (): Promise<void> => {\n    setLoading(true);\n    setBackendError(null);\n    try {\n      const { kpis: fetchedKpis, errors: fetchedErrors, outletsExceedingThreshold: fetchedOutlets, xaiExplanation: fetchedXai } = await fetchData();\n      setKpis(fetchedKpis);\n      setErrors(fetchedErrors);\n      setOutletsExceedingThreshold(fetchedOutlets);\n      setXaiExplanation(fetchedXai || 'No explanation available');\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      if (error instanceof Error) {\n        setBackendError(`Failed to load data: ${error.message}`);\n      } else {\n        setBackendError('Failed to load data: Unknown error');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    initData();\n  }, []);\n\n  return (\n    <div className=\"bg-gray-900 min-h-screen flex flex-col\">\n      <Head>\n        <title>Mode 1 | Business Dashboard</title>\n      </Head>\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        {/* Backend Error Section */}\n        {backendError && (\n          <div className=\"bg-red-900/50 border border-red-700 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center\">\n              <svg className=\"h-5 w-5 text-red-300 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                />\n              </svg>\n              <h3 className=\"text-lg font-medium text-red-300\">Backend Error</h3>\n            </div>\n            <p className=\"mt-2 text-red-200\">{backendError}</p>\n            <p className=\"mt-2 text-red-200 text-sm\">Displaying fallback data. Some features may be limited.</p>\n            <button\n              onClick={() => initData()}\n              className=\"mt-3 px-4 py-2 bg-red-800/50 hover:bg-red-800 text-white rounded-md text-sm font-medium\"\n            >\n              Retry Connection\n            </button>\n          </div>\n        )}\n\n        {/* Header Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">OCTAVE - RG Dashboard</h2>\n\n          {/* Key Metrics */}\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n            {kpis.map((kpi) => (\n              <div key={kpi.rowKey} className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n                <h3 className=\"text-lg font-medium text-blue-200 mb-2\">{kpi.rowKey}</h3>\n                <p\n                  className={`text-xl ${\n                    kpi.status === 'Warning' ? 'text-yellow-400' : kpi.status === 'Error' ? 'text-red-400' : 'text-green-400'\n                  }`}\n                >\n                  {loading ? 'Loading...' : kpi.value || 'N/A'}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* MAPE/MSE Plot Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold mb-4\">MAPE/MSE Plot</h2>\n          <div className=\"h-64 bg-gray-700 rounded p-4\">\n            {loading ? (\n              <div className=\"flex items-center justify-center h-full\">\n                <div className=\"text-white\">Loading plot data...</div>\n              </div>\n            ) : (\n              <canvas id=\"mapeMseChart\" className=\"w-full h-full\" ref={(el) => {\n                if (el && !loading) {\n                  const ctx = el.getContext('2d');\n                  if (ctx) {\n                    if (chartRef.current) {\n                      chartRef.current.destroy();\n                    }\n                    chartRef.current = new Chart(ctx, {\n                      type: 'line',\n                      data: {\n                        labels: errors.plotData.map((item) => item.x),\n                        datasets: [\n                          {\n                            label: 'Error Values',\n                            data: errors.plotData.map((item) => item.y),\n                            borderColor: 'rgb(75, 192, 192)',\n                            backgroundColor: errors.plotData.map((item) =>\n                              item.exceedsThreshold ? 'rgba(255, 99, 132, 0.5)' : 'rgba(54, 162, 235, 0.5)'\n                            ),\n                            borderWidth: 2,\n                            tension: 0.1,\n                          },\n                        ],\n                      },\n                      options: {\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        plugins: {\n                          legend: {\n                            labels: {\n                              color: '#e5e7eb',\n                            },\n                          },\n                          tooltip: {\n                            mode: 'index',\n                            intersect: false,\n                          },\n                        },\n                        scales: {\n                          x: {\n                            title: {\n                              display: true,\n                              text: 'Time Period',\n                              color: '#93c5fd',\n                              font: {\n                                weight: 'bold',\n                              },\n                            },\n                            grid: {\n                              color: 'rgba(255, 255, 255, 0.1)',\n                            },\n                            ticks: {\n                              color: '#e5e7eb',\n                              font: {\n                                size: 12,\n                              },\n                            },\n                          },\n                          y: {\n                            title: {\n                              display: true,\n                              text: 'Error Value',\n                              color: '#93c5fd',\n                              font: {\n                                weight: 'bold',\n                              },\n                            },\n                            beginAtZero: true,\n                            grid: {\n                              color: 'rgba(255, 255, 255, 0.1)',\n                            },\n                            ticks: {\n                              color: '#e5e7eb',\n                              font: {\n                                size: 12,\n                              },\n                              callback: (value) => typeof value === 'number' ? value.toFixed(2) : value,\n                            },\n                          },\n                        },\n                        animation: {\n                          duration: 1000,\n                          easing: 'easeInOutQuad',\n                        },\n                        elements: {\n                          point: {\n                            radius: 4,\n                            hoverRadius: 6,\n                          },\n                        },\n                      },\n                    });\n                  }\n                }\n              }}\n            />\n            )}\n          </div>\n        </div>\n\n        {/* KPIs Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Key Performance Indicators</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">KStest</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find((k) => k.rowKey === 'kstest')?.value || 'N/A'}\n              </p>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Wasserstein</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find((k) => k.rowKey === 'wasserstein')?.value || 'N/A'}\n              </p>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Ref MSE</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find((k) => k.rowKey === 'mseRef')?.value || 'N/A'}\n              </p>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">MSE</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find((k) => k.rowKey === 'mseCurrent')?.value || 'N/A'}\n              </p>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Status</h3>\n              <p\n                className={`text-xl ${\n                  loading\n                    ? ''\n                    : kpis.find((k) => k.rowKey === 'status')?.value === 'Warning'\n                    ? 'text-yellow-400'\n                    : kpis.find((k) => k.rowKey === 'status')?.value === 'Error'\n                    ? 'text-red-400'\n                    : 'text-green-400'\n                }`}\n              >\n                {loading ? 'Loading...' : kpis.find((k) => k.rowKey === 'status')?.value || 'N/A'}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Debug Data Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Debug Data</h2>\n          <div className=\"space-y-3 text-white text-xs overflow-auto max-h-60\">\n            <pre>{JSON.stringify({ kpis, errors, outletsExceedingThreshold, xaiExplanation }, null, 2)}</pre>\n          </div>\n        </div>\n\n        {/* XAI Result Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">XAI Result</h2>\n          <div className=\"space-y-3 text-white\">\n            {loading ? (\n              <p>Loading XAI explanation...</p>\n            ) : xaiExplanation ? (\n              <p>{xaiExplanation}</p>\n            ) : (\n              <p className=\"text-red-400\">No explanation available</p>\n            )}\n          </div>\n        </div>\n\n        {/* Error Tables Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Error Comparison */}\n          <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 border border-gray-700\">\n            <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Error Comparison</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-700\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">ID</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">Time Period</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-red-400 uppercase tracking-wider\">Error</th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-700\">\n                  {errors.tableData.slice(0, 5).map((error, index) => (\n                    <tr key={index}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{error.id}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{error.timePeriod}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-400\">\n                        {(error.error ?? 0).toFixed(2)}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Threshold Exceedances */}\n          <div className=\"bg-red-900/20 rounded-xl shadow-md overflow-hidden p-6 border border-red-800/50\">\n            <h2 className=\"text-2xl font-semibold text-red-300 mb-4\">Threshold Exceedances</h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-red-800/50\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase tracking-wider\">ID</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase tracking-wider\">True Value</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase tracking-wider\">Predicted Value</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase tracking-wider\">Percentage Error</th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-red-800/50\">\n                  {outletsExceedingThreshold.slice(0, 5).map((outlet) => (\n                    <tr key={outlet.id}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{outlet.id}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{outlet.y_true.toFixed(2)}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{outlet.y_pred.toFixed(2)}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-400\">{outlet.percentage_error.toFixed(2)}%</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}