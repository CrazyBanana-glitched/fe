{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode2/DriftWarningChart.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\ninterface PlotDataPoint {\n  x: number;\n  y: number;\n  exceedsThreshold: boolean;\n}\n\ninterface DriftWarningChartProps {\n  plotData: PlotDataPoint[];\n}\n\nexport default function DriftWarningChart({ plotData }: DriftWarningChartProps): React.ReactElement {\n  const chartRef = useRef<Chart | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    console.log('DriftWarningChart plotData length:', plotData.length);\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    if (!ctx) return;\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n\n    chartRef.current = new Chart(ctx, {\n      type: 'scatter',\n      data: {\n        datasets: [\n          {\n            label: 'Drift State',\n            data: plotData.map((item) => ({ x: item.x, y: item.y })),\n            borderColor: 'rgb(75, 192, 192)',\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            pointBackgroundColor: plotData.map((item) => {\n              if (item.y === 0) return 'rgba(54, 162, 235, 0.8)'; // normal - blue\n              if (item.y === 1) return 'rgba(255, 206, 86, 0.8)'; // warning - yellow\n              if (item.y === 2) return 'rgba(255, 99, 132, 0.8)'; // drift - red\n              return 'rgba(201, 203, 207, 0.8)'; // default grey\n            }),\n            borderWidth: 2,\n            showLine: true,\n            tension: 0.1,\n            fill: false,\n            stepped: false,\n            pointRadius: 5,\n            pointHoverRadius: 7,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            labels: {\n              color: '#e5e7eb',\n            },\n          },\n          tooltip: {\n            mode: 'nearest',\n            intersect: true,\n            callbacks: {\n              label: function(context) {\n                const y = context.parsed.y;\n                if (y === 0) return 'Normal';\n                if (y === 1) return 'Warning';\n                if (y === 2) return 'Drift';\n                return 'Unknown';\n              }\n            }\n          },\n        },\n        scales: {\n          x: {\n            type: 'linear',\n            title: {\n              display: true,\n              text: 'Index',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            ticks: {\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Drift State',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            beginAtZero: true,\n            ticks: {\n              stepSize: 1,\n              callback: function (this: any, tickValue: string | number) {\n                const value = typeof tickValue === 'string' ? parseInt(tickValue) : tickValue;\n                if (value === 0) return 'Normal';\n                if (value === 1) return 'Warning';\n                if (value === 2) return 'Drift';\n                return '';\n              },\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            min: 0,\n            max: 2,\n          },\n        },\n        animation: {\n          duration: 1000,\n          easing: 'easeInOutQuad',\n        },\n        elements: {\n          point: {\n            radius: 5,\n            hoverRadius: 7,\n          },\n        },\n      },\n    });\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n        chartRef.current = null;\n      }\n    };\n  }, [plotData]);\n\n  return <canvas ref={canvasRef} style={{ width: '100%', height: '416px' }} />;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService1.ts"],"sourcesContent":["// services/backendService2.ts\n\nexport interface KPI {\n  rowKey: string;\n  value: string;\n  status?: string;\n}\n\nexport interface PlotDataPoint {\n  x: number;\n  y: number;\n  value?: number;\n  exceedsThreshold: boolean;\n}\n\nexport interface TableDataPoint {\n  id: string;\n  timePeriod: string;\n  meanPrediction?: number;\n  error?: number;\n  percentageError?: number;\n  status: string;\n}\n\nexport interface OutletsExceedingThreshold {\n  id: string;\n  y_true: number;\n  y_pred: number;\n  percentage_error: number;\n}\n\nexport interface Indices {\n  normal: number[];\n  warning: number[];\n  drift: number[];\n}\n\nexport async function fetchData(): Promise<{\n  kpis: KPI[];\n  errors: { plotData: PlotDataPoint[]; tableData: TableDataPoint[] };\n  outletsExceedingThreshold: OutletsExceedingThreshold[];\n  indices: Indices;\n  state: string;\n  coverage: any;\n  clusters: any;\n  backwardAnalysis: any;\n  currentPeriod: string;\n  totalOutlets: number;\n  outletsExceedingThresholdCount: number;\n  xaiExplanation: string;\n}> {\n  try {\n    console.log(\"Fetching data from backend via proxy: /api/mode2/data\");\n    const response = await fetch(`/api/mode2/data`, {\n      credentials: 'include',\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const rawData = await response.json();\n    console.log(\"Parsed data:\", rawData);\n\n    const driftMetrics = rawData.drift_state?.metrics || {};\n\n    // 1) Build your KPIs\n    const kpis: KPI[] = [\n      {\n        rowKey: \"Drift Detected\",\n        value: rawData.drift_state?.drift_detected ? \"Yes\" : \"No\",\n        status: rawData.drift_state?.drift_detected ? \"Alert\" : \"Normal\",\n      },\n      {\n        rowKey: \"Error Percentage Threshold\",\n        value: rawData.error_percentage_threshold?.toString() || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Average Percentage Error (All)\",\n        value: rawData.average_percentage_error_all?.toFixed(2) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Average Percentage Error (Exceeding)\",\n        value: rawData.average_percentage_error_exceeding?.toFixed(2) || \"N/A\",\n        status: \"Alert\",\n      },\n      {\n        rowKey: \"kstest\",\n        value: driftMetrics.ks_statistic?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"wasserstein\",\n        value: driftMetrics.wasserstein_distance?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"mseRef\",\n        value: driftMetrics.mean_mse_reference?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"mseCurrent\",\n        value: driftMetrics.mean_mse_current?.toFixed(3) || \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"status\",\n        value: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n        status: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n      },\n    ];\n\n    // 2) Build your errors.plotData & errors.tableData\n    const errors = {\n      plotData: (rawData.id_error || []).map(\n        (item: any, index: number) => ({\n          x: index,\n          y: item.Mean_Prediction_Error || 0,\n          value: item.Mean_Prediction_Error || 0,\n          exceedsThreshold:\n            Math.abs(item.Mean_Prediction_Error) >\n            (rawData.error_percentage_threshold || 0),\n        })\n      ),\n      tableData: (rawData.id_error || []).map((item: any) => ({\n        id: item.id?.toString() || \"\",\n        timePeriod: item.time_period || \"\",\n        meanPrediction: item.Mean_Prediction_Error || 0,\n        error: item.Mean_Prediction_Error || 0,\n        percentageError: Math.abs(item.Mean_Prediction_Error) || 0,\n        status:\n          Math.abs(item.Mean_Prediction_Error) >\n          (rawData.error_percentage_threshold || 0)\n            ? \"Alert\"\n            : \"Normal\",\n      })),\n    };\n\n    // 3) Outlets exceeding threshold\n    const outletsExceedingThreshold: OutletsExceedingThreshold[] =\n      (rawData.outlets_exceeding_threshold || []).map((item: any) => ({\n        id: item.id?.toString() || \"\",\n        y_true: item.y_true || 0,\n        y_pred: item.y_pred || 0,\n        percentage_error: item.percentage_error || 0,\n      }));\n\n    // 4) Other dashboard fields\n    const state = rawData.state || \"Unknown\";\n    const coverage = rawData.coverage || {};\n    const clusters = rawData.clusters || {};\n    const backwardAnalysis = rawData.backward_analysis || {};\n    const currentPeriod = rawData.current_period || \"N/A\";\n    const totalOutlets = rawData.total_outlets || 0;\n    const outletsExceedingThresholdCount =\n      rawData.outlets_exceeding_threshold_count || 0;\n    const xaiExplanation =\n      rawData.xai?.explanation || \"No explanation available\";\n\n    // 5) Build indices\n    // Prefer rawData.indices if present, otherwise derive from clusters + id_error\n    let indices: Indices = rawData.indices ?? {\n      normal: [],\n      warning: [],\n      drift: [],\n    };\n\n    if (!rawData.indices) {\n      const warningSet = new Set(rawData.clusters?.warning ?? []);\n      const driftSet = new Set(rawData.clusters?.drift ?? []);\n      const normalIndices: number[] = [];\n      const warningIndices: number[] = [];\n      const driftIndices: number[] = [];\n\n      (rawData.id_error || []).forEach((item: any, idx: number) => {\n        const idStr = item.id?.toString() ?? \"\";\n        if (warningSet.has(idStr)) {\n          warningIndices.push(idx);\n        } else if (driftSet.has(idStr)) {\n          driftIndices.push(idx);\n        } else {\n          normalIndices.push(idx);\n        }\n      });\n\n      indices = { normal: normalIndices, warning: warningIndices, drift: driftIndices };\n    }\n\n    return {\n      kpis,\n      errors,\n      outletsExceedingThreshold,\n      indices,\n      state,\n      coverage,\n      clusters,\n      backwardAnalysis,\n      currentPeriod,\n      totalOutlets,\n      outletsExceedingThresholdCount,\n      xaiExplanation,\n    };\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    throw new Error(\"Failed to fetch and process data\");\n  }\n}\n"],"names":[],"mappings":"AAAA,8BAA8B;;;;AAqCvB,eAAe;IAcpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,MAAM,MAAM,CAAC,eAAe,CAAC,EAAE;YAC9C,aAAa;QACf;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QAEA,MAAM,UAAU,MAAM,SAAS,IAAI;QACnC,QAAQ,GAAG,CAAC,gBAAgB;QAE5B,MAAM,eAAe,QAAQ,WAAW,EAAE,WAAW,CAAC;QAEtD,qBAAqB;QACrB,MAAM,OAAc;YAClB;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,iBAAiB,QAAQ;gBACrD,QAAQ,QAAQ,WAAW,EAAE,iBAAiB,UAAU;YAC1D;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,0BAA0B,EAAE,cAAc;gBACzD,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,4BAA4B,EAAE,QAAQ,MAAM;gBAC3D,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,kCAAkC,EAAE,QAAQ,MAAM;gBACjE,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,aAAa,YAAY,EAAE,QAAQ,MAAM;gBAChD,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,aAAa,oBAAoB,EAAE,QAAQ,MAAM;gBACxD,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,aAAa,kBAAkB,EAAE,QAAQ,MAAM;gBACtD,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,aAAa,gBAAgB,EAAE,QAAQ,MAAM;gBACpD,QAAQ;YACV;YACA;gBACE,QAAQ;gBACR,OAAO,QAAQ,WAAW,EAAE,iBAAiB,YAAY;gBACzD,QAAQ,QAAQ,WAAW,EAAE,iBAAiB,YAAY;YAC5D;SACD;QAED,mDAAmD;QACnD,MAAM,SAAS;YACb,UAAU,CAAC,QAAQ,QAAQ,IAAI,EAAE,EAAE,GAAG,CACpC,CAAC,MAAW,QAAkB,CAAC;oBAC7B,GAAG;oBACH,GAAG,KAAK,qBAAqB,IAAI;oBACjC,OAAO,KAAK,qBAAqB,IAAI;oBACrC,kBACE,KAAK,GAAG,CAAC,KAAK,qBAAqB,IACnC,CAAC,QAAQ,0BAA0B,IAAI,CAAC;gBAC5C,CAAC;YAEH,WAAW,CAAC,QAAQ,QAAQ,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,OAAc,CAAC;oBACtD,IAAI,KAAK,EAAE,EAAE,cAAc;oBAC3B,YAAY,KAAK,WAAW,IAAI;oBAChC,gBAAgB,KAAK,qBAAqB,IAAI;oBAC9C,OAAO,KAAK,qBAAqB,IAAI;oBACrC,iBAAiB,KAAK,GAAG,CAAC,KAAK,qBAAqB,KAAK;oBACzD,QACE,KAAK,GAAG,CAAC,KAAK,qBAAqB,IACnC,CAAC,QAAQ,0BAA0B,IAAI,CAAC,IACpC,UACA;gBACR,CAAC;QACH;QAEA,iCAAiC;QACjC,MAAM,4BACJ,CAAC,QAAQ,2BAA2B,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,OAAc,CAAC;gBAC9D,IAAI,KAAK,EAAE,EAAE,cAAc;gBAC3B,QAAQ,KAAK,MAAM,IAAI;gBACvB,QAAQ,KAAK,MAAM,IAAI;gBACvB,kBAAkB,KAAK,gBAAgB,IAAI;YAC7C,CAAC;QAEH,4BAA4B;QAC5B,MAAM,QAAQ,QAAQ,KAAK,IAAI;QAC/B,MAAM,WAAW,QAAQ,QAAQ,IAAI,CAAC;QACtC,MAAM,WAAW,QAAQ,QAAQ,IAAI,CAAC;QACtC,MAAM,mBAAmB,QAAQ,iBAAiB,IAAI,CAAC;QACvD,MAAM,gBAAgB,QAAQ,cAAc,IAAI;QAChD,MAAM,eAAe,QAAQ,aAAa,IAAI;QAC9C,MAAM,iCACJ,QAAQ,iCAAiC,IAAI;QAC/C,MAAM,iBACJ,QAAQ,GAAG,EAAE,eAAe;QAE9B,mBAAmB;QACnB,+EAA+E;QAC/E,IAAI,UAAmB,QAAQ,OAAO,IAAI;YACxC,QAAQ,EAAE;YACV,SAAS,EAAE;YACX,OAAO,EAAE;QACX;QAEA,IAAI,CAAC,QAAQ,OAAO,EAAE;YACpB,MAAM,aAAa,IAAI,IAAI,QAAQ,QAAQ,EAAE,WAAW,EAAE;YAC1D,MAAM,WAAW,IAAI,IAAI,QAAQ,QAAQ,EAAE,SAAS,EAAE;YACtD,MAAM,gBAA0B,EAAE;YAClC,MAAM,iBAA2B,EAAE;YACnC,MAAM,eAAyB,EAAE;YAEjC,CAAC,QAAQ,QAAQ,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC,MAAW;gBAC3C,MAAM,QAAQ,KAAK,EAAE,EAAE,cAAc;gBACrC,IAAI,WAAW,GAAG,CAAC,QAAQ;oBACzB,eAAe,IAAI,CAAC;gBACtB,OAAO,IAAI,SAAS,GAAG,CAAC,QAAQ;oBAC9B,aAAa,IAAI,CAAC;gBACpB,OAAO;oBACL,cAAc,IAAI,CAAC;gBACrB;YACF;YAEA,UAAU;gBAAE,QAAQ;gBAAe,SAAS;gBAAgB,OAAO;YAAa;QAClF;QAEA,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode2/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport DriftWarningChart from './DriftWarningChart';\nimport {\n  fetchData,\n  KPI,\n  PlotDataPoint,\n  TableDataPoint,\n  OutletsExceedingThreshold,\n  Indices,\n} from '../../services/backendService1';\n\nexport default function Mode2Page(): React.ReactElement {\n  // --- STATE HOOKS ---\n  const [kpis, setKpis] = useState<KPI[]>([]);\n  const [errorData, setErrorData] = useState<{\n    plotData: PlotDataPoint[];\n    tableData: TableDataPoint[];\n  }>({ plotData: [], tableData: [] });\n  const [outletsExceedingThreshold, setOutletsExceedingThreshold] = useState<\n    OutletsExceedingThreshold[]\n  >([]);\n  const [indices, setIndices] = useState<Indices>({\n    normal: [],\n    warning: [],\n    drift: [],\n  });\n  const [dashboardState, setDashboardState] = useState<string>('Unknown');\n  const [coverage, setCoverage] = useState<any>({});\n  const [clusters, setClusters] = useState<any>({});\n  const [backwardAnalysis, setBackwardAnalysis] = useState<any>({});\n  const [currentPeriod, setCurrentPeriod] = useState<string>('N/A');\n  const [totalOutlets, setTotalOutlets] = useState<number>(0);\n  const [\n    outletsExceedingThresholdCount,\n    setOutletsExceedingThresholdCount,\n  ] = useState<number>(0);\n  const [xaiExplanation, setXaiExplanation] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(true);\n  const [backendError, setBackendError] = useState<string | null>(null);\n\n  // --- DATA FETCHER ---\n  const initData = async (): Promise<void> => {\n    setLoading(true);\n    setBackendError(null);\n\n    try {\n      const {\n        kpis: fetchedKpis,\n        errors: fetchedErrors,\n        outletsExceedingThreshold: fetchedOutlets,\n        indices: fetchedIndices,\n        state: fetchedState,\n        coverage: fetchedCoverage,\n        clusters: fetchedClusters,\n        backwardAnalysis: fetchedBackward,\n        currentPeriod: fetchedPeriod,\n        totalOutlets: fetchedTotal,\n        outletsExceedingThresholdCount: fetchedCount,\n        xaiExplanation: fetchedXai,\n      } = await fetchData();\n\n      // build our drift/warning plot from indices\n      const driftPlot: PlotDataPoint[] = [];\n      fetchedIndices.normal.forEach(x =>\n        driftPlot.push({ x, y: 0, exceedsThreshold: false })\n      );\n      fetchedIndices.warning.forEach(x =>\n        driftPlot.push({ x, y: 1, exceedsThreshold: false })\n      );\n      fetchedIndices.drift.forEach(x =>\n        driftPlot.push({ x, y: 2, exceedsThreshold: false })\n      );\n      driftPlot.sort((a, b) => a.x - b.x);\n\n      setKpis(fetchedKpis);\n      // overwrite plotData with our driftPlot\n      setErrorData({ plotData: driftPlot, tableData: fetchedErrors.tableData });\n      setOutletsExceedingThreshold(fetchedOutlets);\n      setIndices(fetchedIndices);\n      setDashboardState(fetchedState);\n      setCoverage(fetchedCoverage);\n      setClusters(fetchedClusters);\n      setBackwardAnalysis(fetchedBackward);\n      setCurrentPeriod(fetchedPeriod);\n      setTotalOutlets(fetchedTotal);\n      setOutletsExceedingThresholdCount(fetchedCount);\n      setXaiExplanation(fetchedXai);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setBackendError(\n        err instanceof Error\n          ? `Failed to load data: ${err.message}`\n          : 'Failed to load data: Unknown error'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    initData();\n  }, []);\n\n  // --- RENDER ---\n  return (\n    <div className=\"bg-gray-900 min-h-screen flex flex-col\">\n      <Head>\n        <title>Mode 2 | Business Dashboard</title>\n      </Head>\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        {/* Backend Error Fallback */}\n        {backendError && (\n          <div className=\"bg-red-900/50 border border-red-700 rounded-lg p-4 mb-6 text-white\">\n            <h3 className=\"text-lg font-medium\">Backend Error</h3>\n            <p className=\"mt-2\">{backendError}</p>\n            <p className=\"mt-1 text-sm opacity-75\">\n              Displaying fallback data. Some features may be limited.\n            </p>\n            <button\n              onClick={initData}\n              className=\"mt-3 px-4 py-2 bg-red-800/50 hover:bg-red-800 rounded-md text-sm font-medium\"\n            >\n              Retry Connection\n            </button>\n          </div>\n        )}\n\n        {/* Header Metrics */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">\n            OCTAVE - RG Dashboard\n          </h2>\n          <p className=\"text-blue-200 mb-2\">\n            Current Period: {loading ? 'Loading...' : currentPeriod}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            State: {loading ? 'Loading...' : dashboardState}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Total Outlets: {loading ? 'Loading...' : totalOutlets}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Outlets Exceeding Threshold:{' '}\n            {loading ? 'Loading...' : outletsExceedingThresholdCount}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Coverage – Total Points:{' '}\n            {loading ? 'Loading...' : coverage.total_points ?? 'N/A'}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Coverage – Warning:{' '}\n            {loading ? 'Loading...' : coverage.warning_coverage ?? 'N/A'}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Coverage – Drift:{' '}\n            {loading ? 'Loading...' : coverage.drift_coverage ?? 'N/A'}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Backward Analysis – 10% Drift:{' '}\n            {loading\n              ? 'Loading...'\n              : backwardAnalysis.backward_10_percent_drift\n              ? 'Yes'\n              : 'No'}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Backward Analysis – 10% Warning:{' '}\n            {loading\n              ? 'Loading...'\n              : backwardAnalysis.backward_10_percent_warning\n              ? 'Yes'\n              : 'No'}\n          </p>\n\n          {/* KPI Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mt-4\">\n            {kpis.map(kpi => (\n              <div\n                key={kpi.rowKey}\n                className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\"\n              >\n                <h3 className=\"text-lg font-medium text-blue-200 mb-2\">\n                  {kpi.rowKey}\n                </h3>\n                <p\n                  className={`text-xl ${\n                    kpi.status === 'Warning'\n                      ? 'text-yellow-400'\n                      : kpi.status === 'Error'\n                      ? 'text-red-400'\n                      : 'text-green-400'\n                  }`}\n                >\n                  {loading ? 'Loading...' : kpi.value}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Drift/Warning Chart */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700 h-80\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">\n            Drift & Warning Over Time\n          </h2>\n          {loading ? (\n            <div className=\"flex items-center justify-center h-full text-white\">\n              Loading…\n            </div>\n          ) : (\n            <DriftWarningChart plotData={errorData.plotData} />\n          )}\n        </div>\n\n        {/* Error Comparison & Threshold Exceedances */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          {/* Error Comparison */}\n          <div className=\"bg-gray-800 rounded-xl shadow-md p-6 border border-gray-700\">\n            <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">\n              Error Comparison\n            </h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-700\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">\n                      ID\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">\n                      Time Period\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-red-400 uppercase tracking-wider\">\n                      Error\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-700\">\n                  {errorData.tableData.slice(0, 5).map((err, i) => (\n                    <tr key={i}>\n                      <td className=\"px-6 py-4 text-sm text-white\">\n                        {err.id}\n                      </td>\n                      <td className=\"px-6 py-4 text-sm text-white\">\n                        {err.timePeriod}\n                      </td>\n                      <td className=\"px-6 py-4 text-sm text-red-400\">\n                        {(err.error ?? 0).toFixed(2)}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Threshold Exceedances */}\n          <div className=\"bg-red-900/20 rounded-xl shadow-md p-6 border border-red-800/50\">\n            <h2 className=\"text-2xl font-semibold text-red-300 mb-4\">\n              Threshold Exceedances\n            </h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-red-800/50\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase tracking-wider\">\n                      ID\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase tracking-wider\">\n                      True Value\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase tracking-wider\">\n                      Predicted Value\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase tracking-wider\">\n                      Percentage Error\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-red-800/50\">\n                  {outletsExceedingThreshold.slice(0, 5).map((o) => (\n                    <tr key={o.id}>\n                      <td className=\"px-6 py-4 text-sm text-white\">\n                        {o.id}\n                      </td>\n                      <td className=\"px-6 py-4 text-sm text-white\">\n                        {o.y_true.toFixed(2)}\n                      </td>\n                      <td className=\"px-6 py-4 text-sm text-white\">\n                        {o.y_pred.toFixed(2)}\n                      </td>\n                      <td className=\"px-6 py-4 text-sm text-red-400\">\n                        {o.percentage_error.toFixed(2)}%\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        {/* XAI Explanation */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md p-6 mt-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">\n            XAI Result\n          </h2>\n          <div className=\"space-y-3 text-white\">\n            {loading ? (\n              <p>Loading XAI explanation...</p>\n            ) : xaiExplanation ? (\n              <div\n                className=\"prose prose-invert\"\n                dangerouslySetInnerHTML={{ __html: xaiExplanation }}\n              />\n            ) : (\n              <p className=\"text-red-400\">No explanation available</p>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}