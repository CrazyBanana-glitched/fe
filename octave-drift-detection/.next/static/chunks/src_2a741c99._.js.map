{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode2/DriftWarningChart.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\ninterface PlotDataPoint {\n  x: number;\n  y: number;\n  exceedsThreshold: boolean;\n}\n\ninterface DriftWarningChartProps {\n  plotData: PlotDataPoint[];\n}\n\nexport default function DriftWarningChart({ plotData }: DriftWarningChartProps): React.ReactElement {\n  const chartRef = useRef<Chart | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    console.log('DriftWarningChart plotData length:', plotData.length);\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    if (!ctx) return;\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n\n    chartRef.current = new Chart(ctx, {\n      type: 'scatter',\n      data: {\n        datasets: [\n          {\n            label: 'Drift State',\n            data: plotData.map((item) => ({ x: item.x, y: item.y })),\n            borderColor: 'rgb(75, 192, 192)',\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            pointBackgroundColor: plotData.map((item) => {\n              if (item.y === 0) return 'rgba(54, 162, 235, 0.8)'; // normal - blue\n              if (item.y === 1) return 'rgba(255, 206, 86, 0.8)'; // warning - yellow\n              if (item.y === 2) return 'rgba(255, 99, 132, 0.8)'; // drift - red\n              return 'rgba(201, 203, 207, 0.8)'; // default grey\n            }),\n            borderWidth: 2,\n            showLine: true,\n            tension: 0.1,\n            fill: false,\n            stepped: false,\n            pointRadius: 5,\n            pointHoverRadius: 7,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            labels: {\n              color: '#e5e7eb',\n            },\n          },\n          tooltip: {\n            mode: 'nearest',\n            intersect: true,\n            callbacks: {\n              label: function(context) {\n                const y = context.parsed.y;\n                if (y === 0) return 'Normal';\n                if (y === 1) return 'Warning';\n                if (y === 2) return 'Drift';\n                return 'Unknown';\n              }\n            }\n          },\n        },\n        scales: {\n          x: {\n            type: 'linear',\n            title: {\n              display: true,\n              text: 'Index',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            ticks: {\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Drift State',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            beginAtZero: true,\n            ticks: {\n              stepSize: 1,\n              callback: function (this: any, tickValue: string | number) {\n                const value = typeof tickValue === 'string' ? parseInt(tickValue) : tickValue;\n                if (value === 0) return 'Normal';\n                if (value === 1) return 'Warning';\n                if (value === 2) return 'Drift';\n                return '';\n              },\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            min: 0,\n            max: 2,\n          },\n        },\n        animation: {\n          duration: 1000,\n          easing: 'easeInOutQuad',\n        },\n        elements: {\n          point: {\n            radius: 5,\n            hoverRadius: 7,\n          },\n        },\n      },\n    });\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n        chartRef.current = null;\n      }\n    };\n  }, [plotData]);\n\n  return <canvas ref={canvasRef} style={{ width: '100%', height: '416px' }} />;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService1.ts"],"sourcesContent":["// services/backendService1.ts\n\nexport interface KPI {\n  rowKey: string\n  value: string\n  status?: string\n}\n\nexport interface PlotDataPoint {\n  x: number\n  y: number\n  value?: number\n  exceedsThreshold: boolean\n}\n\nexport interface TableDataPoint {\n  id: string\n  timePeriod: string\n  meanPrediction?: number\n  error?: number\n  percentageError?: number\n  status: string\n}\n\nexport interface OutletsExceedingThreshold {\n  id: string\n  y_true: number\n  y_pred: number\n  percentage_error: number\n}\n\nexport interface Indices {\n  normal: number[]\n  warning: number[]\n  drift: number[]\n}\n\n// **NEW**: the top-10 misclassified IDs\nexport interface Top10Id {\n  id: string\n  time_period: string\n  Mean_Prediction_Error: number\n}\n\nexport async function fetchData(): Promise<{\n  kpis: KPI[]\n  errors: { plotData: PlotDataPoint[]; tableData: TableDataPoint[] }\n  top10Ids: Top10Id[]\n  outletsExceedingThreshold: OutletsExceedingThreshold[]\n  indices: Indices\n  state: string\n  coverage: any\n  clusters: any\n  backwardAnalysis: any\n  currentPeriod: string\n  totalOutlets: number\n  outletsExceedingThresholdCount: number\n  xaiExplanation: string\n}> {\n  const res = await fetch('/api/mode2/data', { credentials: 'include' })\n  if (!res.ok) throw new Error(`HTTP error! Status: ${res.status}`)\n  const raw = await res.json()\n\n  // 1) KPIs (as before)â€¦\n  const driftMetrics = raw.drift_state?.metrics || {}\n  const kpis: KPI[] = [\n    {\n      rowKey: 'Drift Detected',\n      value: raw.drift_state?.drift_detected ? 'Yes' : 'No',\n      status: raw.drift_state?.drift_detected ? 'Alert' : 'Normal',\n    },\n    {\n      rowKey: 'Error Percentage Threshold',\n      value: raw.error_percentage_threshold?.toString() || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'Average Percentage Error (All)',\n      value: raw.average_percentage_error_all?.toFixed(2) || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'Average Percentage Error (Exceeding)',\n      value: raw.average_percentage_error_exceeding?.toFixed(2) || 'N/A',\n      status: 'Alert',\n    },\n    {\n      rowKey: 'kstest',\n      value: driftMetrics.ks_statistic?.toFixed(3) || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'wasserstein',\n      value: driftMetrics.wasserstein_distance?.toFixed(3) || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'mseRef',\n      value: driftMetrics.mean_mse_reference?.toFixed(3) || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'mseCurrent',\n      value: driftMetrics.mean_mse_current?.toFixed(3) || 'N/A',\n      status: 'Normal',\n    },\n    {\n      rowKey: 'status',\n      value: raw.drift_state?.drift_detected ? 'Warning' : 'Normal',\n      status: raw.drift_state?.drift_detected ? 'Warning' : 'Normal',\n    },\n  ]\n\n  // 2) errors.plotData & tableData\n  const idError = raw.id_error || []\n  const errors = {\n    plotData: idError.map((item: any, idx: number) => ({\n      x: idx,\n      y: item.Mean_Prediction_Error || 0,\n      value: item.Mean_Prediction_Error || 0,\n      exceedsThreshold:\n        Math.abs(item.Mean_Prediction_Error) >\n        (raw.error_percentage_threshold || 0),\n    })),\n    tableData: idError.map((item: any) => ({\n      id: item.id?.toString() || '',\n      timePeriod: item.time_period || '',\n      meanPrediction: item.Mean_Prediction_Error || 0,\n      error: item.Mean_Prediction_Error || 0,\n      percentageError: Math.abs(item.Mean_Prediction_Error) || 0,\n      status:\n        Math.abs(item.Mean_Prediction_Error) >\n        (raw.error_percentage_threshold || 0)\n          ? 'Alert'\n          : 'Normal',\n    })),\n  }\n\n  // 3) Top-10 by absolute error\n  const top10Ids: Top10Id[] = [...idError]\n    .sort(\n      (a: any, b: any) =>\n        Math.abs(b.Mean_Prediction_Error) - Math.abs(a.Mean_Prediction_Error)\n    )\n    .slice(0, 10)\n    .map((item: any) => ({\n      id: item.id?.toString() || '',\n      time_period: item.time_period || '',\n      Mean_Prediction_Error: item.Mean_Prediction_Error || 0,\n    }))\n\n  // 4) Outlets\n  const outletsExceedingThreshold: OutletsExceedingThreshold[] =\n    (raw.outlets_exceeding_threshold || []).map((item: any) => ({\n      id: item.id?.toString() || '',\n      y_true: item.y_true || 0,\n      y_pred: item.y_pred || 0,\n      percentage_error: item.percentage_error || 0,\n    }))\n\n  // 5) Build indices from raw.indices or clusters fallback\n  let indices: Indices = raw.indices ?? { normal: [], warning: [], drift: [] }\n  if (!raw.indices) {\n    const w = new Set(raw.clusters?.warning || [])\n    const d = new Set(raw.clusters?.drift || [])\n    const n: number[] = []\n    const widx: number[] = []\n    const didx: number[] = []\n    idError.forEach((item: any, idx: number) => {\n      const idStr = item.id?.toString()\n      if (w.has(idStr)) widx.push(idx)\n      else if (d.has(idStr)) didx.push(idx)\n      else n.push(idx)\n    })\n    indices = { normal: n, warning: widx, drift: didx }\n  }\n\n  // 6) Other fields\n  const state = raw.state || 'Unknown'\n  const coverage = raw.coverage || {}\n  const clusters = raw.clusters || {}\n  const backwardAnalysis = raw.backward_analysis || {}\n  const currentPeriod = raw.current_period || 'N/A'\n  const totalOutlets = raw.total_outlets || 0\n  const outletsExceedingThresholdCount = raw.outlets_exceeding_threshold_count || 0\n  const xaiExplanation = raw.xai?.explanation || 'No explanation available'\n\n  return {\n    kpis,\n    errors,\n    top10Ids,\n    outletsExceedingThreshold,\n    indices,\n    state,\n    coverage,\n    clusters,\n    backwardAnalysis,\n    currentPeriod,\n    totalOutlets,\n    outletsExceedingThresholdCount,\n    xaiExplanation,\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode2/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport ReactMarkdown from 'react-markdown';\nimport DriftWarningChart from './DriftWarningChart';\nimport {\n  fetchData,\n  KPI,\n  PlotDataPoint,\n  TableDataPoint,\n  OutletsExceedingThreshold,\n  Indices,\n  Top10Id,\n} from '../../services/backendService1';\n\nexport default function Mode2Page(): React.ReactElement {\n  // --- STATE HOOKS ---\n  const [kpis, setKpis] = useState<KPI[]>([]);\n  const [errorData, setErrorData] = useState<{\n    plotData: PlotDataPoint[];\n    tableData: TableDataPoint[];\n  }>({ plotData: [], tableData: [] });\n  const [top10Ids, setTop10Ids] = useState<Top10Id[]>([]);\n  const [outletsExceedingThreshold, setOutletsExceedingThreshold] = useState<\n    OutletsExceedingThreshold[]\n  >([]);\n  const [indices, setIndices] = useState<Indices>({\n    normal: [],\n    warning: [],\n    drift: [],\n  });\n  const [dashboardState, setDashboardState] = useState<string>('Unknown');\n  const [coverage, setCoverage] = useState<any>({});\n  const [clusters, setClusters] = useState<any>({});\n  const [backwardAnalysis, setBackwardAnalysis] = useState<any>({});\n  const [currentPeriod, setCurrentPeriod] = useState<string>('N/A');\n  const [totalOutlets, setTotalOutlets] = useState<number>(0);\n  const [outletsExceedingThresholdCount, setOutletsExceedingThresholdCount] =\n    useState<number>(0);\n  const [xaiExplanation, setXaiExplanation] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(true);\n  const [backendError, setBackendError] = useState<string | null>(null);\n\n  // --- DATA FETCHER ---\n  const initData = async (): Promise<void> => {\n    setLoading(true);\n    setBackendError(null);\n\n    try {\n      const {\n        kpis: fetchedKpis,\n        errors: fetchedErrors,\n        top10Ids: fetchedTop10,\n        outletsExceedingThreshold: fetchedOutlets,\n        indices: fetchedIndices,\n        state: fetchedState,\n        coverage: fetchedCoverage,\n        clusters: fetchedClusters,\n        backwardAnalysis: fetchedBackward,\n        currentPeriod: fetchedPeriod,\n        totalOutlets: fetchedTotal,\n        outletsExceedingThresholdCount: fetchedCount,\n        xaiExplanation: fetchedXai,\n      } = await fetchData();\n\n      // Build our drift/warning plot from indices\n      const driftPlot: PlotDataPoint[] = [];\n      fetchedIndices.normal.forEach(x =>\n        driftPlot.push({ x, y: 0, exceedsThreshold: false })\n      );\n      fetchedIndices.warning.forEach(x =>\n        driftPlot.push({ x, y: 1, exceedsThreshold: false })\n      );\n      fetchedIndices.drift.forEach(x =>\n        driftPlot.push({ x, y: 2, exceedsThreshold: false })\n      );\n      driftPlot.sort((a, b) => a.x - b.x);\n\n      // Remove kstest and set N/A for wasserstein, mseRef, mseCurrent\n      console.log('Fetched KPIs:', fetchedKpis.map(kpi => ({ rowKey: kpi.rowKey, value: kpi.value })));\n      const filteredKpis = fetchedKpis.filter(\n        kpi =>\n          !['kstest', 'wasserstein', 'mseref', 'msecurrent'].includes(\n            kpi.rowKey.toLowerCase()\n          )\n      );\n      console.log('Filtered KPIs:', filteredKpis);\n      setKpis(filteredKpis);\n      // overwrite plotData with our driftPlot\n      setErrorData({ plotData: driftPlot, tableData: fetchedErrors.tableData });\n      setTop10Ids(fetchedTop10);\n      setOutletsExceedingThreshold(fetchedOutlets);\n      setIndices(fetchedIndices);\n      setDashboardState(fetchedState);\n      setCoverage(fetchedCoverage);\n      setClusters(fetchedClusters);\n      setBackwardAnalysis(fetchedBackward);\n      setCurrentPeriod(fetchedPeriod);\n      setTotalOutlets(fetchedTotal);\n      setOutletsExceedingThresholdCount(fetchedCount);\n      setXaiExplanation(fetchedXai);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setBackendError(\n        err instanceof Error\n          ? `Failed to load data: ${err.message}`\n          : 'Failed to load data: Unknown error'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    initData();\n  }, []);\n\n  // --- RENDER ---\n  return (\n    <div className=\"bg-gray-900 min-h-screen flex flex-col\">\n      <Head>\n        <title>Mode 2 | Business Dashboard</title>\n      </Head>\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        {/* Backend Error Fallback */}\n        {backendError && (\n          <div className=\"bg-red-900/50 border border-red-700 rounded-lg p-4 mb-6 text-white\">\n            <h3 className=\"text-lg font-medium\">Backend Error</h3>\n            <p className=\"mt-2\">{backendError}</p>\n            <p className=\"mt-1 text-sm opacity-75\">\n              Displaying fallback data. Some features may be limited.\n            </p>\n            <button\n              onClick={initData}\n              className=\"mt-3 px-4 py-2 bg-red-800/50 hover:bg-red-800 rounded-md text-sm font-medium\"\n            >\n              Retry Connection\n            </button>\n          </div>\n        )}\n\n        {/* Header Metrics */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">\n            OCTAVE - RG Dashboard\n          </h2>\n          <p className=\"text-blue-200 mb-2\">\n            Current Period: {loading ? 'Loading...' : currentPeriod}\n          </p>\n\n          {/* KPI Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mt-4\">\n            {kpis.map(kpi => (\n              <div\n                key={kpi.rowKey}\n                className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\"\n              >\n                <h3 className=\"text-lg font-medium text-blue-200 mb-2\">\n                  {kpi.rowKey}\n                </h3>\n                <p\n                  className={`text-xl ${\n                    kpi.status === 'Warning'\n                      ? 'text-yellow-400'\n                      : kpi.status === 'Error'\n                      ? 'text-red-400'\n                      : 'text-green-400'\n                  }`}\n                >\n                  {loading ? 'Loading...' : kpi.value}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Drift/Warning Chart */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700 h-80\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">\n            Drift & Warning Over Time\n          </h2>\n          {loading ? (\n            <div className=\"flex items-center justify-center h-full text-white\">\n              Loadingâ€¦\n            </div>\n          ) : (\n            <DriftWarningChart plotData={errorData.plotData} />\n          )}\n        </div>\n\n        {/* XAI Explanation */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">XAI Result</h2>\n          <div className=\"prose prose-invert text-white\">\n            {loading ? (\n              <p>Loading XAI explanation...</p>\n            ) : xaiExplanation ? (\n              <ReactMarkdown>{xaiExplanation}</ReactMarkdown>\n            ) : (\n              <p className=\"text-red-400\">No explanation available</p>\n            )}\n          </div>\n        </div>\n\n        {/* Top 10 Misclassifications */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Top 10 Misclassifications</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-700\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase\">\n                    ID\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase\">\n                    Time Period\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-red-400 uppercase\">\n                    Error\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-700\">\n                {top10Ids.slice(0, 10).map((item, i) => (\n                  <tr key={i}>\n                    <td className=\"px-6 py-4 text-sm text-white\">{item.id}</td>\n                    <td className=\"px-6 py-4 text-sm text-white\">{item.time_period}</td>\n                    <td className=\"px-6 py-4 text-sm text-red-400\">\n                      {item.Mean_Prediction_Error.toFixed(2)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Threshold Exceedances */}\n        <div className=\"bg-red-900/20 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-red-800/50\">\n          <h2 className=\"text-2xl font-semibold text-red-300 mb-4\">\n            Threshold Exceedances\n          </h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-red-800/50\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase\">\n                    ID\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase\">\n                    True Value\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase\">\n                    Predicted Value\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase\">\n                    Percentage Error\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-red-800/50\">\n                {outletsExceedingThreshold.slice(0, 5).map(o => (\n                  <tr key={o.id}>\n                    <td className=\"px-6 py-4 text-sm text-white\">{o.id}</td>\n                    <td className=\"px-6 py-4 text-sm text-white\">\n                      {o.y_true.toFixed(2)}\n                    </td>\n                    <td className=\"px-6 py-4 text-sm text-white\">\n                      {o.y_pred.toFixed(2)}\n                    </td>\n                    <td className=\"px-6 py-4 text-sm text-red-400\">\n                      {o.percentage_error.toFixed(2)}%\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}