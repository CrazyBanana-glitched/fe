{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/components/D3ConfusionMatrix.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport * as d3 from 'd3'\r\n\r\nexport interface D3ConfusionMatrixProps {\r\n  data: number[][]\r\n  labels: string[]\r\n  title?: string\r\n  width: number\r\n  height: number\r\n}\r\n\r\nconst D3ConfusionMatrix: React.FC<D3ConfusionMatrixProps> = ({\r\n  data,\r\n  labels,\r\n  title,\r\n  width,\r\n  height,\r\n}) => {\r\n  const svgRef = useRef<SVGSVGElement>(null)\r\n\r\n  useEffect(() => {\r\n    if (!data.length) return\r\n\r\n    const maxVal = d3.max(data.flat()) ?? 1\r\n    const margin = { top: title ? 30 : 10, right: 10, bottom: 10, left: 10 }\r\n    const innerW = width - margin.left - margin.right\r\n    const innerH = height - margin.top - margin.bottom\r\n\r\n    const x = d3\r\n      .scaleBand<string>()\r\n      .domain(labels)\r\n      .range([0, innerW])\r\n      .padding(0.05)\r\n\r\n    const y = d3\r\n      .scaleBand<string>()\r\n      .domain(labels)\r\n      .range([0, innerH])\r\n      .padding(0.05)\r\n\r\n    const color = d3\r\n      .scaleSequential(d3.interpolateBlues)\r\n      .domain([0, maxVal])\r\n\r\n    const svg = d3.select(svgRef.current!)\r\n    svg.selectAll('*').remove()\r\n    svg.attr('viewBox', `0 0 ${width} ${height}`)\r\n\r\n    // optional title\r\n    if (title) {\r\n      svg\r\n        .append('text')\r\n        .attr('x', width / 2)\r\n        .attr('y', margin.top / 2)\r\n        .attr('text-anchor', 'middle')\r\n        .style('fill', 'white')\r\n        .style('font-size', '14px')\r\n        .text(title)\r\n    }\r\n\r\n    const g = svg\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n    // cells + centered text\r\n    data.forEach((row, i) => {\r\n      row.forEach((val, j) => {\r\n        const xpos = x(labels[j])!\r\n        const ypos = y(labels[i])!\r\n\r\n        g.append('rect')\r\n          .attr('x', xpos)\r\n          .attr('y', ypos)\r\n          .attr('width', x.bandwidth())\r\n          .attr('height', y.bandwidth())\r\n          .attr('fill', color(val))\r\n\r\n        g.append('text')\r\n          .attr('x', xpos + x.bandwidth() / 2)\r\n          .attr('y', ypos + y.bandwidth() / 2)\r\n          .attr('text-anchor', 'middle')\r\n          .attr('dominant-baseline', 'middle')\r\n          .style('font-size', `${Math.min(x.bandwidth(), y.bandwidth()) * 0.4}px`)\r\n          .attr('fill', val > maxVal / 2 ? 'white' : 'black')\r\n          .text(val)\r\n      })\r\n    })\r\n\r\n    // axes (no tick lines)\r\n    g.append('g')\r\n      .call(d3.axisTop(x).tickSize(0))\r\n      .selectAll('text')\r\n      .style('font-size', '10px')\r\n\r\n    g.append('g')\r\n      .call(d3.axisLeft(y).tickSize(0))\r\n      .selectAll('text')\r\n      .style('font-size', '10px')\r\n  }, [data, labels, width, height, title])\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default D3ConfusionMatrix\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService2.ts"],"sourcesContent":["// services/backendService2.ts\n\nexport interface KPI {\n  rowKey: string;\n  value: string;\n  status?: string;\n}\n\nexport interface PlotDataPoint {\n  x: number;\n  y: number;\n  value?: number;\n  exceedsThreshold: boolean;\n}\n\nexport interface TableDataPoint {\n  id: string;\n  timePeriod: string;\n  status: string;\n}\n\nexport interface OutletsExceedingThreshold {\n  id: string;\n  y_true: number;\n  y_pred: number;\n  percentage_error: number;\n}\n\nexport interface DetailedMetric {\n  total_samples: number;\n  correct_predictions: { count: number; percentage: number; };\n  incorrect_predictions: { count: number; percentage: number; };\n  misclassifications: Record<string, { count: number; percentage: number; }>;\n}\n\nexport async function fetchData(): Promise<{\n  kpis: KPI[];\n  errors: { plotData: PlotDataPoint[]; tableData: TableDataPoint[] };\n  referenceMatrix: number[][];\n  currentMatrix: number[][];\n  outletsExceedingThreshold: OutletsExceedingThreshold[];\n  detailedMetrics: Record<string, DetailedMetric>;\n  state: string;\n  coverage: any;\n  clusters: any;\n  backwardAnalysis: any;\n  currentPeriod: string;\n  totalOutlets: number;\n  outletsExceedingThresholdCount: number;\n  xaiExplanation: string;\n}> {\n  try {\n    console.log(\"Fetching data from backend via relative URL: /mode3/data\");\n    const response = await fetch(`/mode3/data`, { credentials: 'include' });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const rawData = await response.json();\n    console.log(\"Parsed data:\", rawData);\n\n    // 1) Build KPIs\n    const kpis: KPI[] = [\n      {\n        rowKey: \"Drift Detected\",\n        value: rawData.drift_state?.drift_detected ? \"Yes\" : \"No\",\n        status: rawData.drift_state?.drift_detected ? \"Alert\" : \"Normal\",\n      },\n      {\n        rowKey: \"Jensen–Shannon Divergence\",\n        value: rawData.drift_state?.jensen_shannon_divergence\n          ? rawData.drift_state.jensen_shannon_divergence.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Population Stability Index\",\n        value: rawData.drift_state?.population_stability_index\n          ? rawData.drift_state.population_stability_index.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Precision (Reference)\",\n        value: rawData.metrics?.reference?.precision\n          ? rawData.metrics.reference.precision.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Precision (Current)\",\n        value: rawData.metrics?.current?.precision\n          ? rawData.metrics.current.precision.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Recall (Reference)\",\n        value: rawData.metrics?.reference?.recall\n          ? rawData.metrics.reference.recall.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Recall (Current)\",\n        value: rawData.metrics?.current?.recall\n          ? rawData.metrics.current.recall.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"F1 Score (Reference)\",\n        value: rawData.metrics?.reference?.f1_score\n          ? rawData.metrics.reference.f1_score.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"F1 Score (Current)\",\n        value: rawData.metrics?.current?.f1_score\n          ? rawData.metrics.current.f1_score.toFixed(4)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Accuracy\",\n        value: rawData.overall_metrics?.accuracy != null\n          ? rawData.overall_metrics.accuracy.toFixed(2)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Error Rate\",\n        value: rawData.overall_metrics?.error_rate != null\n          ? rawData.overall_metrics.error_rate.toFixed(2)\n          : \"N/A\",\n        status: \"Normal\",\n      },\n      {\n        rowKey: \"Status\",\n        value: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n        status: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n      },\n    ];\n\n    // 2) Pull both reference & current confusion-matrices\n    const referenceMatrix: number[][] =\n      rawData.confusion_matrices?.reference ??\n      rawData.confusion_matrix?.normalized ??\n      rawData.confusion_matrix?.raw ??\n      [];\n    const currentMatrix: number[][] =\n      rawData.confusion_matrices?.current ??\n      rawData.confusion_matrix?.normalized ??\n      rawData.confusion_matrix?.raw ??\n      [];\n\n    // 3) Flatten referenceMatrix into plotData\n    const plotData: PlotDataPoint[] = [];\n    referenceMatrix.forEach((row, y) =>\n      row.forEach((val, x) =>\n        plotData.push({ x, y, value: val, exceedsThreshold: false })\n      )\n    );\n\n    // 4) Table of misclassified cases\n    const tableData: TableDataPoint[] = (rawData.misclassified_table || []).map(\n      (item: any) => ({\n        id: item.id,\n        timePeriod: `True ${item.True} → Pred ${item.Predicted}`,\n        status: \"Misclassified\",\n      })\n    );\n\n    // 5) Outlets (we no longer need them—but still return for backward compatibility)\n    const outletsExceedingThreshold = (rawData.outlets_exceeding_threshold || []).map(\n      (item: any) => ({\n        id: item.id?.toString() || \"\",\n        y_true: item.y_true || 0,\n        y_pred: item.y_pred || 0,\n        percentage_error: item.percentage_error || 0,\n      })\n    );\n\n    // 6) Detailed metrics\n    const detailedMetrics: Record<string, DetailedMetric> =\n      rawData.detailed_metrics || {};\n\n    // 7) Other fields\n    return {\n      kpis,\n      errors: { plotData, tableData },\n      referenceMatrix,\n      currentMatrix,\n      outletsExceedingThreshold,\n      detailedMetrics,\n      state: rawData.state || \"Unknown\",\n      coverage: rawData.coverage || {},\n      clusters: rawData.clusters || {},\n      backwardAnalysis: rawData.backward_analysis || {},\n      currentPeriod: rawData.current_period || \"N/A\",\n      totalOutlets: rawData.total_outlets || 0,\n      outletsExceedingThresholdCount:\n        rawData.outlets_exceeding_threshold_count || 0,\n      xaiExplanation: rawData.explanation || \"No explanation available\",\n    };\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    throw new Error(\"Failed to fetch and process data\");\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode4/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useState } from 'react'\nimport Head from 'next/head'\nimport D3ConfusionMatrix from '../../components/D3ConfusionMatrix'\nimport {\n  fetchData,\n  KPI,\n  PlotDataPoint,\n  TableDataPoint,\n  Coverage,\n  Clusters,\n  BackwardAnalysis,\n} from '../../services/backendService2'\n\ninterface DetailedMetric {\n  total_samples: number\n  correct_predictions: { count: number; percentage: number }\n  incorrect_predictions: { count: number; percentage: number }\n  misclassifications: Record<string, { count: number; percentage: number }>\n}\n\nexport default function Mode3Page(): JSX.Element {\n  const [businessUnit, setBusinessUnit] = useState('CCS')\n  const [useCase, setUseCase] = useState('CC-Di')\n\n  const [kpis, setKpis] = useState<KPI[]>([])\n  const [errors, setErrors] = useState<{ plotData: PlotDataPoint[]; tableData: TableDataPoint[] }>({\n    plotData: [],\n    tableData: [],\n  })\n\n  const [referenceMatrix, setReferenceMatrix] = useState<number[][]>([])\n  const [currentMatrix, setCurrentMatrix] = useState<number[][]>([])\n  const [detailedMetrics, setDetailedMetrics] = useState<Record<string, DetailedMetric>>({})\n\n  const [stateVal, setStateVal] = useState('Unknown')\n  const [coverage, setCoverage] = useState<Coverage>({})\n  const [clusters, setClusters] = useState<Clusters>({})\n  const [backwardAnalysis, setBackwardAnalysis] = useState<BackwardAnalysis>({})\n  const [currentPeriod, setCurrentPeriod] = useState('N/A')\n  const [totalOutlets, setTotalOutlets] = useState(0)\n  const [outletsExceedingThresholdCount, setOutletsExceedingThresholdCount] = useState(0)\n  const [xaiExplanation, setXaiExplanation] = useState('No explanation available')\n\n  const [loading, setLoading] = useState(true)\n\n  // build labels [\"0\",\"1\",…] for axes\n  const makeLabels = (n: number) => Array.from({ length: n }, (_, i) => i.toString())\n\n  // cap matrix square at 300px\n  const computeSquareSize = (grid: number[][]) => {\n    const maxPx = 300\n    const rows = grid.length\n    const cols = grid[0]?.length || 0\n    if (!rows || !cols) return maxPx\n    const cellSize = Math.min(maxPx / rows, maxPx / cols)\n    return Math.max(rows, cols) * cellSize\n  }\n\n  useEffect(() => {\n    async function init() {\n      setLoading(true)\n      try {\n        const savedBU = localStorage.getItem('businessUnit')\n        const savedUC = localStorage.getItem('useCase')\n        if (savedBU) setBusinessUnit(savedBU)\n        if (savedUC) setUseCase(savedUC)\n\n        const {\n          kpis: fetchedKpis,\n          errors: fetchedErrors,\n          referenceMatrix: fetchedRefM,\n          currentMatrix: fetchedCurrM,\n          detailedMetrics: fetchedDetailed,\n          state: fetchedState,\n          coverage: fetchedCoverage,\n          clusters: fetchedClusters,\n          backwardAnalysis: fetchedBackward,\n          currentPeriod: fetchedPeriod,\n          totalOutlets: fetchedTotal,\n          outletsExceedingThresholdCount: fetchedCount,\n          xaiExplanation: fetchedXai,\n        } = await fetchData()\n\n        setKpis(fetchedKpis)\n        setErrors(fetchedErrors)                     // ← fixed typo here\n        setReferenceMatrix(fetchedRefM)\n        setCurrentMatrix(fetchedCurrM)\n        setDetailedMetrics(fetchedDetailed)\n        setStateVal(fetchedState)\n        setCoverage(fetchedCoverage)\n        setClusters(fetchedClusters)\n        setBackwardAnalysis(fetchedBackward)\n        setCurrentPeriod(fetchedPeriod)\n        setTotalOutlets(fetchedTotal)\n        setOutletsExceedingThresholdCount(fetchedCount)\n        setXaiExplanation(fetchedXai)\n      } catch (err) {\n        console.error('Error fetching data:', err)\n      } finally {\n        setLoading(false)\n      }\n    }\n    init()\n  }, [])\n\n  const handleBusinessUnitChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const v = e.target.value\n    setBusinessUnit(v)\n    setUseCase('')\n    localStorage.setItem('businessUnit', v)\n  }\n  const handleUseCaseChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const v = e.target.value\n    setUseCase(v)\n    localStorage.setItem('useCase', v)\n  }\n  const getUseCaseOptions = () => {\n    if (businessUnit === 'CCS') return ['CC-Di', 'CC-MT']\n    if (businessUnit === 'JMSL') return ['JM-Ch']\n    return []\n  }\n\n  return (\n    <div className=\"bg-gray-900 min-h-screen flex flex-col\">\n      <Head>\n        <title>Mode 3 | CL Dashboard</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\"\n        />\n      </Head>\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n\n        {/* Header & selectors */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">OCTAVE - CL Dashboard</h2>\n          <p className=\"text-blue-200 mb-2\">\n            Current Period: {loading ? 'Loading...' : currentPeriod}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            State: {loading ? 'Loading...' : stateVal}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Total Outlets: {loading ? 'Loading...' : totalOutlets}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Outlets Exceeding Threshold: {loading ? 'Loading...' : outletsExceedingThresholdCount}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Coverage – Total Points: {loading ? 'Loading...' : coverage.total_points ?? 'N/A'}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Coverage – Warning: {loading ? 'Loading...' : coverage.warning_coverage ?? 'N/A'}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Coverage – Drift: {loading ? 'Loading...' : coverage.drift_coverage ?? 'N/A'}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Backward Analysis – 10% Drift:{' '}\n            {loading ? 'Loading...' : backwardAnalysis.backward_10_percent_drift ? 'Yes' : 'No'}\n          </p>\n          <p className=\"text-blue-200 mb-2\">\n            Backward Analysis – 10% Warning:{' '}\n            {loading ? 'Loading...' : backwardAnalysis.backward_10_percent_warning ? 'Yes' : 'No'}\n          </p>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mt-4\">\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Business Unit</h3>\n              <select\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n                value={businessUnit}\n                onChange={handleBusinessUnitChange}\n              >\n                <option value=\"\">Select Business Unit</option>\n                <option value=\"CCS\">CCS</option>\n                <option value=\"JMSL\">JMSL</option>\n              </select>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Use Case</h3>\n              <select\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n                value={useCase}\n                onChange={handleUseCaseChange}\n                disabled={!businessUnit}\n              >\n                <option value=\"\">{businessUnit ? 'Select Use Case' : 'Select BU first'}</option>\n                {getUseCaseOptions().map(o => (\n                  <option key={o} value={o}>{o}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Short Code</h3>\n              <input\n                type=\"text\"\n                value={useCase || '-'}\n                readOnly\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n              />\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Runtime</h3>\n              <input\n                type=\"text\"\n                value=\"2h 45m\"\n                readOnly\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* KPI Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-6\">\n          {kpis.map(kpi => (\n            <div\n              key={kpi.rowKey}\n              className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\"\n            >\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">{kpi.rowKey}</h3>\n              <p className={`text-xl ${\n                kpi.status === 'Alert' || kpi.status === 'Warning' ? 'text-yellow-400'\n                : kpi.status === 'Error' ? 'text-red-400'\n                : 'text-green-400'\n              }`}>\n                {loading ? 'Loading...' : kpi.value}\n              </p>\n            </div>\n          ))}\n        </div>\n\n        {/* Confusion Matrices */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          {[ \n            { title: 'Reference Matrix', grid: referenceMatrix },\n            { title: 'Current Matrix',   grid: currentMatrix   },\n          ].map(({ title, grid }, idx) => {\n            const side = computeSquareSize(grid)\n            return (\n              <div\n                key={idx}\n                className=\"bg-gray-800 rounded-xl shadow-md p-6 border border-gray-700 flex flex-col items-center\"\n              >\n                <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">{title}</h2>\n                {!loading && grid.length > 0 ? (\n                  <div style={{ width: side, height: side }}>\n                    <D3ConfusionMatrix\n                      data={grid}\n                      labels={makeLabels(grid[0].length)}\n                      width={side}\n                      height={side}\n                    />\n                  </div>\n                ) : (\n                  <div className=\"text-white\">Loading…</div>\n                )}\n              </div>\n            )\n          })}\n        </div>\n\n        {/* Detailed Metrics */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Detailed Metrics by Class</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-700\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase\">Class</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase\">Total</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase\">Correct</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase\">Incorrect</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase\">Misclassifications</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-700\">\n                {loading ? (\n                  <tr>\n                    <td colSpan={5} className=\"px-6 py-4 text-center text-sm text-white\">Loading…</td>\n                  </tr>\n                ) : (\n                  Object.entries(detailedMetrics).map(([cls, dm]) => (\n                    <tr key={cls}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{cls}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{dm.total_samples}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">\n                        {dm.correct_predictions.count} ({dm.correct_predictions.percentage.toFixed(1)}%)\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">\n                        {dm.incorrect_predictions.count} ({dm.incorrect_predictions.percentage.toFixed(1)}%)\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">\n                        {Object.entries(dm.misclassifications)\n                          .map(([p, m]) => `${p}: ${m.count} (${m.percentage.toFixed(1)}%)`)\n                          .join(', ')}\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* XAI Explanation */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">XAI Result</h2>\n          <div className=\"space-y-3 text-white\">\n            {loading ? (\n              <p>Loading explanation...</p>\n            ) : xaiExplanation ? (\n              <div className=\"prose prose-invert\" dangerouslySetInnerHTML={{ __html: xaiExplanation }} />\n            ) : (\n              <p className=\"text-red-400\">No explanation available</p>\n            )}\n          </div>\n        </div>\n\n        {/* Misclassified Table (BOTTOM) */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Misclassified Table</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-700\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase\">ID</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase\">True &rarr; Pred</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-700\">\n                {loading ? (\n                  <tr>\n                    <td colSpan={2} className=\"px-6 py-4 text-center text-sm text-white\">Loading…</td>\n                  </tr>\n                ) : errors.tableData.length > 0 ? (\n                  errors.tableData.map((r, i) => (\n                    <tr key={i} className=\"bg-red-900/10\">\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{r.id}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-300\">{r.timePeriod}</td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan={2} className=\"px-6 py-4 text-center text-sm text-white\">No misclassified data</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}