{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/components/D3ConfusionMatrix.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport * as d3 from 'd3'\r\n\r\nexport interface D3ConfusionMatrixProps {\r\n  data: number[][]\r\n  labels: string[]\r\n  title?: string\r\n  width: number\r\n  height: number\r\n}\r\n\r\nconst D3ConfusionMatrix: React.FC<D3ConfusionMatrixProps> = ({\r\n  data,\r\n  labels,\r\n  title,\r\n  width,\r\n  height,\r\n}) => {\r\n  const svgRef = useRef<SVGSVGElement>(null)\r\n\r\n  useEffect(() => {\r\n    if (!data.length) return\r\n\r\n    const maxVal = d3.max(data.flat()) ?? 1\r\n    const margin = { top: title ? 30 : 10, right: 10, bottom: 10, left: 10 }\r\n    const innerW = width - margin.left - margin.right\r\n    const innerH = height - margin.top - margin.bottom\r\n\r\n    const x = d3\r\n      .scaleBand<string>()\r\n      .domain(labels)\r\n      .range([0, innerW])\r\n      .padding(0.05)\r\n\r\n    const y = d3\r\n      .scaleBand<string>()\r\n      .domain(labels)\r\n      .range([0, innerH])\r\n      .padding(0.05)\r\n\r\n    const color = d3\r\n      .scaleSequential(d3.interpolateBlues)\r\n      .domain([0, maxVal])\r\n\r\n    const svg = d3.select(svgRef.current!)\r\n    svg.selectAll('*').remove()\r\n    svg.attr('viewBox', `0 0 ${width} ${height}`)\r\n\r\n    // optional title\r\n    if (title) {\r\n      svg\r\n        .append('text')\r\n        .attr('x', width / 2)\r\n        .attr('y', margin.top / 2)\r\n        .attr('text-anchor', 'middle')\r\n        .style('fill', 'white')\r\n        .style('font-size', '14px')\r\n        .text(title)\r\n    }\r\n\r\n    const g = svg\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n    // cells + centered text\r\n    data.forEach((row, i) => {\r\n      row.forEach((val, j) => {\r\n        const xpos = x(labels[j])!\r\n        const ypos = y(labels[i])!\r\n\r\n        g.append('rect')\r\n          .attr('x', xpos)\r\n          .attr('y', ypos)\r\n          .attr('width', x.bandwidth())\r\n          .attr('height', y.bandwidth())\r\n          .attr('fill', color(val))\r\n\r\n        g.append('text')\r\n          .attr('x', xpos + x.bandwidth() / 2)\r\n          .attr('y', ypos + y.bandwidth() / 2)\r\n          .attr('text-anchor', 'middle')\r\n          .attr('dominant-baseline', 'middle')\r\n          .style('font-size', `${Math.min(x.bandwidth(), y.bandwidth()) * 0.4}px`)\r\n          .attr('fill', val > maxVal / 2 ? 'white' : 'black')\r\n          .text(val)\r\n      })\r\n    })\r\n\r\n    // axes (no tick lines)\r\n    g.append('g')\r\n      .call(d3.axisTop(x).tickSize(0))\r\n      .selectAll('text')\r\n      .style('font-size', '10px')\r\n\r\n    g.append('g')\r\n      .call(d3.axisLeft(y).tickSize(0))\r\n      .selectAll('text')\r\n      .style('font-size', '10px')\r\n  }, [data, labels, width, height, title])\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default D3ConfusionMatrix\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode2/DriftWarningChart.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\ninterface PlotDataPoint {\n  x: number;\n  y: number;\n  exceedsThreshold: boolean;\n}\n\ninterface DriftWarningChartProps {\n  plotData: PlotDataPoint[];\n}\n\nexport default function DriftWarningChart({ plotData }: DriftWarningChartProps): React.ReactElement {\n  const chartRef = useRef<Chart | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    console.log('DriftWarningChart plotData length:', plotData.length);\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    if (!ctx) return;\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n\n    chartRef.current = new Chart(ctx, {\n      type: 'scatter',\n      data: {\n        datasets: [\n          {\n            label: 'Drift State',\n            data: plotData.map((item) => ({ x: item.x, y: item.y })),\n            borderColor: 'rgb(75, 192, 192)',\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            pointBackgroundColor: plotData.map((item) => {\n              if (item.y === 0) return 'rgba(54, 162, 235, 0.8)'; // normal - blue\n              if (item.y === 1) return 'rgba(255, 206, 86, 0.8)'; // warning - yellow\n              if (item.y === 2) return 'rgba(255, 99, 132, 0.8)'; // drift - red\n              return 'rgba(201, 203, 207, 0.8)'; // default grey\n            }),\n            borderWidth: 2,\n            showLine: true,\n            tension: 0.1,\n            fill: false,\n            stepped: false,\n            pointRadius: 5,\n            pointHoverRadius: 7,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            labels: {\n              color: '#e5e7eb',\n            },\n          },\n          tooltip: {\n            mode: 'nearest',\n            intersect: true,\n            callbacks: {\n              label: function(context) {\n                const y = context.parsed.y;\n                if (y === 0) return 'Normal';\n                if (y === 1) return 'Warning';\n                if (y === 2) return 'Drift';\n                return 'Unknown';\n              }\n            }\n          },\n        },\n        scales: {\n          x: {\n            type: 'linear',\n            title: {\n              display: true,\n              text: 'Index',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            ticks: {\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Drift State',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            beginAtZero: true,\n            ticks: {\n              stepSize: 1,\n              callback: function (this: any, tickValue: string | number) {\n                const value = typeof tickValue === 'string' ? parseInt(tickValue) : tickValue;\n                if (value === 0) return 'Normal';\n                if (value === 1) return 'Warning';\n                if (value === 2) return 'Drift';\n                return '';\n              },\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            min: 0,\n            max: 2,\n          },\n        },\n        animation: {\n          duration: 1000,\n          easing: 'easeInOutQuad',\n        },\n        elements: {\n          point: {\n            radius: 5,\n            hoverRadius: 7,\n          },\n        },\n      },\n    });\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n        chartRef.current = null;\n      }\n    };\n  }, [plotData]);\n\n  return <canvas ref={canvasRef} style={{ width: '100%', height: '416px' }} />;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService3.ts"],"sourcesContent":["// services/backendService3.ts\n\nexport interface KPI {\n    rowKey: string;\n    value: string;\n    status?: string;\n  }\n  \n  export interface PlotDataPoint {\n    x: number;\n    y: number;\n    exceedsThreshold: boolean;\n    // `value` isn’t needed here, but you can add `value?: number` if you like\n  }\n  \n  export interface TableDataPoint {\n    id: string;\n    timePeriod: string;\n    status: string;\n  }\n  \n  export interface OutletsExceedingThreshold {\n    id: string;\n    y_true: number;\n    y_pred: number;\n    percentage_error: number;\n  }\n  \n  export interface DetailedMetric {\n    total_samples: number;\n    correct_predictions: { count: number; percentage: number };\n    incorrect_predictions: { count: number; percentage: number };\n    misclassifications: Record<string, { count: number; percentage: number }>;\n  }\n  \n  export async function fetchData(): Promise<{\n    kpis: KPI[];\n    errors: { plotData: PlotDataPoint[]; tableData: TableDataPoint[] };\n    referenceMatrix: number[][];\n    currentMatrix: number[][];\n    outletsExceedingThreshold: OutletsExceedingThreshold[];\n    detailedMetrics: Record<string, DetailedMetric>;\n    state: string;\n    coverage: any;\n    clusters: any;\n    backwardAnalysis: any;\n    currentPeriod: string;\n    totalOutlets: number;\n    outletsExceedingThresholdCount: number;\n    xaiExplanation: string;\n  }> {\n    try {\n      console.log(\"Fetching data from backend via relative URL: /mode4/data\");\n      const response = await fetch(`/mode4/data`, { credentials: \"include\" });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const rawData = await response.json();\n      console.log(\"Parsed data:\", rawData);\n  \n      // 1) Build KPIs\n      const kpis: KPI[] = [\n        {\n          rowKey: \"Drift Detected\",\n          value: rawData.drift_state?.drift_detected ? \"Yes\" : \"No\",\n          status: rawData.drift_state?.drift_detected ? \"Alert\" : \"Normal\",\n        },\n        {\n          rowKey: \"Jensen–Shannon Divergence\",\n          value: rawData.drift_state?.jensen_shannon_divergence != null\n            ? rawData.drift_state.jensen_shannon_divergence.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Population Stability Index\",\n          value: rawData.drift_state?.population_stability_index != null\n            ? rawData.drift_state.population_stability_index.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Precision (Reference)\",\n          value: rawData.metrics?.reference?.precision != null\n            ? rawData.metrics.reference.precision.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Precision (Current)\",\n          value: rawData.metrics?.current?.precision != null\n            ? rawData.metrics.current.precision.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Recall (Reference)\",\n          value: rawData.metrics?.reference?.recall != null\n            ? rawData.metrics.reference.recall.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Recall (Current)\",\n          value: rawData.metrics?.current?.recall != null\n            ? rawData.metrics.current.recall.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"F1 Score (Reference)\",\n          value: rawData.metrics?.reference?.f1_score != null\n            ? rawData.metrics.reference.f1_score.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"F1 Score (Current)\",\n          value: rawData.metrics?.current?.f1_score != null\n            ? rawData.metrics.current.f1_score.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Accuracy\",\n          value: rawData.overall_metrics?.accuracy != null\n            ? rawData.overall_metrics.accuracy.toFixed(2)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Error Rate\",\n          value: rawData.overall_metrics?.error_rate != null\n            ? rawData.overall_metrics.error_rate.toFixed(2)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Status\",\n          value: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n          status: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n        },\n      ];\n  \n      // 2) Confusion matrices: raw → reference, normalized → current\n      const referenceMatrix: number[][] = rawData.confusion_matrix?.raw ?? [];\n      const currentMatrix: number[][] = rawData.confusion_matrix?.normalized ?? [];\n  \n      // 3) Build the drift/warning plot from indices\n      const plotData: PlotDataPoint[] = [];\n      const idx = rawData.indices ?? { normal: [], warning: [], drift: [] };\n      idx.normal.forEach((x: number) =>\n        plotData.push({ x, y: 0, exceedsThreshold: false })\n      );\n      idx.warning.forEach((x: number) =>\n        plotData.push({ x, y: 1, exceedsThreshold: false })\n      );\n      idx.drift.forEach((x: number) =>\n        plotData.push({ x, y: 2, exceedsThreshold: false })\n      );\n      plotData.sort((a, b) => a.x - b.x);\n  \n      // 4) Misclassified table\n      const tableData: TableDataPoint[] = (rawData.misclassified_table || []).map(\n        (item: any) => ({\n          id: item.id,\n          timePeriod: `True ${item.True} → Pred ${item.Predicted}`,\n          status: \"Misclassified\",\n        })\n      );\n  \n      // 5) Outlets exceeding threshold (still returned for BC)\n      const outletsExceedingThreshold: OutletsExceedingThreshold[] = (\n        rawData.outlets_exceeding_threshold || []\n      ).map((item: any) => ({\n        id: item.id?.toString() || \"\",\n        y_true: item.y_true || 0,\n        y_pred: item.y_pred || 0,\n        percentage_error: item.percentage_error || 0,\n      }));\n  \n      // 6) Detailed metrics\n      const detailedMetrics: Record<string, DetailedMetric> =\n        rawData.detailed_metrics || {};\n  \n      // 7) Other fields\n      return {\n        kpis,\n        errors: { plotData, tableData },\n        referenceMatrix,\n        currentMatrix,\n        outletsExceedingThreshold,\n        detailedMetrics,\n        state: rawData.state || \"Unknown\",\n        coverage: rawData.coverage || {},\n        clusters: rawData.clusters || {},\n        backwardAnalysis: rawData.backward_analysis || {},\n        currentPeriod: rawData.current_period || \"N/A\",\n        totalOutlets: rawData.total_outlets || 0,\n        outletsExceedingThresholdCount:\n          rawData.outlets_exceeding_threshold_count || 0,\n        xaiExplanation: rawData.xai?.explanation || \"No explanation available\",\n      };\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      throw new Error(\"Failed to fetch and process data\");\n    }\n  }\n  "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode4/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport { Chart, registerables } from \"chart.js\";\nimport D3ConfusionMatrix from \"../../components/D3ConfusionMatrix\";\nimport DriftWarningChart from \"../mode2/DriftWarningChart\";\nimport ReactMarkdown from \"react-markdown\";\nimport {\n  AlertCircle,\n  AlertTriangle,\n  CheckCircle,\n  RefreshCw,\n  Info,\n} from \"lucide-react\";\nimport {\n  fetchData,\n  type KPI,\n  type PlotDataPoint,\n  type TableDataPoint,\n} from \"../../services/backendService3\";\n\nChart.register(...registerables);\n\ninterface DetailedMetric {\n  total_samples: number;\n  correct_predictions: { count: number; percentage: number };\n  incorrect_predictions: { count: number; percentage: number };\n  misclassifications: Record<string, { count: number; percentage: number }>;\n}\n\nexport default function Mode4Page(): React.ReactElement {\n  // --- DASHBOARD FILTER STATES ---\n  const [businessUnit, setBusinessUnit] = useState<string>(\"\");\n  const [useCase, setUseCase] = useState<string>(\"\");\n  const [shortCode, setShortCode] = useState<string>(\"\");\n  const [alertKeeperValue, setAlertKeeperValue] = useState<string>(\"\");\n  const [runtimeValue, setRuntimeValue] = useState<number>(1);\n\n  const availableAlertKeepers = [\"KeeperA\", \"KeeperB\", \"KeeperC\"];\n  const useCases: Record<string, string[]> = {\n    CCS: [\"CC-Di\", \"CC-MT\"],\n    JMSL: [\"JM-Ch\"],\n  };\n\n  // --- CORE DATA STATES ---\n  const [kpis, setKpis] = useState<KPI[]>([]);\n  const [errors, setErrors] = useState<{\n    plotData: PlotDataPoint[];\n    tableData: TableDataPoint[];\n  }>({ plotData: [], tableData: [] });\n  const [referenceMatrix, setReferenceMatrix] = useState<number[][]>([]);\n  const [currentMatrix, setCurrentMatrix] = useState<number[][]>([]);\n  const [detailedMetrics, setDetailedMetrics] = useState<\n    Record<string, DetailedMetric>\n  >({});\n  const [xaiExplanation, setXaiExplanation] = useState<string>(\n    \"No explanation available\"\n  );\n  const [backendError, setBackendError] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [currentPeriod, setCurrentPeriod] = useState<string>(\"N/A\");\n  const [outletsExceedingThresholdCount, setOutletsExceedingThresholdCount] =\n    useState<number>(0);\n\n  // --- STATUS DISTRIBUTION FOR PIE CHART ---\n  const [statusDistribution, setStatusDistribution] = useState({\n    good: 65,\n    warning: 25,\n    error: 10,\n  });\n\n  // --- HELPERS ---\n  const makeLabels = (n: number) =>\n    Array.from({ length: n }, (_, i) => i.toString());\n  const computeSquareSize = (grid: number[][]) => {\n    const maxPx = 300;\n    const rows = grid.length;\n    const cols = grid[0]?.length || 0;\n    if (!rows || !cols) return maxPx;\n    const cellSize = Math.min(maxPx / rows, maxPx / cols);\n    return Math.max(rows, cols) * cellSize;\n  };\n  const getStatusColor = (s?: string) => {\n    if (!s) return \"text-gray-400\";\n    switch (s.toLowerCase()) {\n      case \"warning\":\n        return \"text-amber-400\";\n      case \"error\":\n        return \"text-rose-500\";\n      case \"success\":\n      case \"normal\":\n        return \"text-emerald-400\";\n      default:\n        return \"text-sky-400\";\n    }\n  };\n  const getStatusIcon = (s?: string) => {\n    if (!s) return <Info className=\"h-5 w-5 text-gray-400\" />;\n    switch (s.toLowerCase()) {\n      case \"warning\":\n        return <AlertTriangle className=\"h-5 w-5 text-amber-400\" />;\n      case \"error\":\n        return <AlertCircle className=\"h-5 w-5 text-rose-500\" />;\n      case \"success\":\n      case \"normal\":\n        return <CheckCircle className=\"h-5 w-5 text-emerald-400\" />;\n      default:\n        return <Info className=\"h-5 w-5 text-sky-400\" />;\n    }\n  };\n\n  // --- FETCH DATA ---\n  const initData = async () => {\n    setLoading(true);\n    setBackendError(null);\n    try {\n      const {\n        kpis: fetchedKpis,\n        errors: fetchedErrors,\n        referenceMatrix: fetchedRefM,\n        currentMatrix: fetchedCurrM,\n        detailedMetrics: fetchedDetailed,\n        xaiExplanation: fetchedXai,\n        currentPeriod: fetchedPeriod,\n        outletsExceedingThresholdCount: fetchedCount,\n      } = await fetchData();\n\n      setKpis(fetchedKpis);\n      setErrors(fetchedErrors);\n      setReferenceMatrix(fetchedRefM);\n      setCurrentMatrix(fetchedCurrM);\n      setDetailedMetrics(fetchedDetailed);\n      setXaiExplanation(fetchedXai);\n      setCurrentPeriod(fetchedPeriod);\n      setOutletsExceedingThresholdCount(fetchedCount);\n      // Optionally recalc statusDistribution from fetched data here\n    } catch (err) {\n      console.error(err);\n      setBackendError(err instanceof Error ? err.message : \"Unknown error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    initData();\n  }, []);\n\n  // --- RENDER PIE CHART ONCE LOADED ---\n  useEffect(() => {\n    if (loading) return;\n    const ctx = document.getElementById(\n      \"statusPieChart\"\n    ) as HTMLCanvasElement;\n    if (!ctx) return;\n    new Chart(ctx, {\n      type: \"pie\",\n      data: {\n        labels: [\"Good\", \"Warning\", \"Error\"],\n        datasets: [\n          {\n            data: [\n              statusDistribution.good,\n              statusDistribution.warning,\n              statusDistribution.error,\n            ],\n            backgroundColor: [\n              \"rgba(52,211,153,0.8)\",\n              \"rgba(251,191,36,0.8)\",\n              \"rgba(239,68,68,0.8)\",\n            ],\n            borderColor: [\n              \"rgba(52,211,153,1)\",\n              \"rgba(251,191,36,1)\",\n              \"rgba(239,68,68,1)\",\n            ],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: \"right\",\n            labels: {\n              color: \"#e5e7eb\",\n              font: { size: 14 },\n              generateLabels: (chart) =>\n                chart.data.labels!.map((label, i) => ({\n                  text: `${label}: ${\n                    chart.data.datasets![0].data[i]\n                  }%`,\n                  fillStyle:\n                    chart.data.datasets![0].backgroundColor![i] as string,\n                  strokeStyle:\n                    chart.data.datasets![0].borderColor![i] as string,\n                  lineWidth: 1,\n                  hidden: false,\n                  index: i,\n                })),\n            },\n          },\n          tooltip: {\n            callbacks: {\n              label: (ctx) => `${ctx.label}: ${ctx.raw}%`,\n            },\n          },\n        },\n      },\n    });\n  }, [loading, statusDistribution]);\n\n  return (\n    <div className=\"bg-gradient-to-b from-gray-950 to-gray-900 min-h-screen flex flex-col\">\n      <Head>\n        <title>Mode 4 | CL Dashboard</title>\n      </Head>\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        {/* Backend Error */}\n        {backendError && (\n          <div className=\"bg-rose-950/40 border border-rose-800/60 rounded-lg p-4 mb-6 backdrop-blur-sm shadow-lg\">\n            <div className=\"flex items-center\">\n              <AlertCircle className=\"h-5 w-5 text-rose-400 mr-2\" />\n              <h3 className=\"text-lg font-medium text-rose-300\">\n                Backend Error\n              </h3>\n            </div>\n            <p className=\"mt-2 text-rose-200\">{backendError}</p>\n            <button\n              onClick={initData}\n              className=\"mt-3 inline-flex items-center gap-2 px-4 py-2 bg-rose-800/50 hover:bg-rose-700/70 text-white rounded-md text-sm transition\"\n            >\n              <RefreshCw className=\"h-4 w-4\" /> Retry\n            </button>\n          </div>\n        )}\n\n        {/* Header */}\n        <div className=\"flex flex-col md:flex-row md:justify-between mb-6\">\n          <h2 className=\"text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4 md:mb-0\">\n            OCTAVE – CL Dashboard\n          </h2>\n          <button\n            onClick={initData}\n            className=\"inline-flex items-center gap-2 px-4 py-2 bg-sky-800/40 hover:bg-sky-700/60 text-white rounded-md text-sm transition\"\n          >\n            <RefreshCw className=\"h-4 w-4\" /> Refresh\n          </button>\n        </div>\n\n        {/* Mode-1-Style Dashboard */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          {/* Static Filters Box */}\n          <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded-lg border border-sky-800/30 shadow-md mb-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"text-lg font-medium text-sky-300 mb-2\">\n                  Business Unit\n                </h3>\n                <ul className=\"list-disc list-inside text-sky-200 mb-4\">\n                  <li>\n                    {loading\n                      ? \"Loading…\"\n                      : businessUnit || \"Not Selected\"}\n                  </li>\n                </ul>\n                <h3 className=\"text-lg font-medium text-sky-300 mb-2\">\n                  Use Case\n                </h3>\n                <ul className=\"list-disc list-inside text-sky-200\">\n                  <li>\n                    {loading ? \"Loading…\" : useCase || \"Not Selected\"}\n                  </li>\n                </ul>\n              </div>\n              <div>\n                <h3 className=\"text-lg font-medium text-sky-300 mb-2\">\n                  Short Code\n                </h3>\n                <ul className=\"list-disc list-inside text-sky-200 mb-4\">\n                  <li>\n                    {loading\n                      ? \"Loading…\"\n                      : shortCode || \"Not Available\"}\n                  </li>\n                </ul>\n                <h3 className=\"text-lg font-medium text-sky-300 mb-2\">\n                  Alert Keeper\n                </h3>\n                <ul className=\"list-disc list-inside text-sky-200\">\n                  <li>\n                    {loading\n                      ? \"Loading…\"\n                      : alertKeeperValue || \"Not Selected\"}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          {/* Runtime & Status Distribution */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n            {/* Runtime */}\n            <div className=\"lg:col-span-2 bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded-lg border border-sky-800/30 shadow-md\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2\">\n                Runtime\n              </h3>\n              <select\n                className=\"w-full bg-gray-800/80 border border-sky-700/50 rounded-md p-2 text-white focus:ring-2 focus:ring-sky-500\"\n                value={runtimeValue}\n                onChange={(e) =>\n                  setRuntimeValue(Number(e.target.value))\n                }\n              >\n                {[1, 2, 3, 4].map((n) => (\n                  <option key={n} value={n}>\n                    {n}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Status Distribution */}\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-6 rounded-lg border border-sky-800/30 shadow-md\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2\">\n                Status Distribution\n              </h3>\n              <div className=\"h-48\">\n                <canvas id=\"statusPieChart\"></canvas>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* KPI Section */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Key Performance Indicators\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n            {kpis.map((kpi) => (\n              <div\n                key={kpi.rowKey}\n                className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md hover:shadow-sky-900/20 hover:border-sky-700/50 transition\"\n              >\n                <h3 className=\"text-lg font-medium text-sky-300 mb-2\">\n                  {kpi.rowKey}\n                </h3>\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                    {getStatusIcon(kpi.status)}\n                  </div>\n                  <p\n                    className={`text-xl font-semibold ${getStatusColor(\n                      kpi.status\n                    )}`}\n                  >\n                    {loading ? \"Loading...\" : kpi.value}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Drift & Warning Chart */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Drift & Warning Over Time\n          </h2>\n          <div className=\"bg-gray-800/60 rounded-lg p-4 border border-gray-700/50 h-72 relative\">\n            {!loading ? (\n              <DriftWarningChart plotData={errors.plotData} />\n            ) : (\n              <div className=\"flex items-center justify-center h-full\">\n                <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Confusion Matrix */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl p-6 mb-6 border border-gray-700/50 backdrop-blur-sm flex flex-col items-center\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Reference Matrix\n          </h2>\n          {!loading && referenceMatrix.length > 0 ? (\n            <div\n              className=\"bg-gray-800/60 rounded-lg p-4 border border-gray-700/50\"\n              style={{\n                width: computeSquareSize(referenceMatrix) + 40,\n                height: computeSquareSize(referenceMatrix) + 40,\n              }}\n            >\n              <div\n                style={{\n                  width: computeSquareSize(referenceMatrix),\n                  height: computeSquareSize(referenceMatrix),\n                }}\n              >\n                <D3ConfusionMatrix\n                  data={referenceMatrix}\n                  labels={makeLabels(referenceMatrix[0].length)}\n                  width={computeSquareSize(referenceMatrix)}\n                  height={computeSquareSize(referenceMatrix)}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-64 w-full bg-gray-800/60 rounded-lg border border-gray-700/50\">\n              <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n            </div>\n          )}\n        </div>\n\n        {/* Detailed Metrics */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Detailed Metrics by Class\n          </h2>\n          {loading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto rounded-lg border border-gray-700/50\">\n              <table className=\"min-w-full divide-y divide-gray-700/50\">\n                <thead className=\"bg-gray-800/60\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Class\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Total\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Correct\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Incorrect\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Misclassifications\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-gray-800/30 divide-y divide-gray-700/50\">\n                  {Object.entries(detailedMetrics).map(([cls, dm]) => (\n                    <tr\n                      key={cls}\n                      className=\"hover:bg-gray-700/30 transition-colors duration-150\"\n                    >\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">\n                        {cls}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                        {dm.total_samples}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-emerald-400\">\n                        {dm.correct_predictions.count}{\" \"}\n                        <span className=\"text-gray-400\">\n                          ({dm.correct_predictions.percentage.toFixed(1)}%)\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-rose-400\">\n                        {dm.incorrect_predictions.count}{\" \"}\n                        <span className=\"text-gray-400\">\n                          ({dm.incorrect_predictions.percentage.toFixed(1)}%)\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                        {Object.entries(dm.misclassifications)\n                          .map(\n                            ([p, m]) =>\n                              `${p}: ${m.count}${\n                                m.percentage > 0\n                                  ? ` (${m.percentage.toFixed(1)}%)`\n                                  : \"\"\n                              }`\n                          )\n                          .join(\", \")}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n\n        {/* XAI Result */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            XAI Result\n          </h2>\n          <div className=\"bg-gray-800/60 rounded-lg p-6 border border-gray-700/50\">\n            {loading ? (\n              <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500 mx-auto\" />\n            ) : (\n              <div className=\"prose prose-invert prose-sky max-w-none\">\n                <ReactMarkdown>{xaiExplanation}</ReactMarkdown>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Misclassified Table */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 border border-gray-700/50 backdrop-blur-sm max-h-96 overflow-y-auto\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Misclassified Table\n          </h2>\n          {loading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <RefreshCw className=\"animate-spin h-8 w-8 text-sky-500\" />\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto rounded-lg border border-gray-700/50\">\n              <table className=\"min-w-full divide-y divide-gray-700/50\">\n                <thead className=\"bg-gray-800/60\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      ID\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      True &rarr; Pred\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-gray-800/30 divide-y divide-gray-700/50\">\n                  {errors.tableData.length > 0 ? (\n                    errors.tableData.map((r, i) => (\n                      <tr\n                        key={i}\n                        className=\"hover:bg-rose-900/20 transition-colors duration-150\"\n                      >\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">\n                          {r.id}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-rose-300\">\n                          {r.timePeriod}\n                        </td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td\n                        colSpan={2}\n                        className=\"px-6 py-4 text-center text-sm text-gray-400\"\n                      >\n                        No misclassified data\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}