{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService.ts"],"sourcesContent":["export async function fetchData() {\n  try {\n    console.log(\"Fetching data from backend via proxy: /api/mode1/data\");\n    // Fetch data from the backend endpoint via Next.js proxy\n    const response = await fetch(`/api/mode1/data`, {\n      credentials: 'include',\n    });\n    \n    console.log(\"Raw response:\", response);\n\n    // Check if the response is successful\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    // Parse the JSON response\n    const rawData = await response.json();\n\n    console.log(\"Parsed data:\", rawData);\n\n    // Adjusted extraction based on actual backend data structure\n    // Example: using filtered_data as KPIs, id_error as errors, and some explanation field if available\n    const kpis = rawData.filtered_data || [];\n    const errors = {\n      plotData: rawData.id_error || [],\n      tableData: rawData.id_error || [],\n    };\n    const xaiExplanation = rawData.xaiExplanation || \"No explanation available\";\n\n    // Return the transformed data\n    return {\n      kpis,\n      errors,\n      xaiExplanation,\n    };\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    throw new Error(\"Failed to fetch and process data\");\n  }\n}\n"],"names":[],"mappings":";;;AAAO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,yDAAyD;QACzD,MAAM,WAAW,MAAM,MAAM,CAAC,eAAe,CAAC,EAAE;YAC9C,aAAa;QACf;QAEA,QAAQ,GAAG,CAAC,iBAAiB;QAE7B,sCAAsC;QACtC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QAEA,0BAA0B;QAC1B,MAAM,UAAU,MAAM,SAAS,IAAI;QAEnC,QAAQ,GAAG,CAAC,gBAAgB;QAE5B,6DAA6D;QAC7D,oGAAoG;QACpG,MAAM,OAAO,QAAQ,aAAa,IAAI,EAAE;QACxC,MAAM,SAAS;YACb,UAAU,QAAQ,QAAQ,IAAI,EAAE;YAChC,WAAW,QAAQ,QAAQ,IAAI,EAAE;QACnC;QACA,MAAM,iBAAiB,QAAQ,cAAc,IAAI;QAEjD,8BAA8B;QAC9B,OAAO;YACL;YACA;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode1/page.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { fetchData } from '../../services/backendService';\n\n// Interfaces for type safety\ninterface KPI {\n  rowKey: string;\n  value: string;\n  status?: string;\n}\n\ninterface PlotDataPoint {\n  x: string;\n  y: number;\n  exceedsThreshold: boolean;\n}\n\ninterface TableDataPoint {\n  id: string;\n  timePeriod: string;\n  meanPrediction: number;\n  error: number;\n  percentageError: number;\n  status: string;\n}\n\ninterface ErrorDataState {\n  plotData: PlotDataPoint[];\n  tableData: TableDataPoint[];\n}\n\nexport default function Mode1Page(): JSX.Element {\n  const [kpis, setKpis] = useState<KPI[]>([]);\n  const [errors, setErrors] = useState<ErrorDataState>({ plotData: [], tableData: [] });\n  const [xaiExplanation, setXaiExplanation] = useState<string>('');\n  const [backendError, setBackendError] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  // Initialize data\n  const initData = async (): Promise<void> => {\n    setLoading(true);\n    setBackendError(null);\n    try {\n      // Fetch all data in one call using BackendService.tsx\n      const { kpis: fetchedKpis, errors: fetchedErrors, xaiExplanation: fetchedXai } = await fetchData();\n\n      // Set the fetched data into state variables\n      setKpis(fetchedKpis);\n      setErrors(fetchedErrors);\n      setXaiExplanation(fetchedXai || 'No explanation available');\n\n      // Debugging log (optional)\n      console.log('RAW BACKEND RESPONSES:', {\n        kpiData: JSON.parse(JSON.stringify(fetchedKpis)),\n        errorData: JSON.parse(JSON.stringify(fetchedErrors)),\n        xaiData: JSON.parse(JSON.stringify(fetchedXai)),\n      });\n    } catch (error) {\n      console.error('Error fetching data - full error:', error);\n      if (error instanceof Error) {\n        setBackendError(`Failed to load data: ${error.message}`);\n      } else {\n        setBackendError('Failed to load data: Unknown error');\n      }\n\n      // Generate fallback data\n      const sampleErrors = Array.from({ length: 10 }, (_, i) => ({\n        id: `ERR-SAMPLE-${i + 1}`,\n        timePeriod: `2023-01-${String(i + 1).padStart(2, '0')}`,\n        meanPrediction: Math.random() * 100,\n        error: Math.random() * 20,\n        percentageError: Math.random() * 30,\n        exceedsThreshold: Math.random() > 0.7,\n      }));\n\n      setKpis([\n        { rowKey: 'alertTime', value: new Date().toISOString(), status: 'Normal' },\n        { rowKey: 'runtimeCount', value: '5', status: 'Normal' },\n        { rowKey: 'alertKeeper', value: 'Sample User', status: 'Normal' },\n        { rowKey: 'kstest', value: '0.12', status: 'Normal' },\n        { rowKey: 'wasserstein', value: '0.08', status: 'Normal' },\n        { rowKey: 'mseRef', value: '0.25', status: 'Normal' },\n        { rowKey: 'mseCurrent', value: '0.32', status: 'Warning' },\n        { rowKey: 'status', value: 'Warning', status: 'Warning' },\n      ]);\n\n      setErrors({\n        plotData: sampleErrors.map((err) => ({\n          x: err.timePeriod,\n          y: err.error,\n          exceedsThreshold: err.exceedsThreshold,\n        })),\n        tableData: sampleErrors.map((err) => ({\n          id: err.id,\n          timePeriod: err.timePeriod,\n          meanPrediction: err.meanPrediction,\n          error: err.error,\n          percentageError: err.percentageError,\n          status: err.exceedsThreshold ? 'Alert' : 'Normal',\n        })),\n      });\n\n      setXaiExplanation(\n        'Sample explanation: The model shows moderate drift with 5.2% precision change and -2.1% recall change.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    initData();\n  }, []);\n\n  return (\n    <div className=\"bg-gray-900 min-h-screen text-white\">\n      <Head>\n        <title>Mode 1 | Business Dashboard</title>\n      </Head>\n\n      <main className=\"container mx-auto p-6\">\n        {/* Backend Error Section */}\n        {backendError && (\n          <div className=\"bg-red-900/50 border border-red-700 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center\">\n              <svg className=\"h-5 w-5 text-red-300 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                />\n              </svg>\n              <h3 className=\"text-lg font-medium text-red-300\">Backend Error</h3>\n            </div>\n            <p className=\"mt-2 text-red-200\">{backendError}</p>\n            <p className=\"mt-2 text-red-200 text-sm\">Displaying fallback data. Some features may be limited.</p>\n            <button\n              onClick={() => initData()}\n              className=\"mt-3 px-4 py-2 bg-red-800/50 hover:bg-red-800 text-white rounded-md text-sm font-medium\"\n            >\n              Retry Connection\n            </button>\n          </div>\n        )}\n\n        {/* Header Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">OCTAVE - RG Dashboard</h2>\n\n          {/* Key Metrics */}\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n            {kpis.map((kpi) => (\n              <div key={kpi.rowKey} className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n                <h3 className=\"text-lg font-medium text-blue-200 mb-2\">{kpi.rowKey}</h3>\n                <p\n                  className={`text-xl ${\n                    kpi.status === 'Warning' ? 'text-yellow-400' : kpi.status === 'Error' ? 'text-red-400' : 'text-green-400'\n                  }`}\n                >\n                  {loading ? 'Loading...' : kpi.value || 'N/A'}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* MAPE/MSE Plot Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">MAPE/MSE Plot</h2>\n          <div className=\"h-64 bg-gray-700 rounded p-4\">\n            {loading ? (\n              <div className=\"flex items-center justify-center h-full\">\n                <div className=\"text-white\">Loading plot data...</div>\n              </div>\n            ) : (\n              <canvas id=\"mapeMseChart\" className=\"w-full h-full\" />\n            )}\n          </div>\n        </div>\n\n        {/* Error Comparison Table Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Error Comparison</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-700\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">ID</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">Time Period</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">Error</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-700\">\n                {errors.tableData.slice(0, 5).map((error) => (\n                  <tr key={error.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{error.id}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{error.timePeriod}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-400\">{error.error.toFixed(2)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Threshold Exceedances Table Section */}\n        <div className=\"bg-red-900/20 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-red-800/50\">\n          <h2 className=\"text-2xl font-semibold text-red-300 mb-4\">Threshold Exceedances</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-red-800/50\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase tracking-wider\">ID</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase tracking-wider\">Error %</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-red-200 uppercase tracking-wider\">Exceeds</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-red-800/50\">\n                {errors.tableData\n                  .filter((e) => e.status === 'Alert')\n                  .slice(0, 5)\n                  .map((error) => (\n                    <tr key={error.id}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{error.id}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{error.percentageError.toFixed(2)}%</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-300\">{error.status === 'Alert' ? 'Yes' : 'No'}</td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* XAI Explanation Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">XAI Result</h2>\n          <div className=\"space-y-3 text-white\">\n            {loading ? (\n              <p>Loading XAI explanation...</p>\n            ) : xaiExplanation ? (\n              <p>{xaiExplanation}</p>\n            ) : (\n              <p className=\"text-red-400\">No explanation available</p>\n            )}\n          </div>\n        </div>\n\n        {/* Debug Data Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Debug Data</h2>\n          <div className=\"space-y-3 text-white text-xs overflow-auto max-h-60\">\n            <pre>{JSON.stringify({ kpis, errors, xaiExplanation }, null, 2)}</pre>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 676, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/node_modules/next/src/client/components/noop-head.tsx"],"sourcesContent":["export default function NoopHead() {\n  return null\n}\n"],"names":["NoopHead"],"mappings":";;;;+BAAA,WAAA;;;eAAwBA;;;AAAT,SAASA;IACtB,OAAO;AACT","ignoreList":[0],"debugId":null}}]
}