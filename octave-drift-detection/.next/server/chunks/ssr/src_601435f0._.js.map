{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/Downloads/db__-main/db__-main/octave-drift-detection/src/components/D3ConfusionMatrix.tsx"],"sourcesContent":["'use client'\r\nimport * as d3 from 'd3'\r\nimport { useEffect, useRef } from 'react'\r\n\r\ntype Props = {\r\n  data: number[][]\r\n  labels: string[]\r\n  title: string\r\n  width?: number\r\n  height?: number\r\n  cellSize?: number\r\n  minCellSize?: number\r\n  maxCellSize?: number\r\n}\r\n\r\nexport default function D3ConfusionMatrix({\r\n  data,\r\n  labels,\r\n  title,\r\n  width = 500,\r\n  height = 500,\r\n  cellSize = 40,\r\n  minCellSize = 20,\r\n  maxCellSize = 60\r\n}: Props) {\r\n  const ref = useRef<HTMLDivElement>(null)\r\n\r\n  useEffect(() => {\r\n    if (!ref.current || !data?.length || !labels?.length) return\r\n    \r\n    // Validate dimensions\r\n    const safeWidth = Math.max(100, width || 500)\r\n    const safeHeight = Math.max(100, height || 500)\r\n    const containerWidth = ref.current?.clientWidth || safeWidth\r\n    const containerHeight = ref.current?.clientHeight || safeHeight\r\n    const calculatedCellSize = Math.min(\r\n      Math.max(minCellSize || 20, Math.min(containerWidth, containerHeight) / Math.max(data.length, data[0]?.length || 1)),\r\n      maxCellSize || 60\r\n    )\r\n    const safeCellSize = Math.max(10, cellSize || calculatedCellSize)\r\n\r\n    // Clear previous render\r\n    ref.current.innerHTML = ''\r\n\r\n    const margin = { top: 30, right: 30, bottom: 30, left: 30 }\r\n    const innerWidth = safeWidth - margin.left - margin.right\r\n    const innerHeight = safeHeight - margin.top - margin.bottom\r\n\r\n    const svg = d3.select(ref.current)\r\n      .append('svg')\r\n      .attr('width', safeWidth)\r\n      .attr('height', safeHeight)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n    // Color scale\r\n    const colorScale = d3.scaleSequential(d3.interpolateBlues)\r\n      .domain([0, d3.max(data.flat()) || 1])\r\n\r\n    // Create matrix\r\n    svg.selectAll('g')\r\n      .data(data)\r\n      .enter()\r\n      .append('g')\r\n      .selectAll('rect')\r\n      .data((d, i) => d.map((value, j) => ({value, x: j, y: i})))\r\n      .enter()\r\n      .append('rect')\r\n      .attr('x', d => d.x * safeCellSize)\r\n      .attr('y', d => d.y * safeCellSize)\r\n      .attr('width', safeCellSize - 1)\r\n      .attr('height', safeCellSize - 1)\r\n      .style('fill', d => colorScale(d.value))\r\n      .style('stroke', '#fff')\r\n\r\n    // Add labels\r\n    svg.selectAll('.row-label')\r\n      .data(labels)\r\n      .enter()\r\n      .append('text')\r\n      .attr('x', -5)\r\n      .attr('y', (d, i) => i * safeCellSize + safeCellSize / 2)\r\n      .style('text-anchor', 'end')\r\n      .style('fill', '#e5e7eb')\r\n      .text(d => d)\r\n\r\n    svg.selectAll('.col-label')\r\n      .data(labels)\r\n      .enter()\r\n      .append('text')\r\n      .attr('y', -5)\r\n      .attr('x', (d, i) => i * safeCellSize + safeCellSize / 2)\r\n      .style('text-anchor', 'middle')\r\n      .style('fill', '#e5e7eb')\r\n      .text(d => d)\r\n\r\n  }, [data, labels, width, height, cellSize, minCellSize, maxCellSize])\r\n\r\n  return (\r\n    <div className=\"relative h-full w-full\">\r\n      <h3 className=\"text-lg font-medium text-blue-200 mb-2\">{title}</h3>\r\n      <div ref={ref} />\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/Downloads/db__-main/db__-main/octave-drift-detection/src/services/dummyDbService.ts"],"sourcesContent":["import { KPI, ErrorData } from '../types/dbTypes';\n\nexport async function getBusinessUnits() {\n  const response = await fetch('/api/businessUnits');\n  return await response.json();\n}\n\nexport async function getUseCases(businessUnit: string) {\n  const response = await fetch(`/api/useCases?businessUnit=${businessUnit}`);\n  return await response.json();\n}\n\nexport async function getKPIs(mode: string): Promise<KPI[]> {\n  const response = await fetch(`/api/metrics?mode=${mode}`);\n  const data = await response.json();\n  return data.map((item: any) => ({\n    rowKey: item.rowKey,\n    value: item.value,\n    ...(item.status && { status: item.status })\n  }));\n}\n\nexport async function getErrorData(): Promise<ErrorData[]> {\n  const response = await fetch('/api/errors');\n  const data = await response.json();\n  return data.map((item: any) => ({\n    timePeriod: item.timePeriod,\n    meanPrediction: item.meanPrediction,\n    error: item.error,\n    exceedsThreshold: item.exceedsThreshold\n  }));\n}\n"],"names":[],"mappings":";;;;;;AAEO,eAAe;IACpB,MAAM,WAAW,MAAM,MAAM;IAC7B,OAAO,MAAM,SAAS,IAAI;AAC5B;AAEO,eAAe,YAAY,YAAoB;IACpD,MAAM,WAAW,MAAM,MAAM,CAAC,2BAA2B,EAAE,cAAc;IACzE,OAAO,MAAM,SAAS,IAAI;AAC5B;AAEO,eAAe,QAAQ,IAAY;IACxC,MAAM,WAAW,MAAM,MAAM,CAAC,kBAAkB,EAAE,MAAM;IACxD,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,GAAG,CAAC,CAAC,OAAc,CAAC;YAC9B,QAAQ,KAAK,MAAM;YACnB,OAAO,KAAK,KAAK;YACjB,GAAI,KAAK,MAAM,IAAI;gBAAE,QAAQ,KAAK,MAAM;YAAC,CAAC;QAC5C,CAAC;AACH;AAEO,eAAe;IACpB,MAAM,WAAW,MAAM,MAAM;IAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,GAAG,CAAC,CAAC,OAAc,CAAC;YAC9B,YAAY,KAAK,UAAU;YAC3B,gBAAgB,KAAK,cAAc;YACnC,OAAO,KAAK,KAAK;YACjB,kBAAkB,KAAK,gBAAgB;QACzC,CAAC;AACH","debugId":null}}]
}