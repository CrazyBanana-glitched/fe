{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/components/D3ConfusionMatrix.tsx"],"sourcesContent":["'use client'\r\nimport * as d3 from 'd3'\r\nimport { useEffect, useRef } from 'react'\r\n\r\ntype Props = {\r\n  data: number[][]\r\n  labels: string[]\r\n  title: string\r\n  width?: number\r\n  height?: number\r\n  cellSize?: number\r\n  minCellSize?: number\r\n  maxCellSize?: number\r\n}\r\n\r\nexport default function D3ConfusionMatrix({\r\n  data,\r\n  labels,\r\n  title,\r\n  width = 500,\r\n  height = 500,\r\n  cellSize = 40,\r\n  minCellSize = 20,\r\n  maxCellSize = 60\r\n}: Props) {\r\n  const ref = useRef<HTMLDivElement>(null)\r\n\r\n  useEffect(() => {\r\n    if (!ref.current || !data?.length || !labels?.length) return\r\n    \r\n    // Validate dimensions\r\n    const safeWidth = Math.max(100, width || 500)\r\n    const safeHeight = Math.max(100, height || 500)\r\n    const containerWidth = ref.current?.clientWidth || safeWidth\r\n    const containerHeight = ref.current?.clientHeight || safeHeight\r\n    const calculatedCellSize = Math.min(\r\n      Math.max(minCellSize || 20, Math.min(containerWidth, containerHeight) / Math.max(data.length, data[0]?.length || 1)),\r\n      maxCellSize || 60\r\n    )\r\n    const safeCellSize = Math.max(10, cellSize || calculatedCellSize)\r\n\r\n    // Clear previous render\r\n    ref.current.innerHTML = ''\r\n\r\n    const margin = { top: 30, right: 30, bottom: 30, left: 30 }\r\n    const innerWidth = safeWidth - margin.left - margin.right\r\n    const innerHeight = safeHeight - margin.top - margin.bottom\r\n\r\n    const svg = d3.select(ref.current)\r\n      .append('svg')\r\n      .attr('width', safeWidth)\r\n      .attr('height', safeHeight)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n    // Color scale\r\n    const colorScale = d3.scaleSequential(d3.interpolateBlues)\r\n      .domain([0, d3.max(data.flat()) || 1])\r\n\r\n    // Create matrix\r\n    svg.selectAll('g')\r\n      .data(data)\r\n      .enter()\r\n      .append('g')\r\n      .selectAll('rect')\r\n      .data((d, i) => d.map((value, j) => ({value, x: j, y: i})))\r\n      .enter()\r\n      .append('rect')\r\n      .attr('x', d => d.x * safeCellSize)\r\n      .attr('y', d => d.y * safeCellSize)\r\n      .attr('width', safeCellSize - 1)\r\n      .attr('height', safeCellSize - 1)\r\n      .style('fill', d => colorScale(d.value))\r\n      .style('stroke', '#fff')\r\n\r\n    // Add labels\r\n    svg.selectAll('.row-label')\r\n      .data(labels)\r\n      .enter()\r\n      .append('text')\r\n      .attr('x', -5)\r\n      .attr('y', (d, i) => i * safeCellSize + safeCellSize / 2)\r\n      .style('text-anchor', 'end')\r\n      .style('fill', '#e5e7eb')\r\n      .text(d => d)\r\n\r\n    svg.selectAll('.col-label')\r\n      .data(labels)\r\n      .enter()\r\n      .append('text')\r\n      .attr('y', -5)\r\n      .attr('x', (d, i) => i * safeCellSize + safeCellSize / 2)\r\n      .style('text-anchor', 'middle')\r\n      .style('fill', '#e5e7eb')\r\n      .text(d => d)\r\n\r\n  }, [data, labels, width, height, cellSize, minCellSize, maxCellSize])\r\n\r\n  return (\r\n    <div className=\"relative h-full w-full\">\r\n      <h3 className=\"text-lg font-medium text-blue-200 mb-2\">{title}</h3>\r\n      <div ref={ref} />\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode4/page.tsx"],"sourcesContent":["'use client'\nimport { useEffect, useState, useRef } from 'react'\nimport { Chart, CategoryScale, LineController, PointElement, LineElement, LinearScale, Tooltip, Legend } from 'chart.js'\nimport type { Chart as ChartType } from 'chart.js'\nimport Head from 'next/head'\nimport { getKPIs, getErrorData } from '../../services/dummyDbService'\nimport D3ConfusionMatrix from '../../components/D3ConfusionMatrix'\n\n// Register necessary components from Chart.js\nChart.register(CategoryScale, LineController, PointElement, LineElement, LinearScale, Tooltip, Legend)\n\ninterface KPI {\n  rowKey: string\n  value: string\n  status?: string\n}\ninterface ErrorData {\n  predicted: string\n  actual: string\n  timePeriod: string\n  meanPrediction: number\n  error: number\n  exceedsThreshold: boolean\n  yTrue?: number\n  yPred?: number\n  percentageError?: number\n  id?: any\n}\ninterface ErrorDataResponse {\n  tableData: ErrorData[]\n  plotData?: Array<{x: string, y: number}>\n  summary: {\n    totalErrors: number\n    errorRate: number\n    misclassificationRate: number\n    status: string\n  }\n}\ninterface ConfusionMatrixData {\n  reference: {\n    matrix: number[][]\n    labels: string[]\n    precision: number\n    recall: number\n    f1: number\n    accuracy: number\n  }\n  current: {\n    matrix: number[][]\n    labels: string[]\n    precision: number\n    recall: number\n    f1: number\n    accuracy: number\n  }\n}\n\nconst getValidNumber = (kpis: KPI[], key: string, fallback = 0): number => {\n  const value = kpis.find(k => k.rowKey === key)?.value;\n  const num = Number(value);\n  return isNaN(num) ? fallback : Math.max(0, num);\n};\n\nexport default function Mode4Page() {\n  const chartRef = useRef<ChartType | null>(null);\n  const [businessUnit, setBusinessUnit] = useState('CCS')\n  const [useCase, setUseCase] = useState('CC-Di')\n  const [kpis, setKpis] = useState<KPI[]>([])\n  const [errors, setErrors] = useState<ErrorDataResponse>({\n    tableData: [],\n    summary: {\n      totalErrors: 0,\n      errorRate: 0,\n      misclassificationRate: 0,\n      status: ''\n    }\n  })\n  const [confusionMatrix, setConfusionMatrix] = useState<ConfusionMatrixData>({\n    reference: {\n      matrix: [[0, 0], [0, 0]],\n      labels: ['Class A', 'Class B'],\n      precision: 0,\n      recall: 0,\n      f1: 0,\n      accuracy: 0\n    },\n    current: {\n      matrix: [[0, 0], [0, 0]],\n      labels: ['Class A', 'Class B'],\n      precision: 0,\n      recall: 0,\n      f1: 0,\n      accuracy: 0\n    }\n  })\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const initData = async () => {\n      try {\n        const savedBusinessUnit = localStorage.getItem('businessUnit')\n        const savedUseCase = localStorage.getItem('useCase')\n        if (savedBusinessUnit) setBusinessUnit(savedBusinessUnit)\n        if (savedUseCase) setUseCase(savedUseCase)\n        const apiBase = process.env.NEXT_PUBLIC_API_URL || 'http://127.0.0.1:5000';\n        console.log('Attempting to fetch from API base:', apiBase);\n        const [metricsRes, errorsRes] = await Promise.all([\n          fetch(`${apiBase}/api/metrics?mode=4`).catch(err => {\n            console.error('Metrics fetch failed:', err);\n            throw new Error(`Failed to reach metrics API: ${err.message}`);\n          }),\n          fetch(`${apiBase}/api/errors`).catch(err => {\n            console.error('Errors fetch failed:', err);\n            throw new Error(`Failed to reach errors API: ${err.message}`);\n          })\n        ]);\n        if (!metricsRes.ok) {\n          const errorText = await metricsRes.text();\n          console.error('Metrics API error response:', errorText);\n          throw new Error(`Metrics API error: ${metricsRes.status} - ${errorText}`);\n        }\n        if (!errorsRes.ok) {\n          const errorText = await errorsRes.text();\n          console.error('Errors API error response:', errorText);\n          throw new Error(`Errors API error: ${errorsRes.status} - ${errorText}`);\n        }\n        const metricsData = await metricsRes.json();\n        const errorsData = await errorsRes.json();\n        console.log('Successfully fetched data:', {metricsData, errorsData});\n\n        // Normalize KPIs data format\n        const normalizedKpis = (metricsData.kpis || Object.entries(metricsData).map(([rowKey, value]) => ({\n          rowKey,\n          value: String(value),\n          status: metricsData.status\n        }))).filter((k: any) => k.rowKey && k.value);\n\n        // Normalize errors data format\n        const normalizedErrors: ErrorDataResponse = {\n          tableData: (errorsData.tableData || []).filter((e: ErrorData) => e.predicted && e.actual),\n          summary: errorsData.summary || {\n            totalErrors: 0,\n            errorRate: 0,\n            misclassificationRate: 0,\n            status: ''\n          }\n        };\n\n        setKpis(normalizedKpis);\n        setErrors(normalizedErrors);\n\n        const getKpiNumberValue = (key: string): number => {\n          const kpi = normalizedKpis.find((k: any) => k.rowKey === key);\n          if (!kpi) return 0;\n          const num = Number(kpi.value);\n          return isNaN(num) ? 0 : num;\n        };\n\n        setConfusionMatrix({\n          reference: {\n            matrix: [\n              [getKpiNumberValue('refTrueA'), getKpiNumberValue('refFalseB')],\n              [getKpiNumberValue('refFalseA'), getKpiNumberValue('refTrueB')]\n            ],\n            labels: ['Class A', 'Class B'],\n            precision: getKpiNumberValue('refPrecision'),\n            recall: getKpiNumberValue('refRecall'),\n            f1: getKpiNumberValue('refF1'),\n            accuracy: getKpiNumberValue('refAccuracy')\n          },\n          current: {\n            matrix: [\n              [getKpiNumberValue('currTrueA'), getKpiNumberValue('currFalseB')],\n              [getKpiNumberValue('currFalseA'), getKpiNumberValue('currTrueB')]\n            ],\n            labels: ['Class A', 'Class B'],\n            precision: getKpiNumberValue('currPrecision'),\n            recall: getKpiNumberValue('currRecall'),\n            f1: getKpiNumberValue('currF1'),\n            accuracy: getKpiNumberValue('currAccuracy')\n          }\n        });\n      } catch (error) {\n        console.error('Error loading data:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n    initData()\n  }, [])\n\n  const handleBusinessUnitChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = e.target.value\n    setBusinessUnit(value)\n    setUseCase('')\n    localStorage.setItem('businessUnit', value)\n  }\n\n  const handleUseCaseChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = e.target.value\n    setUseCase(value)\n    localStorage.setItem('useCase', value)\n  }\n\n  const getUseCaseOptions = () => {\n    if (businessUnit === 'CCS') {\n      return ['CC-Di', 'CC-MT']\n    } else if (businessUnit === 'JMSL') {\n      return ['JM-Ch']\n    }\n    return []\n  }\n\n  return (\n    <div className=\"bg-gray-900 min-h-screen flex flex-col\">\n      <Head>\n        <title>Mode 4 | CL Dashboard</title>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\" />\n      </Head>\n      {/* Main Content */}\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">OCTAVE - CL Dashboard</h2>\n          {/* Business Unit and Use Case Selector */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Business Unit</h3>\n              <select\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n                value={businessUnit}\n                onChange={handleBusinessUnitChange}\n              >\n                <option value=\"\">Select Business Unit</option>\n                <option value=\"CCS\">CCS</option>\n                <option value=\"JMSL\">JMSL</option>\n              </select>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Use Case</h3>\n              <select\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n                value={useCase}\n                onChange={handleUseCaseChange}\n                disabled={!businessUnit}\n              >\n                <option value=\"\">{businessUnit ? 'Select Use Case' : 'Select Business Unit first'}</option>\n                {getUseCaseOptions().map(option => (\n                  <option key={option} value={option}>{option}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Short Code</h3>\n              <input\n                type=\"text\"\n                value={useCase || '-'}\n                readOnly\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n              />\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Runtime</h3>\n              <input\n                type=\"text\"\n                value=\"2h 45m\"\n                readOnly\n                className=\"w-full bg-gray-700 border-blue-600 rounded p-2 text-white\"\n              />\n            </div>\n          </div>\n          {/* Additional Metrics */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Current Alert Time</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find(k => k.rowKey === 'alertTime')?.value || 'N/A'}\n              </p>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">No. of Runtime</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find(k => k.rowKey === 'runtimeCount')?.value || '0'}\n              </p>\n            </div>\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Alert Keeper</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find(k => k.rowKey === 'alertKeeper')?.value || 'N/A'}\n              </p>\n            </div>\n          </div>\n        </div>\n        {/* Drift Warning Plot Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Drift Warning Plot</h2>\n          <div className=\"h-64 bg-gray-700 rounded p-4\">\n            {loading ? (\n              <div className=\"flex items-center justify-center h-full\">\n                <div className=\"text-white\">Loading drift warnings...</div>\n              </div>\n            ) : (\n              <div className=\"relative h-full\">\n                <canvas \n                  id=\"driftWarningChart\"\n                  className=\"w-full h-full\"\n                  ref={(el) => {\n                    if (el && !loading) {\n                      const ctx = el.getContext('2d');\n                      if (ctx) {\n                        if (chartRef.current) {\n                          chartRef.current.destroy();\n                        }\n                        chartRef.current = new Chart(ctx, {\n                          type: 'line',\n                          data: {\n                            labels: errors.plotData?.map((point, i) => point.x || `Time ${i+1}`) ?? [],\n                            datasets: [\n                              {\n                                label: 'Drift Level', \n                                data: errors.plotData?.length \n                                  ? errors.plotData.map(point => Math.floor(point.y) % 3)\n                                  : kpis\n                                    .filter(k => k.rowKey.includes('currentDrift'))\n                                    .map(k => Math.floor(parseFloat(k.value)) % 3),\n                                borderColor: 'rgb(239, 68, 68)',\n                                backgroundColor: 'rgba(239, 68, 68, 0.1)',\n                                tension: 0.1,\n                                fill: true\n                              }\n                            ]\n                          },\n                          options: {\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            plugins: {\n                              legend: {\n                                labels: {\n                                  color: '#e5e7eb'\n                                }\n                              },\n                              tooltip: {\n                                mode: 'index',\n                                intersect: false\n                              }\n                            },\n                            scales: {\n                              x: {\n                                type: 'category', // Using built-in category scale\n                                title: {\n                                  display: true,\n                                  text: 'Data Points',\n                                  color: '#93c5fd',\n                                  font: {\n                                    weight: 'bold'\n                                  }\n                                },\n                                grid: {\n                                  color: 'rgba(255, 255, 255, 0.1)'\n                                },\n                                ticks: {\n                                  color: '#e5e7eb',\n                                  font: {\n                                    size: 12\n                                  }\n                                }\n                              },\n                              y: {\n                                title: {\n                                  display: true,\n                                  text: 'Drift Value',\n                                  color: '#93c5fd',\n                                  font: {\n                                    weight: 'bold'\n                                  }\n                                },\n                                beginAtZero: true,\n                                grid: {\n                                  color: 'rgba(255, 255, 255, 0.1)'\n                                },\n                                ticks: {\n                                  color: '#e5e7eb',\n                                  font: {\n                                    size: 12\n                                  },\n                                  callback: (value) => typeof value === 'number' ? value.toFixed(2) : value\n                                }\n                              }\n                            },\n                            animation: {\n                              duration: 1000,\n                              easing: 'easeInOutQuad'\n                            },\n                            elements: {\n                              point: {\n                                radius: 4,\n                                hoverRadius: 6\n                              }\n                            }\n                          }\n                        });\n                      }\n                    }\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n        {/* Confusion Matrices Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          {/* Current Confusion Matrix */}\n          <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 border border-gray-700\">\n            <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Current Confusion Matrix</h2>\n            <div className=\"h-96 bg-gray-700 rounded p-4\">\n              {loading ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <div className=\"text-white\">Loading current matrix...</div>\n                </div>\n              ) : (\n                <D3ConfusionMatrix\n                  data={confusionMatrix.current.matrix}\n                  labels={confusionMatrix.current.labels}\n                  title=\"Current Matrix\"\n                  width={500}\n                  height={500}\n                />\n              )}\n            </div>\n            <div className=\"mt-4 grid grid-cols-3 gap-2\">\n              <div className=\"bg-blue-900/20 p-2 rounded\">\n                <p className=\"text-xs text-blue-200\">Precision</p>\n                <p className=\"text-lg font-semibold text-white\">\n                  {loading ? '-' : confusionMatrix.current?.precision?.toFixed(2) || 'N/A'}\n                </p>\n              </div>\n              <div className=\"bg-blue-900/20 p-2 rounded\">\n                <p className=\"text-xs text-blue-200\">Recall</p>\n                <p className=\"text-lg font-semibold text-white\">\n                  {loading ? '-' : confusionMatrix.current?.recall?.toFixed(2) || 'N/A'}\n                </p>\n              </div>\n              <div className=\"bg-blue-900/20 p-2 rounded\">\n                <p className=\"text-xs text-blue-200\">F1</p>\n                <p className=\"text-lg font-semibold text-white\">\n                  {loading ? '-' : confusionMatrix.current?.f1?.toFixed(2) || 'N/A'}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* Key Performance Indicators */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Hyperparameters</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"bg-blue-900/30 p-4 rounded-lg border border-blue-800/50\">\n              <h3 className=\"text-lg font-medium text-blue-200 mb-2\">Hyperparameters</h3>\n              <p className=\"text-xl\">\n                {loading ? 'Loading...' : kpis.find(k => k.rowKey === 'hyperparameters')?.value || 'N/A'}\n              </p>\n            </div>\n            <div className=\"bg-yellow-900/20 p-4 rounded-lg border border-yellow-800/50\">\n              <h3 className=\"text-lg font-medium text-yellow-200 mb-2\">Status</h3>\n              <p className={`text-xl ${\n                loading ? '' : \n                kpis.find(k => k.rowKey === 'status')?.value === 'Warning' ? 'text-yellow-300' : \n                kpis.find(k => k.rowKey === 'status')?.value === 'Error' ? 'text-red-400' : \n                'text-green-400'\n              }`}>\n                {loading ? 'Loading...' : kpis.find(k => k.rowKey === 'status')?.value || 'N/A'}\n              </p>\n            </div>\n          </div>\n        </div>\n        {/* XAI Result Section */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">XAI Result</h2>\n          <div className=\"space-y-3 text-white\">\n            <p>{kpis.find(k => k.rowKey === 'xaiAnalysis')?.value || 'Performance analysis loading...'}</p>\n            <p className=\"font-medium text-yellow-300\">\n              {kpis.find(k => k.rowKey === 'recommendation')?.value || 'Recommendation loading...'}\n            </p>\n          </div>\n        </div>\n        {/* Error and Misclassification Percentages */}\n        <div className=\"bg-red-900/20 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-red-800/50\">\n          <h2 className=\"text-2xl font-semibold text-red-300 mb-4\">Error and Misclassification Percentages</h2>\n          <div className=\"space-y-3 text-white\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <h3 className=\"text-lg font-medium text-red-200\">Error Rate</h3>\n                <p className=\"text-2xl font-bold\">\n                  {errors.summary?.errorRate ? (errors.summary.errorRate * 100).toFixed(1) + '%' : 'N/A'}\n                </p>\n                <div className=\"w-full bg-gray-700 rounded-full h-4 mt-2\">\n                  <div \n                    className=\"bg-red-500 h-4 rounded-full\" \n                    style={{width: `${errors.summary?.errorRate ? errors.summary.errorRate * 100 : 0}%`}}\n                  ></div>\n                </div>\n              </div>\n              <div>\n                <h3 className=\"text-lg font-medium text-red-200\">Misclassification Rate</h3>\n                <p className=\"text-2xl font-bold\">\n                  {errors.summary?.misclassificationRate ? (errors.summary.misclassificationRate * 100).toFixed(1) + '%' : 'N/A'}\n                </p>\n              </div>\n            </div>\n            <h3 className=\"text-lg font-medium text-red-200 mt-4\">Worst Performing Cases</h3>\n            <ul className=\"list-disc pl-5 space-y-1\">\n              {errors.tableData\n                .sort((a: ErrorData, b: ErrorData) => (b.percentageError || 0) - (a.percentageError || 0))\n                .slice(0, 3)\n                .map((error: ErrorData, i: number) => (\n                  <li key={i}>\n                    {error.timePeriod}: {error.predicted} â†’ {error.actual} ({error.percentageError}% error)\n                  </li>\n                ))}\n            </ul>\n            <p className=\"font-medium text-yellow-300 mt-2\">\n              {errors.summary?.status ? `Status: ${errors.summary.status}` : 'Status loading...'}\n            </p>\n          </div>\n        </div>\n        {/* Misclassified Table */}\n        <div className=\"bg-gray-800 rounded-xl shadow-md overflow-hidden p-6 mb-6 border border-gray-700\">\n          <h2 className=\"text-2xl font-semibold text-blue-300 mb-4\">Misclassified Table</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-700\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">ID</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">Predicted</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-200 uppercase tracking-wider\">Actual</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-700\">\n                {loading ? (\n                  <tr>\n                    <td colSpan={3} className=\"px-6 py-4 text-center text-sm text-white\">\n                      Loading misclassified data...\n                    </td>\n                  </tr>\n                ) : errors.tableData.length > 0 ? (\n                  errors.tableData.map((error: ErrorData, index: number) => (\n                    <tr key={index} className=\"bg-red-900/10\">\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{error.id}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-300\">{error.predicted}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-white\">{error.actual}</td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan={3} className=\"px-6 py-4 text-center text-sm text-white\">\n                      No misclassified data available\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </main>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}