{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode1/page.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { fetchData } from '../../services/BackendService';\n\n// Interfaces for type safety\ninterface KPI {\n  rowKey: string;\n  value: string;\n  status?: string;\n}\n\ninterface PlotDataPoint {\n  x: string;\n  y: number;\n  exceedsThreshold: boolean;\n}\n\ninterface TableDataPoint {\n  id: string;\n  timePeriod: string;\n  meanPrediction: number;\n  error: number;\n  percentageError: number;\n  status: string;\n}\n\ninterface ErrorDataState {\n  plotData: PlotDataPoint[];\n  tableData: TableDataPoint[];\n}\n\nexport default function Mode1Page(): JSX.Element {\n  const [kpis, setKpis] = useState<KPI[]>([]);\n  const [errors, setErrors] = useState<ErrorDataState>({ plotData: [], tableData: [] });\n  const [xaiExplanation, setXaiExplanation] = useState<string>('No explanation available');\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Fetch Data from Backend\n  const initData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Fetch and process data using BackendService.tsx\n      const { kpis: fetchedKpis, errors: fetchedErrors, xaiExplanation: fetchedXai } = await fetchData();\n      setKpis(fetchedKpis);\n      setErrors(fetchedErrors);\n      setXaiExplanation(fetchedXai || 'No explanation available');\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please check the backend.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    initData();\n  }, []);\n\n  if (loading) return <div className=\"text-white\">Loading...</div>;\n  if (error) return <div className=\"text-red-500\">{error}</div>;\n\n  return (\n    <div className=\"bg-gray-900 min-h-screen text-white\">\n      <Head>\n        <title>Drift Detection Dashboard</title>\n      </Head>\n\n      <main className=\"container mx-auto p-6\">\n        {/* Header Section */}\n        <h1 className=\"text-3xl font-bold mb-6\">Drift Detection Dashboard</h1>\n\n        {/* KPIs Section */}\n        <section className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4\">Key Performance Indicators (KPIs)</h2>\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr>\n                <th className=\"border p-2\">Row Key</th>\n                <th className=\"border p-2\">Value</th>\n                <th className=\"border p-2\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {kpis.map((kpi, index) => (\n                <tr key={index}>\n                  <td className=\"border p-2\">{kpi.rowKey}</td>\n                  <td className=\"border p-2\">{kpi.value}</td>\n                  <td className=\"border p-2\">{kpi.status}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </section>\n\n        {/* Errors Plot Section */}\n        <section className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4\">Error Plot</h2>\n          <div>\n            <canvas id=\"errorPlot\" />\n            {/* Placeholder for Chart.js integration */}\n            {/* You can use Chart.js or another charting library here */}\n          </div>\n        </section>\n\n        {/* Errors Table Section */}\n        <section className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4\">Error Details</h2>\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr>\n                <th className=\"border p-2\">ID</th>\n                <th className=\"border p-2\">Time Period</th>\n                <th className=\"border p-2\">Mean Prediction</th>\n                <th className=\"border p-2\">Error</th>\n                <th className=\"border p-2\">Percentage Error</th>\n                <th className=\"border p-2\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {errors.tableData.map((row, index) => (\n                <tr key={index}>\n                  <td className=\"border p-2\">{row.id}</td>\n                  <td className=\"border p-2\">{row.timePeriod}</td>\n                  <td className=\"border p-2\">{row.meanPrediction.toFixed(2)}</td>\n                  <td className=\"border p-2\">{row.error.toFixed(2)}</td>\n                  <td className=\"border p-2\">{row.percentageError.toFixed(2)}%</td>\n                  <td className=\"border p-2\">{row.status}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </section>\n\n        {/* XAI Explanation Section */}\n        <section className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4\">XAI Explanation</h2>\n          <pre className=\"bg-gray-800 p-4 rounded whitespace-pre-wrap\">{xaiExplanation}</pre>\n        </section>\n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;;;;;;AAFA;;;;;AAgCe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAC1C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB;QAAE,UAAU,EAAE;QAAE,WAAW,EAAE;IAAC;IACnF,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC7D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,0BAA0B;IAC1B,MAAM,WAAW;QACf,WAAW;QACX,SAAS;QACT,IAAI;YACF,kDAAkD;YAClD,MAAM,EAAE,MAAM,WAAW,EAAE,QAAQ,aAAa,EAAE,gBAAgB,UAAU,EAAE,GAAG,MAAM;YACvF,QAAQ;YACR,UAAU;YACV,kBAAkB,cAAc;QAClC,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,wBAAwB;YACtC,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,IAAI,SAAS,qBAAO,8OAAC;QAAI,WAAU;kBAAa;;;;;;IAChD,IAAI,OAAO,qBAAO,8OAAC;QAAI,WAAU;kBAAgB;;;;;;IAEjD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,oKAAA,CAAA,UAAI;0BACH,cAAA,8OAAC;8BAAM;;;;;;;;;;;0BAGT,8OAAC;gBAAK,WAAU;;kCAEd,8OAAC;wBAAG,WAAU;kCAA0B;;;;;;kCAGxC,8OAAC;wBAAQ,WAAU;;0CACjB,8OAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,8OAAC;gCAAM,WAAU;;kDACf,8OAAC;kDACC,cAAA,8OAAC;;8DACC,8OAAC;oDAAG,WAAU;8DAAa;;;;;;8DAC3B,8OAAC;oDAAG,WAAU;8DAAa;;;;;;8DAC3B,8OAAC;oDAAG,WAAU;8DAAa;;;;;;;;;;;;;;;;;kDAG/B,8OAAC;kDACE,KAAK,GAAG,CAAC,CAAC,KAAK,sBACd,8OAAC;;kEACC,8OAAC;wDAAG,WAAU;kEAAc,IAAI,MAAM;;;;;;kEACtC,8OAAC;wDAAG,WAAU;kEAAc,IAAI,KAAK;;;;;;kEACrC,8OAAC;wDAAG,WAAU;kEAAc,IAAI,MAAM;;;;;;;+CAH/B;;;;;;;;;;;;;;;;;;;;;;kCAWjB,8OAAC;wBAAQ,WAAU;;0CACjB,8OAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,8OAAC;0CACC,cAAA,8OAAC;oCAAO,IAAG;;;;;;;;;;;;;;;;;kCAOf,8OAAC;wBAAQ,WAAU;;0CACjB,8OAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,8OAAC;gCAAM,WAAU;;kDACf,8OAAC;kDACC,cAAA,8OAAC;;8DACC,8OAAC;oDAAG,WAAU;8DAAa;;;;;;8DAC3B,8OAAC;oDAAG,WAAU;8DAAa;;;;;;8DAC3B,8OAAC;oDAAG,WAAU;8DAAa;;;;;;8DAC3B,8OAAC;oDAAG,WAAU;8DAAa;;;;;;8DAC3B,8OAAC;oDAAG,WAAU;8DAAa;;;;;;8DAC3B,8OAAC;oDAAG,WAAU;8DAAa;;;;;;;;;;;;;;;;;kDAG/B,8OAAC;kDACE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,sBAC1B,8OAAC;;kEACC,8OAAC;wDAAG,WAAU;kEAAc,IAAI,EAAE;;;;;;kEAClC,8OAAC;wDAAG,WAAU;kEAAc,IAAI,UAAU;;;;;;kEAC1C,8OAAC;wDAAG,WAAU;kEAAc,IAAI,cAAc,CAAC,OAAO,CAAC;;;;;;kEACvD,8OAAC;wDAAG,WAAU;kEAAc,IAAI,KAAK,CAAC,OAAO,CAAC;;;;;;kEAC9C,8OAAC;wDAAG,WAAU;;4DAAc,IAAI,eAAe,CAAC,OAAO,CAAC;4DAAG;;;;;;;kEAC3D,8OAAC;wDAAG,WAAU;kEAAc,IAAI,MAAM;;;;;;;+CAN/B;;;;;;;;;;;;;;;;;;;;;;kCAcjB,8OAAC;wBAAQ,WAAU;;0CACjB,8OAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,8OAAC;gCAAI,WAAU;0CAA+C;;;;;;;;;;;;;;;;;;;;;;;;AAKxE","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/node_modules/next/src/client/components/noop-head.tsx"],"sourcesContent":["export default function NoopHead() {\n  return null\n}\n"],"names":["NoopHead"],"mappings":";;;;+BAAA,WAAA;;;eAAwBA;;;AAAT,SAASA;IACtB,OAAO;AACT","ignoreList":[0],"debugId":null}}]
}