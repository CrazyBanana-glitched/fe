{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/Downloads/db__-main/db__-main/octave-drift-detection/src/app/mode3/page.tsx"],"sourcesContent":["'use client'\nimport { useEffect, useState } from 'react'\nimport 'chartjs-chart-matrix'\nimport Head from 'next/head'\nimport D3ConfusionMatrix from '../../components/D3ConfusionMatrix'\n\ninterface KPI {\n  rowKey: string\n  value: string\n  status?: string\n}\n\ninterface ErrorData {\n  predicted: string\n  actual: string\n  timePeriod: string\n  meanPrediction: number\n  error: number\n  exceedsThreshold: boolean\n  yTrue?: number\n  yPred?: number\n  percentageError?: number\n}\n\ninterface ConfusionMatrixData {\n  reference: {\n    matrix: number[][]\n    labels: string[]\n    precision: number\n    recall: number\n    f1: number\n    accuracy: number\n  }\n  current: {\n    matrix: number[][]\n    labels: string[]\n    precision: number\n    recall: number\n    f1: number\n    accuracy: number\n  }\n}\n\nexport default function Mode3Page() {\n  const [businessUnit, setBusinessUnit] = useState('CCS')\n  const [useCase, setUseCase] = useState('CC-Di')\n  const [kpis, setKpis] = useState<KPI[]>([])\n  const [errors, setErrors] = useState<ErrorData[]>([])\n  const [confusionMatrix, setConfusionMatrix] = useState<ConfusionMatrixData>({\n    reference: {\n      matrix: [[0, 0], [0, 0]],\n      labels: ['Class A', 'Class B'],\n      precision: 0,\n      recall: 0,\n      f1: 0,\n      accuracy: 0\n    },\n    current: {\n      matrix: [[0, 0], [0, 0]],\n      labels: ['Class A', 'Class B'],\n      precision: 0,\n      recall: 0,\n      f1: 0,\n      accuracy: 0\n    }\n  })\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const initData = async () => {\n      try {\n        const savedBusinessUnit = localStorage.getItem('businessUnit')\n        const savedUseCase = localStorage.getItem('useCase')\n        if (savedBusinessUnit) setBusinessUnit(savedBusinessUnit)\n        if (savedUseCase) setUseCase(savedUseCase)\n\n        const apiBase = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000';\n        const [metricsRes, errorsRes] = await Promise.all([\n          fetch(`${apiBase}/api/metrics?mode=3`),\n          fetch(`${apiBase}/api/errors`)\n        ]);\n\n        if (!metricsRes.ok || !errorsRes.ok) {\n          throw new Error(`API request failed: ${metricsRes.status} ${errorsRes.status}`);\n        }\n\n        const metricsData = await metricsRes.json();\n        const errorsData = await errorsRes.json();\n\n        // Normalize KPIs data format\n        const normalizedKpis = (metricsData.kpis || Object.entries(metricsData).map(([rowKey, value]) => ({\n          rowKey,\n          value: String(value),\n          status: metricsData.status\n        }))).filter((k: any) => k.rowKey && k.value);\n\n        // Normalize errors data format\n        const normalizedErrors = (errorsData.tableData || errorsData || []).map((e: any) => ({\n          predicted: e.predicted || e.pred || '',\n          actual: e.actual || e.act || '',\n          timePeriod: e.timePeriod || e.date || '',\n          meanPrediction: Number(e.meanPrediction || e.meanPred || 0),\n          error: Number(e.error || e.err || 0),\n          exceedsThreshold: Boolean(e.exceedsThreshold || e.exceedsThresh),\n          ...(e.yTrue !== undefined && { yTrue: Number(e.yTrue) }),\n          ...(e.yPred !== undefined && { yPred: Number(e.yPred) }),\n          ...(e.percentageError !== undefined && { percentageError: Number(e.percentageError) })\n        })).filter((e: any) => e.predicted && e.actual);\n\n        setKpis(normalizedKpis);\n        setErrors(normalizedErrors);\n\n        // Helper function to get numeric value from KPIs\n        const getKpiNumberValue = (key: string): number => {\n          const kpi = normalizedKpis.find((k: any) => k.rowKey === key);\n          if (!kpi) return 0;\n          const num = Number(kpi.value);\n          return isNaN(num) ? 0 : num;\n        };\n\n        setConfusionMatrix({\n          reference: {\n            matrix: [\n              [getKpiNumberValue('refTrueA'), getKpiNumberValue('refFalseB')],\n              [getKpiNumberValue('refFalseA'), getKpiNumberValue('refTrueB')]\n            ],\n            labels: ['Class A', 'Class B'],\n            precision: getKpiNumberValue('refPrecision'),\n            recall: getKpiNumberValue('refRecall'),\n            f1: getKpiNumberValue('refF1'),\n            accuracy: getKpiNumberValue('refAccuracy')\n          },\n          current: {\n            matrix: [\n              [getKpiNumberValue('currTrueA'), getKpiNumberValue('currFalseB')],\n              [getKpiNumberValue('currFalseA'), getKpiNumberValue('currTrueB')]\n            ],\n            labels: ['Class A', 'Class B'],\n            precision: getKpiNumberValue('currPrecision'),\n            recall: getKpiNumberValue('currRecall'),\n            f1: getKpiNumberValue('currF1'),\n            accuracy: getKpiNumberValue('currAccuracy')\n          }\n        });\n      } catch (error) {\n        console.error('Error loading data:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n    initData()\n  }, [])\n\n  // ... rest of the component code remains unchanged ...\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}