{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService.ts"],"sourcesContent":["export async function fetchData() {\n  try {\n    console.log(\"Fetching data from backend via proxy: /api/mode1/data\");\n    // Fetch data from the backend endpoint via Next.js proxy\n    const response = await fetch(`/api/mode1/data`, {\n      credentials: 'include',\n    });\n    \n    console.log(\"Raw response:\", response);\n\n    // Check if the response is successful\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    // Parse the JSON response\n    const rawData = await response.json();\n\n    console.log(\"Parsed data:\", rawData);\n\n    // Adjusted extraction based on actual backend data structure\n    // Example: using filtered_data as KPIs, id_error as errors, and some explanation field if available\n    const kpis = rawData.filtered_data || [];\n    const errors = {\n      plotData: rawData.id_error || [],\n      tableData: rawData.id_error || [],\n    };\n    const xaiExplanation = rawData.xaiExplanation || \"No explanation available\";\n\n    // Return the transformed data\n    return {\n      kpis,\n      errors,\n      xaiExplanation,\n    };\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    throw new Error(\"Failed to fetch and process data\");\n  }\n}\n"],"names":[],"mappings":";;;AAAO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,yDAAyD;QACzD,MAAM,WAAW,MAAM,MAAM,CAAC,eAAe,CAAC,EAAE;YAC9C,aAAa;QACf;QAEA,QAAQ,GAAG,CAAC,iBAAiB;QAE7B,sCAAsC;QACtC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QAEA,0BAA0B;QAC1B,MAAM,UAAU,MAAM,SAAS,IAAI;QAEnC,QAAQ,GAAG,CAAC,gBAAgB;QAE5B,6DAA6D;QAC7D,oGAAoG;QACpG,MAAM,OAAO,QAAQ,aAAa,IAAI,EAAE;QACxC,MAAM,SAAS;YACb,UAAU,QAAQ,QAAQ,IAAI,EAAE;YAChC,WAAW,QAAQ,QAAQ,IAAI,EAAE;QACnC;QACA,MAAM,iBAAiB,QAAQ,cAAc,IAAI;QAEjD,8BAA8B;QAC9B,OAAO;YACL;YACA;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode1/page.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState } from 'react';\n// Removed import Head from 'next/head';\nimport { fetchData } from '../../services/backendService';\n\n// Interfaces for type safety\ninterface KPI {\n  rowKey: string;\n  value: string;\n  status?: string;\n}\n\ninterface PlotDataPoint {\n  x: string;\n  y: number;\n  exceedsThreshold: boolean;\n}\n\ninterface TableDataPoint {\n  id: string;\n  timePeriod: string;\n  meanPrediction?: number;\n  error?: number;\n  percentageError?: number;\n  status: string;\n}\n\ninterface ErrorDataState {\n  plotData: PlotDataPoint[];\n  tableData: TableDataPoint[];\n}\n\nexport default function Mode1Page(): JSX.Element {\n  const [kpis, setKpis] = useState<KPI[]>([]);\n  const [errors, setErrors] = useState<ErrorDataState>({ plotData: [], tableData: [] });\n  const [xaiExplanation, setXaiExplanation] = useState<string>('No explanation available');\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Fetch Data from Backend\n  const initData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Fetch and process data using BackendService.tsx\n      const { kpis: fetchedKpis, errors: fetchedErrors, xaiExplanation: fetchedXai } = await fetchData();\n      setKpis(fetchedKpis);\n      setErrors(fetchedErrors);\n      setXaiExplanation(fetchedXai || 'No explanation available');\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load data. Please check the backend.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    initData();\n  }, []);\n\n  if (loading) return <div className=\"text-white\">Loading...</div>;\n  if (error) return <div className=\"text-red-500\">{error}</div>;\n\n  return (\n    <div className=\"bg-gray-900 min-h-screen text-white\">\n      {/* Removed Head component */}\n      <main className=\"container mx-auto p-6\">\n        {/* Header Section */}\n        <h1 className=\"text-3xl font-bold mb-6\">Drift Detection Dashboard</h1>\n\n        {/* KPIs Section */}\n        <section className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4\">Key Performance Indicators (KPIs)</h2>\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr>\n                <th className=\"border p-2\">Row Key</th>\n                <th className=\"border p-2\">Value</th>\n                <th className=\"border p-2\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {kpis.map((kpi, index) => (\n                <tr key={index}>\n                  <td className=\"border p-2\">{kpi.rowKey}</td>\n                  <td className=\"border p-2\">{kpi.value}</td>\n                  <td className=\"border p-2\">{kpi.status}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </section>\n\n        {/* Errors Plot Section */}\n        <section className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4\">Error Plot</h2>\n          <div>\n            <canvas id=\"errorPlot\" />\n            {/* Placeholder for Chart.js integration */}\n            {/* You can use Chart.js or another charting library here */}\n          </div>\n        </section>\n\n        {/* Errors Table Section */}\n        <section className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4\">Error Details</h2>\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr>\n                <th className=\"border p-2\">ID</th>\n                <th className=\"border p-2\">Time Period</th>\n                <th className=\"border p-2\">Mean Prediction</th>\n                <th className=\"border p-2\">Error</th>\n                <th className=\"border p-2\">Percentage Error</th>\n                <th className=\"border p-2\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {errors.tableData.map((row, index) => (\n                <tr key={index}>\n                  <td className=\"border p-2\">{row.id}</td>\n                  <td className=\"border p-2\">{row.timePeriod}</td>\n                  <td className=\"border p-2\">{(row.meanPrediction ?? 0).toFixed(2)}</td>\n                  <td className=\"border p-2\">{(row.error ?? 0).toFixed(2)}</td>\n                  <td className=\"border p-2\">{(row.percentageError ?? 0).toFixed(2)}%</td>\n                  <td className=\"border p-2\">{row.status}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </section>\n\n        {/* XAI Explanation Section */}\n        <section className=\"mb-8\">\n          <h2 className=\"text-xl font-semibold mb-4\">XAI Explanation</h2>\n          <pre className=\"bg-gray-800 p-4 rounded whitespace-pre-wrap\">{xaiExplanation}</pre>\n        </section>\n      </main>\n    </div>\n  );\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}