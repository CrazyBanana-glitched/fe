{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/components/D3ConfusionMatrix.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport * as d3 from 'd3'\r\n\r\nexport interface D3ConfusionMatrixProps {\r\n  data: number[][]\r\n  labels: string[]\r\n  title?: string\r\n  width: number\r\n  height: number\r\n}\r\n\r\nconst D3ConfusionMatrix: React.FC<D3ConfusionMatrixProps> = ({\r\n  data,\r\n  labels,\r\n  title,\r\n  width,\r\n  height,\r\n}) => {\r\n  const svgRef = useRef<SVGSVGElement>(null)\r\n\r\n  useEffect(() => {\r\n    if (!data.length) return\r\n\r\n    const maxVal = d3.max(data.flat()) ?? 1\r\n    const margin = { top: title ? 30 : 10, right: 10, bottom: 10, left: 10 }\r\n    const innerW = width - margin.left - margin.right\r\n    const innerH = height - margin.top - margin.bottom\r\n\r\n    const x = d3\r\n      .scaleBand<string>()\r\n      .domain(labels)\r\n      .range([0, innerW])\r\n      .padding(0.05)\r\n\r\n    const y = d3\r\n      .scaleBand<string>()\r\n      .domain(labels)\r\n      .range([0, innerH])\r\n      .padding(0.05)\r\n\r\n    const color = d3\r\n      .scaleSequential(d3.interpolateBlues)\r\n      .domain([0, maxVal])\r\n\r\n    const svg = d3.select(svgRef.current!)\r\n    svg.selectAll('*').remove()\r\n    svg.attr('viewBox', `0 0 ${width} ${height}`)\r\n\r\n    // optional title\r\n    if (title) {\r\n      svg\r\n        .append('text')\r\n        .attr('x', width / 2)\r\n        .attr('y', margin.top / 2)\r\n        .attr('text-anchor', 'middle')\r\n        .style('fill', 'white')\r\n        .style('font-size', '14px')\r\n        .text(title)\r\n    }\r\n\r\n    const g = svg\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n    // cells + centered text\r\n    data.forEach((row, i) => {\r\n      row.forEach((val, j) => {\r\n        const xpos = x(labels[j])!\r\n        const ypos = y(labels[i])!\r\n\r\n        g.append('rect')\r\n          .attr('x', xpos)\r\n          .attr('y', ypos)\r\n          .attr('width', x.bandwidth())\r\n          .attr('height', y.bandwidth())\r\n          .attr('fill', color(val))\r\n\r\n        g.append('text')\r\n          .attr('x', xpos + x.bandwidth() / 2)\r\n          .attr('y', ypos + y.bandwidth() / 2)\r\n          .attr('text-anchor', 'middle')\r\n          .attr('dominant-baseline', 'middle')\r\n          .style('font-size', `${Math.min(x.bandwidth(), y.bandwidth()) * 0.4}px`)\r\n          .attr('fill', val > maxVal / 2 ? 'white' : 'black')\r\n          .text(val)\r\n      })\r\n    })\r\n\r\n    // axes (no tick lines)\r\n    g.append('g')\r\n      .call(d3.axisTop(x).tickSize(0))\r\n      .selectAll('text')\r\n      .style('font-size', '10px')\r\n\r\n    g.append('g')\r\n      .call(d3.axisLeft(y).tickSize(0))\r\n      .selectAll('text')\r\n      .style('font-size', '10px')\r\n  }, [data, labels, width, height, title])\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default D3ConfusionMatrix\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode2/DriftWarningChart.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\ninterface PlotDataPoint {\n  x: number;\n  y: number;\n  exceedsThreshold: boolean;\n}\n\ninterface DriftWarningChartProps {\n  plotData: PlotDataPoint[];\n}\n\nexport default function DriftWarningChart({ plotData }: DriftWarningChartProps): React.ReactElement {\n  const chartRef = useRef<Chart | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    console.log('DriftWarningChart plotData length:', plotData.length);\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    if (!ctx) return;\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n\n    chartRef.current = new Chart(ctx, {\n      type: 'scatter',\n      data: {\n        datasets: [\n          {\n            label: 'Drift State',\n            data: plotData.map((item) => ({ x: item.x, y: item.y })),\n            borderColor: 'rgb(75, 192, 192)',\n            backgroundColor: 'rgba(75, 192, 192, 0.8)',\n            pointBackgroundColor: plotData.map((item) => {\n              if (item.y === 0) return 'rgba(54, 162, 235, 0.8)'; // normal - blue\n              if (item.y === 1) return 'rgba(255, 206, 86, 0.8)'; // warning - yellow\n              if (item.y === 2) return 'rgba(255, 99, 132, 0.8)'; // drift - red\n              return 'rgba(201, 203, 207, 0.8)'; // default grey\n            }),\n            borderWidth: 2,\n            showLine: true,\n            tension: 0.1,\n            fill: false,\n            stepped: false,\n            pointRadius: 5,\n            pointHoverRadius: 7,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            labels: {\n              color: '#e5e7eb',\n            },\n          },\n          tooltip: {\n            mode: 'nearest',\n            intersect: true,\n            callbacks: {\n              label: function(context) {\n                const y = context.parsed.y;\n                if (y === 0) return 'Normal';\n                if (y === 1) return 'Warning';\n                if (y === 2) return 'Drift';\n                return 'Unknown';\n              }\n            }\n          },\n        },\n        scales: {\n          x: {\n            type: 'linear',\n            title: {\n              display: true,\n              text: 'Index',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            ticks: {\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Drift State',\n              color: '#93c5fd',\n              font: {\n                weight: 'bold',\n              },\n            },\n            beginAtZero: true,\n            ticks: {\n              stepSize: 1,\n              callback: function (this: any, tickValue: string | number) {\n                const value = typeof tickValue === 'string' ? parseInt(tickValue) : tickValue;\n                if (value === 0) return 'Normal';\n                if (value === 1) return 'Warning';\n                if (value === 2) return 'Drift';\n                return '';\n              },\n              color: '#e5e7eb',\n              font: {\n                size: 12,\n              },\n            },\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)',\n            },\n            min: 0,\n            max: 2,\n          },\n        },\n        animation: {\n          duration: 1000,\n          easing: 'easeInOutQuad',\n        },\n        elements: {\n          point: {\n            radius: 5,\n            hoverRadius: 7,\n          },\n        },\n      },\n    });\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n        chartRef.current = null;\n      }\n    };\n  }, [plotData]);\n\n  return <canvas ref={canvasRef} style={{ width: '100%', height: '416px' }} />;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAFA;;;;AAGA,6JAAA,CAAA,QAAK,CAAC,QAAQ,IAAI,6JAAA,CAAA,gBAAa;AAYhB,SAAS,kBAAkB,EAAE,QAAQ,EAA0B;IAC5E,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAgB;IACtC,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA4B;IAEnD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC,sCAAsC,SAAS,MAAM;QACjE,IAAI,CAAC,UAAU,OAAO,EAAE;QACxB,MAAM,MAAM,UAAU,OAAO,CAAC,UAAU,CAAC;QACzC,IAAI,CAAC,KAAK;QAEV,IAAI,SAAS,OAAO,EAAE;YACpB,SAAS,OAAO,CAAC,OAAO;QAC1B;QAEA,SAAS,OAAO,GAAG,IAAI,6JAAA,CAAA,QAAK,CAAC,KAAK;YAChC,MAAM;YACN,MAAM;gBACJ,UAAU;oBACR;wBACE,OAAO;wBACP,MAAM,SAAS,GAAG,CAAC,CAAC,OAAS,CAAC;gCAAE,GAAG,KAAK,CAAC;gCAAE,GAAG,KAAK,CAAC;4BAAC,CAAC;wBACtD,aAAa;wBACb,iBAAiB;wBACjB,sBAAsB,SAAS,GAAG,CAAC,CAAC;4BAClC,IAAI,KAAK,CAAC,KAAK,GAAG,OAAO,2BAA2B,gBAAgB;4BACpE,IAAI,KAAK,CAAC,KAAK,GAAG,OAAO,2BAA2B,mBAAmB;4BACvE,IAAI,KAAK,CAAC,KAAK,GAAG,OAAO,2BAA2B,cAAc;4BAClE,OAAO,4BAA4B,eAAe;wBACpD;wBACA,aAAa;wBACb,UAAU;wBACV,SAAS;wBACT,MAAM;wBACN,SAAS;wBACT,aAAa;wBACb,kBAAkB;oBACpB;iBACD;YACH;YACA,SAAS;gBACP,YAAY;gBACZ,qBAAqB;gBACrB,SAAS;oBACP,QAAQ;wBACN,QAAQ;4BACN,OAAO;wBACT;oBACF;oBACA,SAAS;wBACP,MAAM;wBACN,WAAW;wBACX,WAAW;4BACT,OAAO,SAAS,OAAO;gCACrB,MAAM,IAAI,QAAQ,MAAM,CAAC,CAAC;gCAC1B,IAAI,MAAM,GAAG,OAAO;gCACpB,IAAI,MAAM,GAAG,OAAO;gCACpB,IAAI,MAAM,GAAG,OAAO;gCACpB,OAAO;4BACT;wBACF;oBACF;gBACF;gBACA,QAAQ;oBACN,GAAG;wBACD,MAAM;wBACN,OAAO;4BACL,SAAS;4BACT,MAAM;4BACN,OAAO;4BACP,MAAM;gCACJ,QAAQ;4BACV;wBACF;wBACA,MAAM;4BACJ,OAAO;wBACT;wBACA,OAAO;4BACL,OAAO;4BACP,MAAM;gCACJ,MAAM;4BACR;wBACF;oBACF;oBACA,GAAG;wBACD,OAAO;4BACL,SAAS;4BACT,MAAM;4BACN,OAAO;4BACP,MAAM;gCACJ,QAAQ;4BACV;wBACF;wBACA,aAAa;wBACb,OAAO;4BACL,UAAU;4BACV,UAAU,SAAqB,SAA0B;gCACvD,MAAM,QAAQ,OAAO,cAAc,WAAW,SAAS,aAAa;gCACpE,IAAI,UAAU,GAAG,OAAO;gCACxB,IAAI,UAAU,GAAG,OAAO;gCACxB,IAAI,UAAU,GAAG,OAAO;gCACxB,OAAO;4BACT;4BACA,OAAO;4BACP,MAAM;gCACJ,MAAM;4BACR;wBACF;wBACA,MAAM;4BACJ,OAAO;wBACT;wBACA,KAAK;wBACL,KAAK;oBACP;gBACF;gBACA,WAAW;oBACT,UAAU;oBACV,QAAQ;gBACV;gBACA,UAAU;oBACR,OAAO;wBACL,QAAQ;wBACR,aAAa;oBACf;gBACF;YACF;QACF;QAEA,OAAO;YACL,IAAI,SAAS,OAAO,EAAE;gBACpB,SAAS,OAAO,CAAC,OAAO;gBACxB,SAAS,OAAO,GAAG;YACrB;QACF;IACF,GAAG;QAAC;KAAS;IAEb,qBAAO,8OAAC;QAAO,KAAK;QAAW,OAAO;YAAE,OAAO;YAAQ,QAAQ;QAAQ;;;;;;AACzE","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/services/backendService3.ts"],"sourcesContent":["// services/backendService3.ts\n\nexport interface KPI {\n    rowKey: string;\n    value: string;\n    status?: string;\n  }\n  \n  export interface PlotDataPoint {\n    x: number;\n    y: number;\n    exceedsThreshold: boolean;\n    // `value` isn’t needed here, but you can add `value?: number` if you like\n  }\n  \n  export interface TableDataPoint {\n    id: string;\n    timePeriod: string;\n    status: string;\n  }\n  \n  export interface OutletsExceedingThreshold {\n    id: string;\n    y_true: number;\n    y_pred: number;\n    percentage_error: number;\n  }\n  \n  export interface DetailedMetric {\n    total_samples: number;\n    correct_predictions: { count: number; percentage: number };\n    incorrect_predictions: { count: number; percentage: number };\n    misclassifications: Record<string, { count: number; percentage: number }>;\n  }\n  \n  export async function fetchData(): Promise<{\n    kpis: KPI[];\n    errors: { plotData: PlotDataPoint[]; tableData: TableDataPoint[] };\n    referenceMatrix: number[][];\n    currentMatrix: number[][];\n    outletsExceedingThreshold: OutletsExceedingThreshold[];\n    detailedMetrics: Record<string, DetailedMetric>;\n    state: string;\n    coverage: any;\n    clusters: any;\n    backwardAnalysis: any;\n    currentPeriod: string;\n    totalOutlets: number;\n    outletsExceedingThresholdCount: number;\n    xaiExplanation: string;\n  }> {\n    try {\n      console.log(\"Fetching data from backend via relative URL: /mode4/data\");\n      const response = await fetch(`/mode4/data`, { credentials: \"include\" });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const rawData = await response.json();\n      console.log(\"Parsed data:\", rawData);\n  \n      // 1) Build KPIs\n      const kpis: KPI[] = [\n        {\n          rowKey: \"Drift Detected\",\n          value: rawData.drift_state?.drift_detected ? \"Yes\" : \"No\",\n          status: rawData.drift_state?.drift_detected ? \"Alert\" : \"Normal\",\n        },\n        {\n          rowKey: \"Jensen–Shannon Divergence\",\n          value: rawData.drift_state?.jensen_shannon_divergence != null\n            ? rawData.drift_state.jensen_shannon_divergence.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Population Stability Index\",\n          value: rawData.drift_state?.population_stability_index != null\n            ? rawData.drift_state.population_stability_index.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Precision (Reference)\",\n          value: rawData.metrics?.reference?.precision != null\n            ? rawData.metrics.reference.precision.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Precision (Current)\",\n          value: rawData.metrics?.current?.precision != null\n            ? rawData.metrics.current.precision.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Recall (Reference)\",\n          value: rawData.metrics?.reference?.recall != null\n            ? rawData.metrics.reference.recall.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Recall (Current)\",\n          value: rawData.metrics?.current?.recall != null\n            ? rawData.metrics.current.recall.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"F1 Score (Reference)\",\n          value: rawData.metrics?.reference?.f1_score != null\n            ? rawData.metrics.reference.f1_score.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"F1 Score (Current)\",\n          value: rawData.metrics?.current?.f1_score != null\n            ? rawData.metrics.current.f1_score.toFixed(4)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Accuracy\",\n          value: rawData.overall_metrics?.accuracy != null\n            ? rawData.overall_metrics.accuracy.toFixed(2)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Error Rate\",\n          value: rawData.overall_metrics?.error_rate != null\n            ? rawData.overall_metrics.error_rate.toFixed(2)\n            : \"N/A\",\n        },\n        {\n          rowKey: \"Status\",\n          value: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n          status: rawData.drift_state?.drift_detected ? \"Warning\" : \"Normal\",\n        },\n      ];\n  \n      // 2) Confusion matrices: raw → reference, normalized → current\n      const referenceMatrix: number[][] = rawData.confusion_matrix?.raw ?? [];\n      const currentMatrix: number[][] = rawData.confusion_matrix?.normalized ?? [];\n  \n      // 3) Build the drift/warning plot from indices\n      const plotData: PlotDataPoint[] = [];\n      const idx = rawData.indices ?? { normal: [], warning: [], drift: [] };\n      idx.normal.forEach((x: number) =>\n        plotData.push({ x, y: 0, exceedsThreshold: false })\n      );\n      idx.warning.forEach((x: number) =>\n        plotData.push({ x, y: 1, exceedsThreshold: false })\n      );\n      idx.drift.forEach((x: number) =>\n        plotData.push({ x, y: 2, exceedsThreshold: false })\n      );\n      plotData.sort((a, b) => a.x - b.x);\n  \n      // 4) Misclassified table\n      const tableData: TableDataPoint[] = (rawData.misclassified_table || []).map(\n        (item: any) => ({\n          id: item.id,\n          timePeriod: `True ${item.True} → Pred ${item.Predicted}`,\n          status: \"Misclassified\",\n        })\n      );\n  \n      // 5) Outlets exceeding threshold (still returned for BC)\n      const outletsExceedingThreshold: OutletsExceedingThreshold[] = (\n        rawData.outlets_exceeding_threshold || []\n      ).map((item: any) => ({\n        id: item.id?.toString() || \"\",\n        y_true: item.y_true || 0,\n        y_pred: item.y_pred || 0,\n        percentage_error: item.percentage_error || 0,\n      }));\n  \n      // 6) Detailed metrics\n      const detailedMetrics: Record<string, DetailedMetric> =\n        rawData.detailed_metrics || {};\n  \n      // 7) Other fields\n      return {\n        kpis,\n        errors: { plotData, tableData },\n        referenceMatrix,\n        currentMatrix,\n        outletsExceedingThreshold,\n        detailedMetrics,\n        state: rawData.state || \"Unknown\",\n        coverage: rawData.coverage || {},\n        clusters: rawData.clusters || {},\n        backwardAnalysis: rawData.backward_analysis || {},\n        currentPeriod: rawData.current_period || \"N/A\",\n        totalOutlets: rawData.total_outlets || 0,\n        outletsExceedingThresholdCount:\n          rawData.outlets_exceeding_threshold_count || 0,\n        xaiExplanation: rawData.xai?.explanation || \"No explanation available\",\n      };\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      throw new Error(\"Failed to fetch and process data\");\n    }\n  }\n  "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/fe/octave-drift-detection/src/app/mode4/page.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { useEffect, useState } from \"react\"\nimport Head from \"next/head\"\nimport D3ConfusionMatrix from \"../../components/D3ConfusionMatrix\"\nimport DriftWarningChart from \"../mode2/DriftWarningChart\"\nimport ReactMarkdown from \"react-markdown\"\nimport { AlertCircle, AlertTriangle, CheckCircle, RefreshCw, Info } from \"lucide-react\"\nimport { fetchData, type KPI, type PlotDataPoint, type TableDataPoint } from \"../../services/backendService3\"\n\ninterface DetailedMetric {\n  total_samples: number\n  correct_predictions: { count: number; percentage: number }\n  incorrect_predictions: { count: number; percentage: number }\n  misclassifications: Record<string, { count: number; percentage: number }>\n}\n\nexport default function Mode4Page(): React.ReactElement {\n  // --- STATE HOOKS ---\n  const [businessUnit, setBusinessUnit] = useState<string>(\"\")\n  const [useCase, setUseCase] = useState<string>(\"\")\n  const useCases: Record<string, string[]> = {\n    CCS: [\"CC-Di\", \"CC-MT\"],\n    JMSL: [\"JM-Ch\"],\n  }\n\n  const handleBusinessUnitChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setBusinessUnit(e.target.value)\n    setUseCase(\"\")\n  }\n  const handleUseCaseChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUseCase(e.target.value)\n  }\n\n  const [kpis, setKpis] = useState<KPI[]>([])\n  const [errors, setErrors] = useState<{ plotData: PlotDataPoint[]; tableData: TableDataPoint[] }>({\n    plotData: [],\n    tableData: [],\n  })\n  const [referenceMatrix, setReferenceMatrix] = useState<number[][]>([])\n  const [currentMatrix, setCurrentMatrix] = useState<number[][]>([])\n  const [detailedMetrics, setDetailedMetrics] = useState<Record<string, DetailedMetric>>({})\n\n  const [stateVal, setStateVal] = useState<string>(\"Unknown\")\n  const [coverage, setCoverage] = useState<any>({})\n  const [clusters, setClusters] = useState<any>({})\n  const [backwardAnalysis, setBackwardAnalysis] = useState<any>({})\n  const [currentPeriod, setCurrentPeriod] = useState<string>(\"N/A\")\n  const [totalOutlets, setTotalOutlets] = useState<number>(0)\n  const [outletsExceedingThresholdCount, setOutletsExceedingThresholdCount] = useState<number>(0)\n  const [xaiExplanation, setXaiExplanation] = useState<string>(\"No explanation available\")\n  const [backendError, setBackendError] = useState<string | null>(null)\n\n  const [loading, setLoading] = useState<boolean>(true)\n\n  // build labels [\"0\",\"1\",…] for axes\n  const makeLabels = (n: number) => Array.from({ length: n }, (_, i) => i.toString())\n\n  // cap matrix square at 300px\n  const computeSquareSize = (grid: number[][]) => {\n    const maxPx = 300\n    const rows = grid.length\n    const cols = grid[0]?.length || 0\n    if (!rows || !cols) return maxPx\n    const cellSize = Math.min(maxPx / rows, maxPx / cols)\n    return Math.max(rows, cols) * cellSize\n  }\n\n  // Helper function to get status color\n  const getStatusColor = (status: string | undefined) => {\n    if (!status) return \"text-gray-400\"\n    switch (status.toLowerCase()) {\n      case \"warning\":\n        return \"text-amber-400\"\n      case \"error\":\n        return \"text-rose-500\"\n      case \"success\":\n      case \"normal\":\n        return \"text-emerald-400\"\n      default:\n        return \"text-sky-400\"\n    }\n  }\n\n  // Helper function to get status icon\n  const getStatusIcon = (status: string | undefined) => {\n    if (!status) return <Info className=\"h-5 w-5 text-gray-400\" />\n    switch (status.toLowerCase()) {\n      case \"warning\":\n        return <AlertTriangle className=\"h-5 w-5 text-amber-400\" />\n      case \"error\":\n        return <AlertCircle className=\"h-5 w-5 text-rose-500\" />\n      case \"success\":\n      case \"normal\":\n        return <CheckCircle className=\"h-5 w-5 text-emerald-400\" />\n      default:\n        return <Info className=\"h-5 w-5 text-sky-400\" />\n    }\n  }\n\n  // derived KPIs\n  const derivedKpis: KPI[] = [\n    {\n      rowKey: \"Drift Detected\",\n      value: outletsExceedingThresholdCount === 0 ? \"No\" : \"Yes\",\n      status: outletsExceedingThresholdCount === 0 ? \"Normal\" : \"Warning\",\n    },\n    {\n      rowKey: \"Accuracy\",\n      value: kpis.find((k) => k.rowKey.toLowerCase() === \"accuracy\")?.value ?? \"N/A\",\n      status: \"Normal\",\n    },\n    {\n      rowKey: \"Error Rate\",\n      value: (() => {\n        const acc = Number.parseFloat(kpis.find((k) => k.rowKey.toLowerCase() === \"accuracy\")?.value ?? \"\")\n        return !isNaN(acc) ? (100 - acc).toFixed(2) : \"N/A\"\n      })(),\n      status: \"Normal\",\n    },\n    {\n      rowKey: \"Status\",\n      value: stateVal,\n      status: stateVal === \"Normal\" ? \"Normal\" : \"Warning\",\n    },\n  ]\n\n  // merge without duplicates\n  const mergedKpis: KPI[] = [...kpis]\n  derivedKpis.forEach((d) => {\n    if (!mergedKpis.find((k) => k.rowKey === d.rowKey)) mergedKpis.push(d)\n  })\n\n  // --- FETCH DATA ---\n  const initData = async () => {\n    setLoading(true)\n    setBackendError(null)\n    try {\n      const {\n        kpis: fetchedKpis,\n        errors: fetchedErrors,\n        referenceMatrix: fetchedRefM,\n        currentMatrix: fetchedCurrM,\n        detailedMetrics: fetchedDetailed,\n        state: fetchedState,\n        coverage: fetchedCoverage,\n        clusters: fetchedClusters,\n        backwardAnalysis: fetchedBackward,\n        currentPeriod: fetchedPeriod,\n        totalOutlets: fetchedTotal,\n        outletsExceedingThresholdCount: fetchedCount,\n        xaiExplanation: fetchedXai,\n      } = await fetchData()\n\n      setKpis(fetchedKpis)\n      setErrors(fetchedErrors)\n      setReferenceMatrix(fetchedRefM)\n      setCurrentMatrix(fetchedCurrM)\n      setDetailedMetrics(fetchedDetailed)\n      setStateVal(fetchedState)\n      setCoverage(fetchedCoverage)\n      setClusters(fetchedClusters)\n      setBackwardAnalysis(fetchedBackward)\n      setCurrentPeriod(fetchedPeriod)\n      setTotalOutlets(fetchedTotal)\n      setOutletsExceedingThresholdCount(fetchedCount)\n      setXaiExplanation(fetchedXai)\n    } catch (err) {\n      console.error(\"Error fetching data:\", err)\n      setBackendError(\n        err instanceof Error ? `Failed to load data: ${err.message}` : \"Failed to load data: Unknown error\",\n      )\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    initData()\n  }, [])\n\n  // filter out N/A values for display\n  const displayedKpis = mergedKpis.filter((k) => k.value !== \"N/A\")\n\n  return (\n    <div className=\"bg-gradient-to-b from-gray-950 to-gray-900 min-h-screen flex flex-col\">\n      <Head>\n        <title>Mode 4 | CL Dashboard</title>\n      </Head>\n      <main className=\"flex-grow container mx-auto px-4 py-8\">\n        {/* Backend Error Fallback */}\n        {backendError && (\n          <div className=\"bg-rose-950/40 border border-rose-800/60 rounded-lg p-4 mb-6 backdrop-blur-sm shadow-lg animate-fade-in\">\n            <div className=\"flex items-center\">\n              <AlertCircle className=\"h-5 w-5 text-rose-400 mr-2\" />\n              <h3 className=\"text-lg font-medium text-rose-300\">Backend Error</h3>\n            </div>\n            <p className=\"mt-2 text-rose-200\">{backendError}</p>\n            <p className=\"mt-2 text-rose-200/80 text-sm\">Displaying fallback data. Some features may be limited.</p>\n            <button\n              onClick={initData}\n              className=\"mt-3 px-4 py-2 bg-rose-800/50 hover:bg-rose-700/70 text-white rounded-md text-sm font-medium transition-colors duration-200 flex items-center gap-2\"\n            >\n              <RefreshCw className=\"h-4 w-4\" />\n              Retry Connection\n            </button>\n          </div>\n        )}\n\n        {/* Header Section */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-2\">\n                OCTAVE - CL Dashboard\n              </h2>\n              <p className=\"text-sky-300 flex items-center gap-2\">\n                <span className=\"inline-block h-2 w-2 rounded-full bg-sky-400 animate-pulse\"></span>\n                Current Period: {loading ? \"Loading...\" : currentPeriod}\n              </p>\n            </div>\n            <button\n              onClick={initData}\n              className=\"mt-4 md:mt-0 px-4 py-2 bg-sky-800/40 hover:bg-sky-700/60 text-white rounded-md text-sm font-medium transition-colors duration-200 flex items-center gap-2 self-start\"\n            >\n              <RefreshCw className=\"h-4 w-4\" />\n              Refresh Data\n            </button>\n          </div>\n\n          {/* Business Unit / Use Case */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2 flex items-center gap-2\">\n                <span className=\"inline-flex items-center justify-center w-6 h-6 rounded-full bg-sky-800/40 text-xs\">\n                  1\n                </span>\n                Business Unit\n              </h3>\n              <select\n                className=\"w-full bg-gray-800/80 border border-sky-700/50 rounded-md p-2 text-white focus:ring-2 focus:ring-sky-500 focus:border-transparent transition-all duration-200\"\n                value={businessUnit}\n                onChange={handleBusinessUnitChange}\n              >\n                <option value=\"\">Select Business Unit</option>\n                {Object.keys(useCases).map((bu) => (\n                  <option key={bu} value={bu}>\n                    {bu}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2 flex items-center gap-2\">\n                <span className=\"inline-flex items-center justify-center w-6 h-6 rounded-full bg-sky-800/40 text-xs\">\n                  2\n                </span>\n                Use Case\n              </h3>\n              <select\n                className=\"w-full bg-gray-800/80 border border-sky-700/50 rounded-md p-2 text-white focus:ring-2 focus:ring-sky-500 focus:border-transparent transition-all duration-200\"\n                value={useCase}\n                onChange={handleUseCaseChange}\n                disabled={!businessUnit}\n              >\n                <option value=\"\">{businessUnit ? \"Select Use Case\" : \"Select BU first\"}</option>\n                {(useCases[businessUnit] || []).map((uc) => (\n                  <option key={uc} value={uc}>\n                    {uc}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2 flex items-center gap-2\">\n                <span className=\"inline-flex items-center justify-center w-6 h-6 rounded-full bg-sky-800/40 text-xs\">\n                  3\n                </span>\n                Short Code\n              </h3>\n              <div className=\"w-full bg-gray-800/80 border border-sky-700/50 rounded-md p-2 text-white\">\n                {businessUnit && useCase ? `${businessUnit.substring(0, 2)}-${useCase.substring(0, 2)}` : \"-\"}\n              </div>\n            </div>\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2 flex items-center gap-2\">\n                <span className=\"inline-flex items-center justify-center w-6 h-6 rounded-full bg-sky-800/40 text-xs\">\n                  4\n                </span>\n                Runtime\n              </h3>\n              <div className=\"w-full bg-gray-800/80 border border-sky-700/50 rounded-md p-2 text-white flex items-center\">\n                <span className=\"inline-block h-2 w-2 rounded-full bg-emerald-400 mr-2\"></span>\n                2h 45m\n              </div>\n            </div>\n          </div>\n\n          {/* Key Metrics */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md transition-all duration-300 hover:shadow-sky-900/20 hover:border-sky-700/50\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2\">Current Alert Time</h3>\n              <div className=\"flex items-center\">\n                <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 text-sky-300\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                  </svg>\n                </div>\n                <p className=\"text-xl font-semibold text-white\">\n                  {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"alertTime\")?.value || \"N/A\"}\n                </p>\n              </div>\n            </div>\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md transition-all duration-300 hover:shadow-sky-900/20 hover:border-sky-700/50\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2\">No. of Runtime</h3>\n              <div className=\"flex items-center\">\n                <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 text-sky-300\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n                    />\n                  </svg>\n                </div>\n                <p className=\"text-xl font-semibold text-white\">\n                  {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"runtimeCount\")?.value || \"0\"}\n                </p>\n              </div>\n            </div>\n            <div className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md transition-all duration-300 hover:shadow-sky-900/20 hover:border-sky-700/50\">\n              <h3 className=\"text-lg font-medium text-sky-300 mb-2\">Alert Keeper</h3>\n              <div className=\"flex items-center\">\n                <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 text-sky-300\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                    />\n                  </svg>\n                </div>\n                <p className=\"text-xl font-semibold text-white\">\n                  {loading ? \"Loading...\" : kpis.find((k) => k.rowKey === \"alertKeeper\")?.value || \"N/A\"}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* KPI Section */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Key Performance Indicators\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n            {displayedKpis.map((kpi) => (\n              <div\n                key={kpi.rowKey}\n                className=\"bg-gradient-to-br from-sky-950/40 to-sky-900/20 p-4 rounded-lg border border-sky-800/30 shadow-md transition-all duration-300 hover:shadow-sky-900/20 hover:border-sky-700/50\"\n              >\n                <h3 className=\"text-lg font-medium text-sky-300 mb-2\">{kpi.rowKey}</h3>\n                <div className=\"flex items-center\">\n                  <div className=\"w-10 h-10 rounded-full bg-sky-800/40 flex items-center justify-center mr-3\">\n                    {getStatusIcon(kpi.status)}\n                  </div>\n                  <p className={`text-xl font-semibold ${getStatusColor(kpi.status)}`}>\n                    {loading ? \"Loading...\" : kpi.value}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Drift & Warning Chart */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Drift & Warning Over Time\n          </h2>\n          <div className=\"bg-gray-800/60 rounded-lg p-4 border border-gray-700/50 h-72\">\n            {!loading ? (\n              <DriftWarningChart plotData={errors.plotData} />\n            ) : (\n              <div className=\"flex items-center justify-center h-full\">\n                <div className=\"flex flex-col items-center\">\n                  <svg\n                    className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle\n                      className=\"opacity-25\"\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"4\"\n                    ></circle>\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    ></path>\n                  </svg>\n                  <div className=\"text-sky-300\">Loading chart data...</div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Confusion Matrices */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          {[{ title: \"Current Matrix\", grid: referenceMatrix }].map(({ title, grid }, idx) => {\n            const side = computeSquareSize(grid)\n            return (\n              <div\n                key={idx}\n                className=\"bg-gray-900/80 rounded-xl shadow-xl p-6 border border-gray-700/50 backdrop-blur-sm flex flex-col items-center\"\n              >\n                <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n                  {title}\n                </h2>\n                {!loading && grid.length > 0 ? (\n                  <div\n                    className=\"bg-gray-800/60 rounded-lg p-4 border border-gray-700/50\"\n                    style={{ width: side + 40, height: side + 40 }}\n                  >\n                    <div style={{ width: side, height: side }}>\n                      <D3ConfusionMatrix data={grid} labels={makeLabels(grid[0].length)} width={side} height={side} />\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"flex items-center justify-center h-64 w-full bg-gray-800/60 rounded-lg border border-gray-700/50\">\n                    <div className=\"flex flex-col items-center\">\n                      <svg\n                        className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <circle\n                          className=\"opacity-25\"\n                          cx=\"12\"\n                          cy=\"12\"\n                          r=\"10\"\n                          stroke=\"currentColor\"\n                          strokeWidth=\"4\"\n                        ></circle>\n                        <path\n                          className=\"opacity-75\"\n                          fill=\"currentColor\"\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                        ></path>\n                      </svg>\n                      <div className=\"text-sky-300\">Loading matrix data...</div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )\n          })}\n        </div>\n\n        {/* Detailed Metrics */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 mb-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            Detailed Metrics by Class\n          </h2>\n          {loading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"flex flex-col items-center\">\n                <svg\n                  className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  ></path>\n                </svg>\n                <div className=\"text-sky-300\">Loading metrics data...</div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto rounded-lg border border-gray-700/50\">\n              <table className=\"min-w-full divide-y divide-gray-700/50\">\n                <thead className=\"bg-gray-800/60\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Class\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Total\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Correct\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Incorrect\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-sky-300 uppercase tracking-wider\">\n                      Misclassifications\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-gray-800/30 divide-y divide-gray-700/50\">\n                  {Object.entries(detailedMetrics).map(([cls, dm]) => (\n                    <tr key={cls} className=\"hover:bg-gray-700/30 transition-colors duration-150\">\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{cls}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">{dm.total_samples}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-emerald-400\">\n                        {dm.correct_predictions.count}{\" \"}\n                        <span className=\"text-gray-400\">({dm.correct_predictions.percentage.toFixed(1)}%)</span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-rose-400\">\n                        {dm.incorrect_predictions.count}{\" \"}\n                        <span className=\"text-gray-400\">({dm.incorrect_predictions.percentage.toFixed(1)}%)</span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                        {Object.entries(dm.misclassifications)\n                          .map(\n                            ([p, m]) => `${p}: ${m.count} ${m.percentage > 0 ? `(${m.percentage.toFixed(1)}%)` : \"\"}`,\n                          )\n                          .join(\", \")}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n\n        {/* XAI Result */}\n        <div className=\"bg-gray-900/80 rounded-xl shadow-xl overflow-hidden p-6 border border-gray-700/50 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-sky-600 mb-4\">\n            XAI Result\n          </h2>\n          <div className=\"bg-gray-800/60 rounded-lg p-6 border border-gray-700/50\">\n            {loading ? (\n              <div className=\"flex items-center justify-center py-8\">\n                <div className=\"flex flex-col items-center\">\n                  <svg\n                    className=\"animate-spin h-8 w-8 text-sky-500 mb-2\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle\n                      className=\"opacity-25\"\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"4\"\n                    ></circle>\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    ></path>\n                  </svg>\n                  <div className=\"text-sky-300\">Loading XAI explanation...</div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"prose prose-invert prose-sky max-w-none\">\n                {xaiExplanation ? (\n                  <ReactMarkdown>{xaiExplanation}</ReactMarkdown>\n                ) : (\n                  <div className=\"flex items-center text-rose-400 gap-2\">\n                    <AlertCircle className=\"h-5 w-5\" />\n                    <p>No explanation available</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}